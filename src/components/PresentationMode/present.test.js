const should = require('chai').should()
const {promisify} = require('util')
const {Builder, By, Key} = require("selenium-webdriver")
const { Eyes, VisualGridRunner, Target, RectangleSize, Configuration, BatchInfo, BrowserType, DeviceName, ScreenOrientation} = require('@applitools/eyes-selenium');
const sleep= promisify(setTimeout)
//const {config} = require("chai");

describe('PresentationModeTesting', function () {
    this.timeout(300000)
    let driver
    let eyes, runner
    beforeEach(async function () {
        driver = await new Builder().forBrowser('firefox').build()
        runner = new VisualGridRunner(1)
        eyes = new Eyes(runner)
        let config = new Configuration()
        config.setBatch(new BatchInfo("Hollow Cathode Learning Batch"))
        config.addBrowser(839, 864, BrowserType.FIREFOX);
        config.setApiKey("LyBNg7PUAI2LrhPJLJBt3P0jNjupYxn0CXaZzfpIJhc110")
        eyes.setConfiguration(config)
        await driver.get("http://localhost:3000/")
    })
    afterEach(async function () {
        await driver.quit();
        await eyes.abortAsync();
        const allTestResults= await runner.getAllTestResults()
        console.log(allTestResults)
    })
    it('PresModeTesting', async function(){
        // Generated by Selenium IDE
        await sleep(3000)
        await eyes.open(driver, 'Hollow Cathode Visualization App', 'Presentation Mode demo', new RectangleSize(839, 864));
        await driver.findElement(By.id("PresModeButton")).click()
        await eyes.check("BasDrawing Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("Heat Insert Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("Gas Feed Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("Internal Plasma Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("Electrode Keeper Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("External Plasma Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("Reset Window", Target.window().fully());
        await driver.findElement(By.id("prevButton")).click()
        await eyes.check("FULL Scenes Window", Target.window().fully());
        await driver.findElement(By.id("prevButton")).click()
        await eyes.check("Back to Keeper Window", Target.window().fully());
        await driver.findElement(By.id("prevButton")).click()
        await eyes.check("Back to Internal Window", Target.window().fully());
        await driver.findElement(By.id("prevButton")).click()
        await eyes.check("Back to Gas Feed Window", Target.window().fully());
        await driver.findElement(By.id("nextButton")).click()
        await eyes.check("Internal Plasma Window", Target.window().fully());
        await driver.findElement(By.id("prevButton")).click()
        await driver.findElement(By.id("backButton")).click()
    })
});