{"version":3,"sources":["Header.component..js","Footer.component.js","Galactic.js","ProtoParticle.js","Painter.js","LandingPage.js","LearningMode.js","PresMode.js","SummaryPage.js","Ref.component.js","myRouter.js","App.js","index.js","appModule.module.css"],"names":["HeaderComponent","document","addEventListener","e","currentDropdown","isDropdownButton","target","matches","closest","classList","toggle","querySelectorAll","forEach","dropdown","remove","className","role","href","src","loading","width","alt","React","Component","FooterComponent","path_lm_csv","path_electron","path_xenon","path_ionized_xenon","hallThrusterPrimaryTitleText","hallThrusterPrimaryText","hallThrusterSecondaryOnText","hallThrusterSecondaryOffText","cathodeShellPrimaryText","cathodeCSVText","cathodeCSVSubText","styles","z_index_2","heatText","gasText","gasSubText","plasmaText","plasmaSubText","keeperText","ejectText","recapText","heatKeeperErrorText","heatKeeperErrorSubText","gasKeeperErrorText","gasKeeperErrorSubText","electronImage","Image","xenonImage","ionizedXenonImage","collision_elasticity","TYPE_ELECTRON","TYPE_XENON","TYPE_IONIZEDXENON","particles_array","ejectFlag","ionizeFlag","ProtoParticle","layer","x","y","vx","vy","ax","ay","particle_type","max_y","min_y","max_x","min_x","this","id","Math","ceil","random","ctx","canvas","image","charge","radius","console","error","max","min","floor","height","anime_key","interval","halfLife","push","drawImage","temp_this","window","requestAnimationFrame","animate","cancelAnimationFrame","clearPath","save","beginPath","arc","PI","clip","clearRect","restore","type","setImage","generateElectron","getCathTubeBot","getCathTubeTop","getParticleTubeRightX","getCathTubeLeftX","clearAnimation","index","findIndex","element","indexOf","splice","setIonizeFlag","setEjectFlag","particle","ionize","getCathTubeRightX","draw","delete_self","mmax_y","mmin_y","mmax_x","mmin_x","xenon0","setAnimation","xenonAnimation","startAnimation","limiti","length","i","pop","electron0","electronAnimation","value","Painter","layers","base_cathode","draw_csv_Base_Drawing","bind","getCanvasHeight","XenonGeneratorKey","ElectronGeneratorKey_Top","ElectronGeneratorKey_Bot","layer_number","getLayer","getCanvasWidth","warn","clearCanvas","startElectronGenerator","startXenonGenerator","ionizeParticles","ejectParticles","spawn_rate","generateXenon","setInterval","new_spawn_rate","killXenonGenerator","clearInterval","killElectronGenerator","getInsertRandomX","ELECTRON_RADIUS","stopEjecting","stopIonizing","killAllParticles","LandingPage","props","createRef","ctx0","current","getContext","painter","showElement","elementId","getElementById","style","display","onClick","LearningMode_HandleClick","ref","hidden","to","path_hall_thruster","promisify","require","setTimeout","path_hall_thruster_on","LearningMode","canvas0","canvas1","canvas2","canvas3","HeatInsertToggle_HandleClick","GasFeedToggle_HandleClick","KeeperElectrodeToggle_HandleClick","nextButton_plasma_HandleClick","nextButton_eject_HandleClick","hallThrusterToggle_HandleClick","nextButton_hallThrusterToShell_HandleClick","nextButton_shellToLearningModeCore_HandleClick","nextButton_end_HandleClick","state","deltastage","scene","titleText","text","thrusterButtonText","newScene","canvas_height","clientHeight","canvas_width","clientWidth","exception","location","killProtoParticle","setState","innerHeight","innerWidth","scenarioRefresh","hideElement","removeEventListener","time","Promise","resolve","ctx1","ctx2","ctx3","onclick","subText","draw_csv_keeper_electrode","t","contains","draw_csv_Heat_Insert","draw_csv_gas_feed","draw_csv_internal_plasma","add","replace","a","delay","nextButton","nextButton_Accessible","newThrusterButtonText","PresMode","nextButton_HandleClick","autoToggleButton_HandleClick","autoID","isAuto","newdeltastage","newscene","visibility","SummaryPage","click","RefComponent","MyRouter","path","App","ReactDOM","render","hashType","basename","module","exports"],"mappings":"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","file":"static/js/main.00c8c65d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass HeaderComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"click\", e=>{\r\n            const isDropdownButton= e.target.matches(\"[data-dropdown-button]\")\r\n            if(!isDropdownButton && e.target.closest('[data-dropdown]'!=null))return\r\n\r\n            let currentDropdown\r\n            if(isDropdownButton){\r\n                currentDropdown= e.target.closest('[data-dropdown]')\r\n                currentDropdown.classList.toggle('active')\r\n            }\r\n\r\n            document.querySelectorAll(\"[data-dropdown].active\").forEach(dropdown=>{\r\n                if(dropdown === currentDropdown) return\r\n                dropdown.classList.remove('active')\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"navbar w-nav\" data-animation=\"default\" data-collapse=\"medium\" data-duration=\"400\"\r\n                    data-easing=\"ease\" data-easing2=\"ease\" role=\"banner\">\r\n                <div className=\"container w-container\">\r\n                    <a href=\"/hollow-cathode-visualization/\" className=\"brand w-nav-brand\">\r\n                        <img src=\"/hollow-cathode-visualization/images/psyche.svg\" loading=\"lazy\" width=\"75\" alt=\"Psyche Mission Logo\"/>\r\n                    </a>\r\n                    <nav role=\"navigation\" className=\"nav-menu w-nav-menu\">\r\n                        <div className=\"dropdown\" data-dropdown>\r\n                            <button className=\"text-block\" data-dropdown-button>About Us</button>\r\n                            <div className=\"dropdown-list\">\r\n                                <a href=\"https://psyche.asu.edu/mission/\" className=\"dropdown-link\">Missions</a>\r\n                                <a href=\"https://psyche.asu.edu/events/\" className=\"dropdown-link\">Events</a>\r\n                                <a href=\"https://psyche.asu.edu/get-involved/capstone-projects/capstone-projects-copper-class/hollow-cathode-visualization-penn-state-behrend/\"\r\n                                   className=\"dropdown-link\">Projects</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"https://psyche.asu.edu/contact/\" className=\"nav-menu nav-link\">Contact</a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import Link from 'react-router-dom'\r\nimport React from 'react'\r\nimport './App.css'\r\n\r\nclass FooterComponent extends React.Component{\r\n    render(){\r\n        return(\r\n            <footer className=\"footer wf-section\" role=\"footer\">\r\n\r\n                <div className=\"wf-container footer-flex-container\">\r\n                    <a href=\"https://psyche.asu.edu/\" className=\"footer-logo-link\"><img src=\"/hollow-cathode-visualization/images/psyche.svg\"\r\n                                                                                        loading=\"lazy\"\r\n                                                                                        alt=\"Psyche Mission Logo\"\r\n                                                                                        className=\"footer-image\"/></a>\r\n                    <div>\r\n                        <h1 className=\"footer-heading\">Partnership</h1>\r\n                        <u1 role=\"list\" className=\"w-list-unstyled\">\r\n                            <li>\r\n                                <a href=\"https://behrend.psu.edu/\" className=\"footer-link-1\">Penn State Behrend</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://asu.edu/\" className=\"footer-link-1\">Arizona State University</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://nasa.gov/\" className=\"footer-link-1\">NASA</a>\r\n                            </li>\r\n                        </u1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"footer-heading\">About</h1>\r\n                        <u1 role=\"list\" className=\"w-list-unstyled\">\r\n                            <li>\r\n                                <a href=\"https://psyche.asu.edu/get-involved/careers-and-internships/\" className=\"footer-link-1\">Careers</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href={'#/ref'} className={'footer-link-1'}>References</a>\r\n                            </li>\r\n                        </u1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"footer-heading\">Follow Us:</h1>\r\n                        <u1 role=\"list\" className=\"w-list-unstyled\">\r\n                            <li>\r\n                                <a href=\"https://www.facebook.com/MissionToPsyche\" className=\"footer-link-1\">Facebook</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://www.instagram.com/accounts/login/?next=/missiontopsyche/\" className=\"footer-link-1\">Instagram</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://twitter.com/MissionToPsyche\" className=\"footer-link-1\">Twitter</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href={'https://www.youtube.com/channel/UC2BGcbPW8mxryXnjQcBqk6A/'} className={'footer-link-1'}>YouTube</a>\r\n                            </li>\r\n                        </u1>\r\n                    </div>\r\n                </div>\r\n                <div className={'footer-disclaimer'}>\r\n                    Disclaimer: This work was created in partial fulfilment of Penn State University\r\n                    Capstone Course SWENG 480/481 and CMPSC 484/485. The work is a result of the Psyche\r\n                    Student Collaborations component of NASA’s Psyche Mission <a href={'https://psyche.asu.edu/'} className={'footer-link-2'}>(https://psyche.asu.edu/)</a>. “Psyche: A Journey to a Metal World” [Contract\r\n                    number NNM16AA09C] is part of the NASA Discovery Program mission to\r\n                    solar system targets. Trade names and trademarks of ASU and NASA are\r\n                    used in this work for identification only. Their usage does not constitute an\r\n                    official endorsement, either expressed or implied, by Arizona State\r\n                    University or National Aeronautics and Space Administration. The content\r\n                    is solely the responsibility of the authors and does not necessarily\r\n                    represent the official views of ASU or NASA.\r\n                    </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","// // Huy's Dimensions\r\n// export const canvas_height = 600; // becoming depreciated\r\n// export const canvas_width = 940; // becoming depreciated\r\n// Jack's Dimensions\r\n\r\nimport './App.css';\r\nimport styles from './appModule.module.css';\r\n\r\n/**\r\n * Mapping layers via constants\r\n * These should always be used to reference layers when used as parameters to a function or when interacting with this.state.\r\n * This allows us to easily add and remove layers.\r\n */\r\nexport const base = 0;              // ctx0 // scene[base]\r\nexport const heat = 1;              // ctx1 // scene[heat]\r\nexport const gas = 2;               // ctx2 // scene[gas]\r\nexport const plasma = 3;            // ctx3 // scene[plasma]            // LAYER REPURPOSED (constant still used for state-based logic) //\r\nexport const labels = 3;            // ctx3 //\r\nexport const keeper = 4;            // ctx4 // scene[keeper]            // LAYER DISCONTINUED (constant still used for state-based logic) //\r\nexport const eject = 5;             // ctx5 // scene[eject]             // LAYER DISCONTINUED (constant still used for state-based logic) //\r\nexport const hallThrusterOff = 6;   // ctx6 // scene[hallThrusterOff]   // LAYER DISCONTINUED (constant still used for state-based logic) //\r\nexport const hallThrusterOn = 7;    // ctx7 // scene[hallThrusterOn]    // LAYER DISCONTINUED (constant still used for state-based logic) //\r\n\r\n// Relative Dimensions //\r\n// cathode tube relative position modifiers (how we place the box on the screen relative to the canvas size\r\n// size/location of the ______ relative to the width/height of the window\r\nexport const right_of_cathode_constant = 0.53;\r\nexport const left_of_cathode_constant = 0.29;\r\nexport const top_of_cathode_constant = 0.532;\r\nexport const bottom_of_cathode_constant = 0.71;\r\nexport const particle_right_bounding_box = 1.00;\r\n//\r\n\r\n// Image Paths //\r\nexport const path_lm_csv = \"/hollow-cathode-visualization/images/cross_sectional_view.png\";\r\nexport const path_electron = \"/hollow-cathode-visualization/images/electron.png\";\r\nexport const path_xenon = \"/hollow-cathode-visualization/images/xenon.png\";\r\nexport const path_ionized_xenon = \"/hollow-cathode-visualization/images/ionized_xenon.png\";\r\n//\r\n\r\n\r\n\r\n// Text //\r\nexport const hallThrusterPrimaryTitleText = \"This is a Hall Thruster\"\r\nexport const hallThrusterPrimaryText =\r\n    <div>\r\n        <p>The large circular piece here is a Hall thruster. It moves the Psyche spacecraft through outer space by ionizing particles and shooting them out of the spacecraft. Try turning the Hall thruster on and off.</p>\r\n    </div>\r\n\r\nexport const hallThrusterSecondaryOnText =\r\n    <div>\r\n        <p>The blue plasma coming out of the Hall thruster propels the spacecraft through outer space. The Hall thruster shoots out small charged particles, called ions, away from the spacecraft at extremely high speeds.</p>\r\n        <p>For the Hall thruster to work, it needs a steady stream of tiny particles called electrons. These electrons charge, or ionize, particles from the Hall thruster so they can shoot out of the spacecraft. To generate the electrons, we need a hollow cathode. The hollow cathode is the component right above the Hall thruster.</p>\r\n        {/*<p><b id={\"thrusterGuideText\"} className={\"thrusterGuideText\"}>Click on the hollow cathode above the Hall thruster to learn more about it.</b></p>*/}\r\n    </div>\r\nexport const hallThrusterSecondaryOffText =\r\n    <div>\r\n        <p>The blue plasma coming out of the Hall thruster propels the spacecraft through outer space. The Hall thruster shoots out small charged particles, called ions, away from the spacecraft at extremely high speeds.</p>\r\n        <p>For the Hall thruster to work, it needs a steady stream of tiny particles called electrons. These electrons charge, or ionize, particles from the Hall thruster so they can shoot out of the spacecraft. To generate the electrons, we need a hollow cathode. The hollow cathode is the component right above the Hall thruster.</p>\r\n        {/*<p><b id={\"thrusterGuideText\"} className={\"thrusterGuideText\"}>Click on the hollow cathode above the Hall thruster to learn more about it.</b></p>*/}\r\n    </div>\r\n\r\nexport const clickHollowCathodeGuideText = \"Click on the hollow cathode here to learn more about it\"\r\n\r\nexport const cathodeShellPrimaryTitleText = \"This is a Hollow Cathode\"\r\nexport const cathodeShellPrimaryText =\r\n    <div>\r\n        <p>The hollow cathode has two jobs that both help the Hall thruster work and make sure the Psyche spacecraft reaches its destination. Mainly the hollow cathode emits a stream of electrons.</p>\r\n        <p>The first job helps the Hall thruster propel the spacecraft through outer space. Some of the electrons the hollow cathode emits are pulled into the Hall thruster and used to make the ions it shoots from the spacecraft.</p>\r\n        <p>The second job of the hollow cathode is to provide electrons to neutralize the Hall thruster's ions as they fly away from the spacecraft. Neutralizing an ion makes it so it no longer has a charge, therefore it is no longer affected by the Hall thruster.</p>\r\n        {/*<p><b id={\"guideText\"} className={\"guideText\"}>Click on the hollow cathode or press the 'next' button below to explore how the hollow cathode performs its jobs.</b></p>*/}\r\n    </div>\r\nexport const cathodeShellGuideText = \"Click on the hollow cathode or press 'Next' to explore how the hollow cathode performs its jobs.\"\r\n\r\nexport const cathodeCSVTitleText = \"Inside the Hollow Cathode\"\r\nexport const cathodeCSVText =\r\n    <div>\r\n        <p>The hollow cathode has three pieces that help it work: the heaters, the gas feed, and the keeper electrode. You can turn them on and off with the buttons at the bottom of the screen. Let’s try to get the hollow cathode working!</p>\r\n    </div>\r\nexport const cathodeCSVSubText =\r\n    <p className={styles.z_index_2}> First, let’s toggle the heaters to turn them on.</p>\r\n\r\nexport const heatTitleText = \"Heating the Inserts\"\r\nexport const heatText = <p className={styles.z_index_2} >The heaters are coiled around the cathode tube. They heat the insert up to an extremely high temperature, causing it to emit electrons. While our goal is to generate electrons for the Hall thruster, the insert alone doesn't produce enough and would be inefficient as our primary source of electrons. Although, electrons can be used to ionize neutral particles to produce even more electrons. The gas feed can be used to inject neutral particles into the cathode tube.</p>\r\nexport const heatSubText = \"\";\r\n\r\nexport const gasTitleText = \"Injecting Xenon Gas\"\r\nexport const gasText = <p className={styles.z_index_2} >The gas feed lets tiny particles called Xenon into the cathode tube. Whenever a Xenon particle hits an electron, the Xenon gets charged, or ionized. An ionized particle loses some of its electrons which leaves more usable elections in the cathode tube!</p>\r\nexport const gasSubText = <p className={styles.z_index_2}> Click Next to see what happens when Xenon from the gas feed meets electrons. </p>\r\n\r\nexport const plasmaTitleText = \"Plasma Forms\"\r\nexport const plasmaText = <p className={styles.z_index_2} >An incredibly hot plasma of electrons and ionized Xenon forms inside the cathode tube. As electrons run into the Xenon particles, more electrons break free from the Xenon, this is called ionization. You can see the Xenon ionizing when they turn from purple to bright blue. Ionizing xenon gives us a steady source of lots of electrons in the hollow cathode! Now we just need to get the electrons from the cathode tube out to the Hall thruster. </p>\r\nexport const plasmaSubText = <p className={styles.z_index_2}> To do this, let’s turn on the keeper electrode. </p>\r\n\r\nexport const keeperTitleText = \"The Keeper Electrode\"\r\nexport const keeperText = <p className={styles.z_index_2} >You’ve turned on the keeper electrode, it creates an electric field inside the cathode. You are probably familiar with magnetic fields from trying to stick the same ends of two magnets together, electric fields behave similarly, they pull negative particles and push positive particles. The keeper electrode pulls electrons (negatively charged) out of the hollow cathode so the Hall thruster can use them, it also pushes the ionized xenon (positively charged) to the back of the cathode.</p>\r\nexport const keeperSubText = \"\";\r\n\r\nexport const ejectTitleText = \"Ejecting Plasma\"\r\nexport const ejectText = <p className={styles.z_index_2} >You’ve just ejected the plasma! The keeper electrode just pulled all the electrons out of the hollow cathode for the Hall thruster to use.</p>\r\nexport const ejectSubText = \"\";\r\n\r\nexport const recapTitleText = <p className={styles.z_index_2}> A Quick Recap </p>\r\nexport const recapText =\r\n    <div>\r\n        <p className={styles.z_index_2} >Congratulations, you got the hollow cathode working! Let’s talk about everything you just did.</p>\r\n        <p className={styles.z_index_2} >First, you learned that the hollow cathode is an important piece of the Psyche spacecraft, as it lets the Hall thruster do its job of propelling the spacecraft through outer space.</p>\r\n        <p className={styles.z_index_2} >Then, you got the hollow cathode working. To do this, you used the heaters to heat the hollow cathode’s inserts until they generated electrons. Next, using the gas feed you injected some Xenon gas into the cathode tube which ionized, forming a hot plasma of even more electrons. Lastly, you used the keeper electrode to pull all the electrons out of the hollow cathode so the Hall thruster could use them.</p>\r\n    </div>\r\n\r\nexport const linksTitleText = \"Learn about Psyche!\"\r\nexport const linksText = \"Sample text for the links page\";\r\nexport const link1url = \"https://asu-hall-thruster-visualization.netlify.app/Home/\";\r\nexport const link2url = \"https://psyche.asu.edu/\";\r\nexport const link3url = \"https://psyche.asu.edu/\";\r\n\r\n/// Error texts ///\r\nexport const heatKeeperErrorTitleText = \"Watch Out!\"\r\nexport const heatKeeperErrorText =\r\n    <div>\r\n        <p className={styles.z_index_2} >You’ve turned on the keeper electrode too early!</p>\r\n        <p className={styles.z_index_2} >Turning on the keeper electrode at the right time pulls enough electrons out of the hollow cathode for the Hall thruster to use. Right now, there’s not very many electrons being pulled out of the hollow cathode, so the Hall thruster doesn’t have enough electrons to do its job.</p>\r\n    </div>\r\nexport const heatKeeperErrorSubText = <p className={styles.z_index_2} > Try going back and turning off the keeper electrode and using the gas feed to produce more electrons before ejecting them. </p>\r\n\r\nexport const gasKeeperErrorTitleText = \"Watch Out!\"\r\nexport const gasKeeperErrorText =\r\n    <div>\r\n        <p>You’ve turned on the keeper electrode too early!</p>\r\n        <p>The Xenon particles currently in the cathode tube are neutral, so the electric field generated by the keeper electrode has no affect on them. Additionally, there are no electrons in the cathode tube to ionize the Xenon particles so there aren't electrons are being produced yet for the Hall thruster to use.</p>\r\n    </div>\r\nexport const gasKeeperErrorSubText = <p className={styles.z_index_2} > Try going back and turning off the keeper electrode and trying something else. </p>\r\n///\r\n\r\nexport const hallThusterOffText = \"                        The hollow cathode is a component of the Hall thruster. Its key role is to emit electronic\\n\" +\r\n    \"                        plasma to pull the positive plasma inside the cabin of the Hall thruster, known as the internal\\n\" +\r\n    \"                        plasma. Another role of the hollow cathode, which is not least significant, is to neutralize the\\n\" +\r\n    \"                        rocket. Without the hollow cathode, when Hall thruster emits plasma, the Hall thruster is\\n\" +\r\n    \"                        negatively charging the entire rocket. This phenomenon can cause spacecraft erosion and reduce\\n\" +\r\n    \"                        the thrust force.\"\r\n","\r\n\r\nimport {\r\n    right_of_cathode_constant,\r\n    left_of_cathode_constant,\r\n    bottom_of_cathode_constant,\r\n    top_of_cathode_constant,\r\n    particle_right_bounding_box,\r\n    path_electron,\r\n    path_xenon,\r\n    path_ionized_xenon\r\n} from \"./Galactic\";\r\n\r\n/// CONSTANTS ///\r\n\r\n// Pre-load images //\r\nconst electronImage = new Image();\r\nelectronImage.src = path_electron;\r\nconst xenonImage = new Image();\r\nxenonImage.src = path_xenon;\r\nconst ionizedXenonImage = new Image();\r\nionizedXenonImage.src = path_ionized_xenon;\r\n\r\n// Misc //\r\nconst ELECTRON_RADIUS = 10;\r\nconst XENON_RADIUS = 20;\r\nconst TIMING_INTERVAL = 5/60;\r\nconst IONIZATION_AGE_THRESHOLD = 1500; // particle.halfLife must be < IONIZATION_AGE_THRESHOLD to ionize\r\nconst DEFAULT_HALFLIFE = 2000; // how many animation frames a particle lives for\r\n\r\n\r\nconst collision_elasticity = 0.7; // 1 == fully elastic, 0 == no bounce\r\n// warning: collision_elasticity doesn't apply to diagonal (y=mx+b) collisions since we don't have a need for that atm\r\n// charges //\r\nconst keeper_electric_field_kq = -40; // the constant for k*q in the kqq/r equation (force due to an electric field) due to the keeper electrode\r\nconst thruster_electric_field_kq = -100; // the constant for k*q in the kqq/r equation (force due to an electric field) due to the hall thruster\r\nconst ELECTRON_CHARGE = -0.5;\r\nconst XENON_CHARGE = 0;\r\nconst IONIZED_CHARGE = 0.8;\r\n\r\n// possible particle types //\r\nconst TYPE_ELECTRON = 'electron';\r\nconst TYPE_XENON = 'xenon';\r\nconst TYPE_IONIZEDXENON = 'ionized xenon';\r\nconst TYPE_NONE = 'ionized xenon';\r\n\r\n// speed modifiers/ range definitions //\r\nconst particle_maxv_x = 20; // original: 30, 2nd iteration: 30\r\nconst particle_minv_x = -20; // original: -30, 2nd iteration: -0\r\nconst particle_maxv_y = 20; // original: 30, 2nd iteration: 30\r\nconst particle_minv_y = -20; // original: -30, 2nd iteration: -30\r\nconst particle_speed_modifier = 0.15; //original: 0.025\r\n//////\r\n\r\n// NON-CONSTANTS //\r\nvar particles_array = []; // array of all existing electron particles\r\nvar ejectFlag = false;\r\nvar ionizeFlag = false;\r\n////\r\n\r\n\r\nclass ProtoParticle {\r\n    ctx; // ctx element/layer the particle is drawn on, draw on this one\r\n    canvas; // canvas element/layer the particle is drawn on, use this to look at the properties of the canvas, don't draw on it\r\n    x; // int px, x position of center of particle\r\n    y; // int px, y position of center of particle\r\n    vx; // int px, x velocity\r\n    vy; // int px, y velocity\r\n    ax; // int px/tick^2, x acceleration\r\n    ay; // int px/tick^2, y acceleration\r\n    radius; // int px, radius of particle\r\n    // color; // color string or hex string, color of particle\r\n    anime_key; // animation frame reference used to cancel this particle's animation, see this.startAnimation(), defaults to -1\r\n    animate; // animation function and logic (pathing, boundaries, physics, etc.)\r\n    interval; // essentially the rate defining how many times a second accelerations and forces are applied (delta time)\r\n    // accelerating = true; // toggle application of accelerations (for testing purposes)\r\n    particle_type; // type of particle, should be either: TYPE_ELECTRON, TYPE_XENON, TYPE_IONIZEDXENON, or TYPE_NONE (constants) (see constants)\r\n    max_y; // bounding box (low barrier)\r\n    min_y; // bounding box (high barrier)\r\n    max_x; // bounding box (right barrier)\r\n    min_x; // bounding box (left barrier)\r\n\r\n    /**\r\n     * Public\r\n     * Constructor for particle object with 7 optional parameters and 1 mandatory parameter (layer)\r\n     *\r\n     * @param layer ctx element/layer to draw the particle on\r\n     * @param x int px, initial x position of center of particle, if set to -999: defaults to a random value between 26 and 800\r\n     * @param y int px, initial y position of center of particle, if set to -999: defaults to a random value between 26 and 400\r\n     * @param vx int px/tick, initial x velocity, if set to -999: defaults to a random integer between 0 and 5\r\n     * @param vy int px/tick, initial y velocity, if set to -999: defaults to a random integer between 0 and 5\r\n     * @param ax int px/tick^2, initial x acceleration, *used to* default to a random integer between 1 and 5  (Math.floor(Math.random() * (5 - 1) + 1))\r\n     * @param ay int px/tick^2, initial y acceleration, *used to* default to a random integer between 1 and 5  (Math.floor(Math.random() * (5 - 1) + 1))\r\n     * @param particle_type type of particle, should be either: TYPE_ELECTRON, TYPE_XENON, TYPE_IONIZEDXENON, or TYPE_NONE (constants) (see constants)\r\n     * @param max_y bounding box (low barrier)\r\n     * @param min_y bounding box (high barrier)\r\n     * @param max_x bounding box (right barrier)\r\n     * @param min_x bounding box (left barrier)\r\n     */\r\n    constructor(\r\n        layer,\r\n        x,\r\n        y,\r\n        vx,\r\n        vy,\r\n        ax,\r\n        ay,\r\n        particle_type,\r\n        max_y,\r\n        min_y,\r\n        max_x,\r\n        min_x\r\n    ) {\r\n        this.id = Math.ceil(Math.random() * 100); // used to find particle in particles array\r\n        this.ctx = layer;\r\n        this.canvas = layer.canvas;\r\n        this.particle_type = particle_type;\r\n\r\n        // Classification //\r\n        // add self to particles array\r\n        if(particle_type === TYPE_ELECTRON){\r\n            this.image = electronImage;\r\n            this.charge = ELECTRON_CHARGE;\r\n            this.radius = ELECTRON_RADIUS;\r\n\r\n        } else if(particle_type === TYPE_XENON){\r\n            this.image = xenonImage;\r\n            this.charge = XENON_CHARGE; // neutral\r\n            this.radius = XENON_RADIUS;\r\n\r\n        } else if(particle_type === TYPE_IONIZEDXENON){\r\n            this.image = xenonImage;\r\n            this.charge = IONIZED_CHARGE;\r\n            this.radius = XENON_RADIUS;\r\n\r\n        } else {\r\n            this.image = TYPE_NONE;\r\n            this.charge = IONIZED_CHARGE; // positive\r\n            this.radius = 15;\r\n            console.error(\"invalid particle_type: \", this.particle_type);\r\n        }\r\n\r\n        // Location //\r\n        // x: randomize if default value\r\n        if(x === -999){\r\n            // default to a random x position between min and max\r\n            let max = layer.canvas.width;\r\n            let min = this.radius + 1;\r\n            this.x = Math.floor(Math.random() * (max - min) + min); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.x = x;\r\n        }\r\n\r\n        // y: randomize if default value\r\n        if(y === -999){\r\n            // default to a random x position between min and max\r\n            let max = layer.canvas.height;\r\n            let min = this.radius + 1;\r\n            this.y = Math.floor(Math.random() * (max - min) + min); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.y = y;\r\n        }\r\n\r\n        // x error checking\r\n        if(this.x > layer.canvas.width || this.x < 0){\r\n            console.error(\"invalid initial x coordinate of particle: \", this.x);\r\n        }\r\n        // y error checking\r\n        if(this.y > layer.canvas.height || this.y < 0){\r\n            console.error(\"invalid initial y coordinate of particle: \", this.y);\r\n        }\r\n\r\n\r\n        // Velocity //\r\n        // vx: randomize if default value\r\n        if(vx === -999){\r\n            this.vx = (Math.floor(Math.random() * (particle_maxv_x - particle_minv_x) + particle_minv_x) * particle_speed_modifier); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.vx = vx;\r\n        }\r\n\r\n        // vy: randomize if default value\r\n        if(vy === -999){\r\n            this.vy = (Math.floor(Math.random() * (particle_maxv_y - particle_minv_y) + particle_minv_y) * particle_speed_modifier); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.vy = vy;\r\n        }\r\n\r\n        // Acceleration //\r\n        this.ax = ax;\r\n        this.ay = ay;\r\n\r\n        // this.color = color; // depreciated now that we have images from the artist\r\n        this.anime_key = -1; // key/reference to current animation frame, given by browser, defaults to -1\r\n        this.interval = TIMING_INTERVAL; // timing\r\n\r\n        // Bounding Box //\r\n        this.max_y = max_y; // operates off of distance from axis\r\n        this.min_y = min_y;\r\n        this.max_x = max_x;\r\n        this.min_x = min_x;\r\n\r\n        this.halfLife = DEFAULT_HALFLIFE;\r\n\r\n        particles_array.push(this);\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Definition of how a ProtoParticle should look\r\n     */\r\n    draw(){\r\n        // colored circle\r\n        // this.ctx.beginPath();\r\n        // this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\r\n        // this.ctx.closePath();\r\n        // this.ctx.fillStyle = this.color;\r\n        // this.ctx.fill();\r\n\r\n        // proper image\r\n        this.ctx.drawImage(this.image, this.x, this.y, this.radius * 2, this.radius * 2)\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Initialize/start this particle's rendering and animation.\r\n     */\r\n    startAnimation(){\r\n        // this.anime_key = window.requestAnimationFrame(animate);\r\n        let temp_this = this; // assign \"this\" (this particle) to a temporary variable so that it is defined when requestAnimationFrame calls it\r\n        this.anime_key = window.requestAnimationFrame(function() { temp_this.animate(temp_this) });\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * !logic error warning! you may be thinking of stopAnimation()\r\n     * Stop this particle's rendering and animation *AND erase the last frame of it.*\r\n     */\r\n    clearAnimation(){\r\n        window.cancelAnimationFrame(this.anime_key);\r\n        this.clearPath();\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Function for clearing the previous frame/particle before drawing the new/updated frame.\r\n     */\r\n    clearPath(){\r\n        this.ctx.save(); //drop down a layer\r\n\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(this.x + this.radius, this.y + this.radius, this.radius + 1, 0, Math.PI * 2, true);\r\n            this.ctx.clip();\r\n            this.ctx.clearRect(this.x, this.y, this.radius * 2, this.radius * 2);\r\n\r\n        this.ctx.restore(); //pop up a layer\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Sets the animation function\r\n     * @param animate (function)\r\n     */\r\n    setAnimation(animate){\r\n        this.animate = animate;\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Input should be 'electron', 'xenon', 'ionized xenon', or 'none' (TYPE_ELECTRON, TYPE_XENON, TYPE_IONIZEDXENON, or TYPE_NONE\r\n     * @param type (string) string representing the particle type, is mapped to appropriate particle image\r\n     */\r\n    setImage(type){\r\n        if(type === TYPE_ELECTRON){\r\n            this.particle_type = TYPE_ELECTRON;\r\n            this.image = electronImage;\r\n        } else if(type === TYPE_XENON){\r\n            this.particle_type = TYPE_XENON;\r\n            this.image = xenonImage;\r\n        } else if(type === TYPE_IONIZEDXENON){\r\n            this.particle_type = TYPE_IONIZEDXENON;\r\n            this.image = ionizedXenonImage;\r\n        } else if(type === 'none'){\r\n            this.particle_type = 'none';\r\n            console.error('ProtoParticle:: setImage: Invalid type provided: ', type);\r\n        } else {\r\n            this.particle_type = 'none';\r\n            console.error('ProtoParticle:: setImage: Invalid type provided: ', type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shared Utility\r\n     * getCathTube___() - unfortunately duped form painter.js\r\n     * Returns the location of the ___ of the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getCathTubeBot(){\r\n        return this.canvas.height * bottom_of_cathode_constant;\r\n    }\r\n    getCathTubeTop(){\r\n        return this.canvas.height * top_of_cathode_constant;\r\n    }\r\n    getCathTubeRightX(){\r\n        return this.canvas.width * right_of_cathode_constant;\r\n    }\r\n    getCathTubeLeftX(){\r\n        return this.canvas.width * left_of_cathode_constant;\r\n    }\r\n\r\n    /**\r\n     * Shared Utility\r\n     * getParticleTube___() - unfortunately duped form painter.js\r\n     * Returns the location of the particle boundary for the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getParticleTubeRightX(){\r\n        return this.canvas.width * particle_right_bounding_box;\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Ionize yourself\r\n     */\r\n    ionize(){\r\n        if(this.particle_type === TYPE_XENON){\r\n            // update type\r\n            this.particle_type = TYPE_IONIZEDXENON; // todo - particle: make sure everything updates types properly like this\r\n            this.charge = IONIZED_CHARGE;\r\n            this.setImage(TYPE_IONIZEDXENON);\r\n\r\n            // spawn 2 electron\r\n            ProtoParticle.generateElectron(this.ctx, this.x, this.y, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX());\r\n            ProtoParticle.generateElectron(this.ctx, this.x, this.y, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Have a particle delete itself from existence\r\n     */\r\n    delete_self(){\r\n        this.clearAnimation();\r\n\r\n        // Remove last reference to this particle from particles_array\r\n        let index = (particles_array.findIndex((element) => element.id === this.id));\r\n        if(particles_array.indexOf(this) > -1 ? particles_array.splice(index, 1) : false){\r\n            // Particle is now fully deleted\r\n        }\r\n        delete this;\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Set ionization flag to true, causes xenon particles to ionize\r\n     */\r\n    static ionizeParticles(){\r\n        this.setIonizeFlag(true)\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Set eject flag to true, causes particles to act as if keeper electrode is enabled\r\n     */\r\n    static ejectParticles(){\r\n        this.setEjectFlag(true)\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * The official animation function for all xenon of all types\r\n     * SHOULD NOT BE CALLED BY HUMANS, use particle.startAnimation\r\n     *\r\n     * @param particle the particle to animate (passed inline, particle.animate(particle))\r\n     */\r\n    static xenonAnimation(particle){\r\n        particle.clearPath();\r\n\r\n        /// Boundary checking ///\r\n        // check if on screen\r\n        if(\r\n            particle.x > particle.canvas.width ||\r\n            particle.x < 0 ||\r\n            particle.y > particle.canvas.height ||\r\n            particle.y > particle.canvas.height\r\n        ){\r\n            particle.halfLife = 0; //will despawn at end of this animation\r\n        }\r\n        // check if in set boundaries\r\n        else if(\r\n            particle.y > particle.max_y - particle.radius * 2 ||\r\n            particle.y < particle.min_y ||\r\n            particle.x > particle.max_x - particle.radius * 2 ||\r\n            particle.x < particle.min_x\r\n        ){\r\n            particle.halfLife = 0;\r\n        }\r\n        // check if particle hit back of the tube - special condition\r\n        else if (particle.particle_type === TYPE_IONIZEDXENON && (particle.x < particle.getCathTubeLeftX() + particle.radius)){\r\n            particle.halfLife = 0; // despawn the particle\r\n        }\r\n        // end of normal boundary checking\r\n        // it is where it should be, so you can animate now\r\n        else{\r\n            // // set angled boundary box using a slope and a y-intercept\r\n            // let m = 1; // slope\r\n            // let b = 300; // y intercept\r\n\r\n\r\n\r\n            // special conditions\r\n            // should the particle be ionized?\r\n            if(ionizeFlag && particle.particle_type === TYPE_XENON && particle.halfLife < IONIZATION_AGE_THRESHOLD){\r\n                particle.ionize();\r\n            }\r\n\r\n\r\n            // check y boundary using normal bounding box (wall bounce)\r\n            if (particle.y + particle.vy > particle.max_y - particle.radius * 2 || particle.y + particle.vy < particle.min_y ) {\r\n                particle.vy = -particle.vy * collision_elasticity;\r\n            }\r\n            // check x boundary using normal bounding box (wall bounce)\r\n            else if (particle.x + particle.vx > particle.max_x - particle.radius * 2 || particle.x + particle.vx < particle.min_x) {\r\n                particle.vx = -particle.vx * collision_elasticity;\r\n            }\r\n                // // check boundary using slope intercept form (doesn't account for square objects yet) (for squares, pov = top left instead of center)\r\n                // else if((particle.y + particle.vy) >= m * (particle.x + particle.vx) + b){\r\n                //\r\n                //     // // do a proper angled bounce\r\n                //     // let swap = particle.vx;\r\n                //     // particle.vx = particle.vy;\r\n                //     // particle.vy = swap;\r\n            // }\r\n            else {\r\n                // acceleration is only applied here to prevent logic errors accelerating particles through collisions\r\n                // v_f = v_o + a*t (kinematic) (where t is the interval or intensity) (good values are like 1/60 or 5/60)\r\n\r\n                // todo particle 8: potential divide by zero error\r\n                particle.ax = keeper_electric_field_kq/particle.x * particle.charge; //keeper force (kqq/r in essence)\r\n\r\n                if(particle.x > particle.getCathTubeRightX()){\r\n                    // stop it from returning\r\n                    particle.min_x = particle.getCathTubeRightX(); // todo particle 1\r\n                    particle.max_x = particle.canvas.width;\r\n                    particle.min_y = 0;\r\n                    particle.max_y = particle.canvas.height;\r\n                } else {\r\n                    if(ejectFlag){\r\n                        // y acceleration\r\n                        particle.vy = particle.vy + (particle.ay * particle.interval);\r\n\r\n                        // x acceleration\r\n                        particle.vx = particle.vx + (particle.ax * particle.interval);\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            //move the particle at the given velocity\r\n            particle.x += particle.vx;\r\n            particle.y += particle.vy;\r\n\r\n            //draw the particle\r\n            particle.draw();\r\n\r\n            // drain halfLife\r\n            particle.halfLife = particle.halfLife - 1\r\n        }\r\n\r\n        // should the particle still exist?\r\n        if(particle.halfLife > 0){\r\n            particle.anime_key = window.requestAnimationFrame(function() {particle.animate(particle)});\r\n        } else {\r\n            particle.delete_self()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * The official animation function for all electrons\r\n     * SHOULD NOT BE CALLED BY HUMANS, use particle.startAnimation\r\n     *\r\n     * @param particle the particle to animate (passed inline, particle.animate(particle))\r\n     */\r\n    static electronAnimation(particle){\r\n        particle.clearPath();\r\n\r\n        // Boundary checking //\r\n        // check if on screen\r\n        if(\r\n            particle.x > particle.canvas.width ||\r\n            particle.x < 0 ||\r\n            particle.y > particle.canvas.height ||\r\n            particle.y > particle.canvas.height\r\n        ){\r\n            particle.halfLife = 0; //will despawn at end of this animation\r\n        }\r\n        // check if in set boundaries\r\n        else if(\r\n            particle.y > particle.max_y ||\r\n            particle.y < particle.min_y ||\r\n            particle.x > particle.max_x ||\r\n            particle.x < particle.min_x\r\n        ){\r\n            particle.halfLife = 0;\r\n        }\r\n        // end of normal boundary checking\r\n        // it is where it should be, so you can animate now\r\n        else {\r\n            // // set angled boundary box using a slope and a y-intercept\r\n            // let m = 1; // slope\r\n            // let b = 300; // y intercept\r\n\r\n\r\n\r\n            // special conditions\r\n            // no special conditions for electrons\r\n\r\n            // check y boundary using normal bounding box (wall bounce)\r\n            if (particle.y + particle.vy > particle.max_y - particle.radius * 2 || particle.y + particle.vy < particle.min_y ) {\r\n                particle.vy = -particle.vy * collision_elasticity;\r\n            }\r\n            // check x boundary using normal bounding box (wall bounce)\r\n            else if (particle.x + particle.vx > particle.max_x - particle.radius * 2 || particle.x + particle.vx < particle.min_x) {\r\n                particle.vx = -particle.vx * collision_elasticity;\r\n            }\r\n                // // check boundary using slope intercept form (doesn't account for square objects yet) (for squares, pov = top left instead of center)\r\n                // else if((particle.y + particle.vy) >= m * (particle.x + particle.vx) + b){\r\n                //\r\n                //     // // do a proper angled bounce\r\n                //     // let swap = particle.vx;\r\n                //     // particle.vx = particle.vy;\r\n                //     // particle.vy = swap;\r\n            // }\r\n            else {\r\n                // acceleration is only applied here to prevent logic errors accelerating particles through collisions\r\n                // v_f = v_o + a*t (kinematic) (where t is the interval or intensity) (good values are like 1/60 or 5/60)\r\n\r\n                // todo - potential divide by zero error\r\n                particle.ax = keeper_electric_field_kq/particle.x * particle.charge; //keeper force (kqq/r in essence)\r\n\r\n                if(particle.x > particle.getCathTubeRightX() + particle.radius * 2){\r\n                    // stop it from returning\r\n                    particle.min_x = particle.getCathTubeRightX();\r\n                    particle.max_x = particle.canvas.width + particle.radius * 4;\r\n                    particle.min_y = 0;\r\n                    particle.max_y = particle.canvas.height + particle.radius * 4;\r\n\r\n                    particle.ay = thruster_electric_field_kq/particle.y * particle.charge; //keeper force (kqq/r in essence) // hall thruster E field\r\n                }\r\n\r\n                if(ejectFlag){\r\n                    // y acceleration\r\n                    particle.vy = particle.vy + (particle.ay * particle.interval);\r\n\r\n                    // x acceleration\r\n                    particle.vx = particle.vx + (particle.ax * particle.interval);\r\n                }\r\n\r\n            }\r\n\r\n            //move the particle at the given velocity\r\n            particle.x += particle.vx;\r\n            particle.y += particle.vy;\r\n\r\n            //draw the particle\r\n            particle.draw();\r\n        }\r\n\r\n\r\n        // drain halfLife\r\n        particle.halfLife = particle.halfLife - 1;\r\n\r\n        if(particle.halfLife > 0){\r\n            particle.anime_key = window.requestAnimationFrame(function() {particle.animate(particle)});\r\n        } else {\r\n            particle.delete_self()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Public Interface, used by Painter.js\r\n     * Generates a new xenon particle on a given layer at a given position\r\n     *\r\n     * @param ctx layer\r\n     * @param x initial x position\r\n     * @param y initial y position\r\n     * @param mmax_y bounding box\r\n     * @param mmin_y bounding box\r\n     * @param mmax_x bounding box\r\n     * @param mmin_x bounding box\r\n     */\r\n    static generateXenon(ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x){\r\n        // Drawing some particles //\r\n        let xenon0 = new ProtoParticle(ctx, x, y, -999, -999, 0, 0, TYPE_XENON, mmax_y, mmin_y, mmax_x, mmin_x);\r\n        xenon0.setAnimation(ProtoParticle.xenonAnimation);\r\n        xenon0.startAnimation();\r\n    }\r\n\r\n    /**\r\n     * Public Interface, used by Painter.js\r\n     * Removes all particles from the simulation\r\n     */\r\n    static killAllParticles(){\r\n        let limiti = particles_array.length;\r\n        for (let i = 0; i < limiti; i++) {\r\n            (particles_array.pop()).clearAnimation();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Public Interface, used by Painter.js\r\n     * Generates a new electron particle on a given layer at a given position\r\n     *\r\n     * @param ctx layer\r\n     * @param x initial x position\r\n     * @param y initial y position\r\n     * @param mmax_y bounding box\r\n     * @param mmin_y bounding box\r\n     * @param mmax_x bounding box\r\n     * @param mmin_x bounding box\r\n     */\r\n    static generateElectron(ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x){\r\n        // Drawing some particles //\r\n        let electron0 = new ProtoParticle(ctx, x, y, -999, -999, 0, 0, TYPE_ELECTRON, mmax_y, mmin_y, mmax_x, mmin_x); // randomized\r\n        electron0.setAnimation(ProtoParticle.electronAnimation);\r\n        electron0.startAnimation();\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Setter for eject flag boolean\r\n     *\r\n     * @param value (bool) new value\r\n     */\r\n    static setEjectFlag(value){\r\n        ejectFlag = value;\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Setter for ionize flag boolean\r\n     *\r\n     * @param value (bool) new value\r\n     */\r\n    static setIonizeFlag(value){\r\n        ionizeFlag = value;\r\n    }\r\n}\r\n\r\n\r\nexport default ProtoParticle;\r\n","import ProtoParticle from \"./ProtoParticle\";\r\n\r\n/**\r\n * Mapping layers via constants\r\n * These should always be used to reference layers when used as parameters to a function or when interacting with this.state.\r\n * This allows us to easily add and remove layers.\r\n */\r\nimport {\r\n    base, gas, heat, labels,\r\n    path_lm_csv,\r\n    bottom_of_cathode_constant,\r\n    left_of_cathode_constant,\r\n    particle_right_bounding_box,\r\n    right_of_cathode_constant,\r\n    top_of_cathode_constant\r\n} from \"./Galactic\";\r\n\r\n\r\n/// \"CONSTANTS\" ///\r\nconst ELECTRON_SPAWN_RATE = 5; // 2 particle(s) every [ELECTRON_SPAWN_RATE] seconds\r\nconst XENON_SPAWN_RATE = 3; // 1 particle(s) every [XENON_SPAWN_RATE] seconds\r\nconst ELECTRON_RADIUS = 6;\r\nconst XENON_RADIUS = 10;\r\n///\r\n\r\nclass Painter{\r\n    constructor(layers) {\r\n        this.layers = layers;\r\n\r\n        // pre-load images\r\n        this.base_cathode = new Image();\r\n        this.base_cathode.src = path_lm_csv;\r\n\r\n        this.draw_csv_Base_Drawing = this.draw_csv_Base_Drawing.bind(this);\r\n\r\n        this.getCanvasHeight = this.getCanvasHeight.bind(this);\r\n        this.getCanvasHeight = this.getCanvasHeight.bind(this);\r\n\r\n        this.XenonGeneratorKey = -1;\r\n        this.ElectronGeneratorKey_Top = -1; // top of insert\r\n        this.ElectronGeneratorKey_Bot = -1; // bottom of insert\r\n    }\r\n\r\n    /**\r\n     * Retrieves a layer by index (constant number)\r\n     * @param layer_number the number for the layer needed\r\n     * @returns {*} ctx reference/object for the layer\r\n     */\r\n    getLayer(layer_number){\r\n        return this.layers[layer_number];\r\n    }\r\n\r\n    getCanvasHeight(){\r\n        return this.getLayer(base).canvas.height;\r\n    }\r\n    getCanvasWidth(){\r\n        return this.getLayer(base).canvas.width;\r\n    }\r\n\r\n    /**\r\n     * clearCanvas(layer number)\r\n     * Clears contents of a given canvas layer\r\n     *\r\n     * @param layer_number layer number for layer to clear\r\n     */\r\n    clearCanvas(layer_number){\r\n        if(this.layers.length > layer_number && layer_number > -1){\r\n            this.getLayer(layer_number).clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight());\r\n        } else {\r\n            console.warn(\"Invalid layer number: \", layer_number)\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * getCathTube___()\r\n     * Returns the location of the ___ of the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getCathTubeBot(){\r\n        return this.getCanvasHeight() * bottom_of_cathode_constant;\r\n    }\r\n    getCathTubeTop(){\r\n        return this.getCanvasHeight() * top_of_cathode_constant;\r\n    }\r\n    getCathTubeRightX(){\r\n        return this.getCanvasWidth() * right_of_cathode_constant;\r\n    }\r\n    getCathTubeLeftX(){\r\n        return this.getCanvasWidth() * left_of_cathode_constant;\r\n    }\r\n\r\n    /**\r\n     * Returns a random X coordinate that exists on the inserts\r\n     * @returns {number} number between this.getCathTubeLeftX() + ELECTRON_RADIUS and this.getCathTubeRightX() - ELECTRON_RADIUS\r\n     */\r\n    getInsertRandomX(){\r\n        let min = Math.ceil(this.getCathTubeLeftX());\r\n        return Math.floor(Math.random() * (Math.floor(this.getCathTubeRightX()) - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n    }\r\n\r\n    /**\r\n     * getParticleTube___()\r\n     * Returns the location of the particle boundary for the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getParticleTubeRightX(){\r\n        return this.getCanvasWidth() * particle_right_bounding_box;\r\n    }\r\n\r\n\r\n\r\n    /** Learning Mode and Presentation Mode **/\r\n    /**\r\n     * Public\r\n     * draw_csv_Base_Drawing()\r\n     *\r\n     * Function to draw the base cathode visuals\r\n     */\r\n    draw_csv_Base_Drawing(){\r\n        this.clearCanvas(base);\r\n        const ctx = this.getLayer(base);\r\n        ctx.drawImage(this.base_cathode, this.getCanvasWidth() * -.45, this.getCanvasHeight() * -.35, this.getCanvasWidth() * 1.19, this.getCanvasHeight() * 2.25); // draw the cathode\r\n\r\n\r\n        // // visualize cathode tube bounding box //:debug\r\n        // this.min_y = this.getCathTubeTop(); //:debug\r\n        // this.max_y = this.getCathTubeBot(); //:debug\r\n        // this.min_x = this.getCathTubeLeftX(); //:debug\r\n        // this.max_x = this.getCathTubeRightX(); //:debug\r\n        //\r\n        // ctx.strokeStyle = 'rgba(255,255,255,0.6)'; //:debug\r\n        // ctx.lineWidth = 6; //:debug\r\n        //\r\n        // // right //:debug\r\n        // ctx.beginPath(); //:debug\r\n        // ctx.moveTo(this.min_x, this.min_y); //:debug\r\n        // ctx.lineTo(this.min_x, this.max_y); //:debug\r\n        // ctx.stroke(); //:debug\r\n        //\r\n        // ctx.strokeStyle = 'rgba(201,69,69,0.6)'; //:debug\r\n        //\r\n        // // left //:debug\r\n        // ctx.beginPath(); //:debug\r\n        // ctx.moveTo(this.max_x, this.max_y); //:debug\r\n        // ctx.lineTo(this.max_x, this.min_y); //:debug\r\n        // ctx.stroke(); //:debug\r\n        //\r\n        // ctx.strokeStyle = 'rgba(210,184,30,0.6)'; //:debug\r\n        //\r\n        // // top //:debug\r\n        // ctx.beginPath(); //:debug\r\n        // ctx.moveTo(this.max_x, this.min_y); //:debug\r\n        // ctx.lineTo(this.min_x, this.min_y); //:debug\r\n        // ctx.stroke(); //:debug\r\n        //\r\n        // ctx.strokeStyle = 'rgba(128,0,0,0.6)'; //:debug\r\n        //\r\n        // // bottom //:debug\r\n        // ctx.beginPath(); //:debug\r\n        // ctx.moveTo(this.min_x, this.max_y); //:debug\r\n        // ctx.lineTo(this.max_x, this.max_y); //:debug\r\n        // ctx.stroke(); //:debug\r\n    }\r\n\r\n\r\n    /**\r\n     * draw_csv_Heat_Insert()\r\n     *\r\n     * Defines what drawing \"heat insert\" looks like\r\n     * Function to draw the heat insert visuals (currently only draws an orange square)\r\n     */\r\n    draw_csv_Heat_Insert(){\r\n\r\n        // Turn on Electron Generator\r\n        this.startElectronGenerator(ELECTRON_SPAWN_RATE);\r\n    }\r\n\r\n    /**\r\n     * draw_csv_gas_feed()\r\n     * Function to draw the gas feed visuals (currently only draws a yellow square)\r\n     */\r\n    draw_csv_gas_feed(){\r\n        // Turn on Xenon Generator\r\n        this.startXenonGenerator(XENON_SPAWN_RATE);\r\n    }\r\n\r\n\r\n    /**\r\n     * draw_csv_internal_plasma()\r\n     * Function to draw the internal plasma visuals (currently only draws a green square)\r\n     */\r\n    draw_csv_internal_plasma(){\r\n        ProtoParticle.ionizeParticles();\r\n    }\r\n\r\n\r\n    /**\r\n     * draw_csv_keeper_electrode()\r\n     * Function to draw the keeper electrode visuals (currently only draws a blue square)\r\n     */\r\n    draw_csv_keeper_electrode(){\r\n        ProtoParticle.ejectParticles();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Spawns xenon particles every [spawn_rate] seconds, simulates the gas feed.\r\n     * @author Jack\r\n     *\r\n     * @param spawn_rate time in SECONDS between each particle spawn.\r\n     */\r\n    startXenonGenerator(spawn_rate){\r\n        const ctx = this.getLayer(gas);\r\n\r\n        if(this.XenonGeneratorKey === -1){\r\n            // (ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x)\r\n            // generate a initial one to get it going right away\r\n            ProtoParticle.generateXenon(ctx, this.getCathTubeLeftX() + 20, (this.getCathTubeTop() + this.getCathTubeBot()) / 2, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX() - XENON_RADIUS); // generate an initial one to get it going right away\r\n            //\r\n            // generate on a timer\r\n            this.XenonGeneratorKey = setInterval(ProtoParticle.generateXenon, spawn_rate * 1000, ctx, this.getCathTubeLeftX() + 20, (this.getCathTubeTop() + this.getCathTubeBot()) / 2, this.getCathTubeBot(), this.getCathTubeTop(), this.getCathTubeRightX(), this.getCathTubeLeftX() - XENON_RADIUS); // generate on a timer\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Restarts the xenon generator with the desired spawn rate, likely to slow it down\r\n     *\r\n     * @param new_spawn_rate time in seconds between each particle spawn\r\n     */\r\n    slowXenonGenerator(new_spawn_rate){\r\n        this.killXenonGenerator();\r\n        this.startXenonGenerator(new_spawn_rate);\r\n    }\r\n\r\n    /**\r\n     * Stops the generation of xenon immediately\r\n     */\r\n    killXenonGenerator(){\r\n        clearInterval(this.XenonGeneratorKey); // kill interval\r\n        this.XenonGeneratorKey = -1; // reset key\r\n        this.killElectronGenerator();\r\n    }\r\n\r\n    /**\r\n     * Spawns xenon particles every [spawn_rate] seconds, simulates heated cathode inserts.\r\n     * @author Jack\r\n     *\r\n     * @param spawn_rate time in SECONDS between each particle spawn.\r\n     */\r\n    startElectronGenerator(spawn_rate){\r\n        const ctx = this.getLayer(heat);\r\n\r\n        // 2 electrons per spawn_rate seconds + 2 initial ones\r\n        if(this.ElectronGeneratorKey_Top === -1){\r\n            // (ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x)\r\n            // generate two initial ones to get it going right away\r\n            ProtoParticle.generateElectron(ctx, this.getInsertRandomX(), this.getCathTubeTop() + ELECTRON_RADIUS, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"top insert\"\r\n            ProtoParticle.generateElectron(ctx, this.getInsertRandomX(), this.getCathTubeBot() - ELECTRON_RADIUS * 3, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"bottom insert\"\r\n            // generate on a timer\r\n            this.ElectronGeneratorKey_Top = setInterval(ProtoParticle.generateElectron, spawn_rate * 1000, ctx, this.getInsertRandomX(), this.getCathTubeTop() + ELECTRON_RADIUS, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"top insert\"\r\n            this.ElectronGeneratorKey_Bot = setInterval(ProtoParticle.generateElectron, spawn_rate * 1000, ctx, this.getInsertRandomX(), this.getCathTubeBot() - ELECTRON_RADIUS * 3, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"bottom insert\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * Restarts the electron generator with the desired spawn rate, likely to slow it down\r\n     *\r\n     * @param new_spawn_rate time in seconds between each particle spawn\r\n     */\r\n    slowElectronGenerator(new_spawn_rate){\r\n        this.killElectronGenerator();\r\n        this.startElectronGenerator(new_spawn_rate);\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * Stops the generation of electrons immediately\r\n     */\r\n    killElectronGenerator(){\r\n        clearInterval(this.ElectronGeneratorKey_Top); // kill interval\r\n        clearInterval(this.ElectronGeneratorKey_Bot); // kill interval\r\n        this.ElectronGeneratorKey_Top = -1; // reset key\r\n        this.ElectronGeneratorKey_Bot = -1; // reset key\r\n    }\r\n\r\n\r\n    /**\r\n     * Public\r\n     * Set the eject flag to false\r\n     */\r\n    stopEjecting(){\r\n        ProtoParticle.setEjectFlag(false);\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * Set the ionize flag to false\r\n     */\r\n    stopIonizing(){\r\n        ProtoParticle.setIonizeFlag(false);\r\n    }\r\n\r\n    /**\r\n     * Stops, clears, and resets all generators, particles, and flags.\r\n     */\r\n    killProtoParticle(){\r\n        this.killElectronGenerator();\r\n        this.killXenonGenerator();\r\n        this.stopEjecting();\r\n        this.stopIonizing();\r\n        ProtoParticle.killAllParticles();\r\n    }\r\n}\r\n\r\nexport default Painter;","import React from \"react\";\r\nimport Painter from \"./Painter\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/// CONSTANTS ///\r\nconst path_spacecraft = \"/hollow-cathode-visualization/images/spacecraft2.png\";\r\n///\r\n\r\n/**\r\n * Site landing page element\r\n * Should be rendered inside a <div id={\"canvasHolder\"}>\r\n */\r\nexport class LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        // create a reference to the canvas element\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    /**\r\n     * componentDidMount()\r\n     * Called when canvas element is mounted on page (canvas element is unusable up until this point)\r\n     */\r\n    componentDidMount() {\r\n        // initialize instance variables for each canvas element/layer\r\n        const ctx0 = this.canvas.current.getContext('2d'); // base = 0;\r\n\r\n        this.layers = [ctx0];\r\n        this.painter = new Painter(this.layers);\r\n\r\n        this.showElement(\"landingPageTitleDiv\")\r\n        this.showElement(\"landingPageSubTitleDiv\")\r\n        this.showElement(\"landingPageLModePromptDiv\")\r\n    }\r\n\r\n    /**\r\n     * @Private\r\n     * getLayer(layer)\r\n     *\r\n     * @param layer layer number which you want to get\r\n     * @returns ctx 2d canvas context for that layer\r\n     */\r\n    getLayer(layer){\r\n        return this.layers[layer];\r\n    }\r\n\r\n    /**\r\n     * Hides the element with the given id\r\n     * @param elementId id of element to hide\r\n     */\r\n    hideElement(elementId){\r\n        document.getElementById(elementId).style.display = 'none';\r\n    }\r\n    /**\r\n     * @Private\r\n     * Un-hides the element with the given id\r\n     *\r\n     * @param elementId id of element to show\r\n     */\r\n    showElement(elementId){\r\n        document.getElementById(elementId).style.display = 'flex';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'canvasHolder'}>\r\n                <div>\r\n                    <canvas id={\"canvas\"}\r\n                            onClick={this.LearningMode_HandleClick}\r\n                            ref={this.canvas}\r\n                            className={\"unselectable\"}\r\n                            hidden={true}> You need a better browser :(\r\n                    </canvas>\r\n\r\n                    <Link to={'/learning'}>\r\n                        <img id={'spaceshipImage'} src={path_spacecraft} className={\"grow\"} alt={\"Psyche 16 spacecraft\"}/>\r\n                    </Link>\r\n\r\n                    <div className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                        <Link to={'/learning'}>\r\n                            {/*<button id={\"LearnModeButton\"} className={\"button\"} style={\"margin-bottom: 0.25em;\"}>*/}\r\n                            <button id={\"LearnModeButton\"} className={\"button landingPageButtonPos\"}>\r\n                                Start Here to Learn\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Link to={'/presentation'}>\r\n                            <button id={\"PresModeButton\"} className={\"button\"}>\r\n                                Presentation Mode\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div id={\"landingPageTitleDiv\"} className={\"stackedButtonGroup landingPageTitleAlign\"} >\r\n                        <label id={\"landingPageTitle\"} className={\"landingPageTitleLabel\"}> Hollow Cathode </label>\r\n                    </div>\r\n\r\n                    <div id={\"landingPageSubTitleDiv\"} className={\"stackedButtonGroup landingPageSubTitleAlign\"} >\r\n                        <label id={\"landingPageSubTitle\"} className={\"landingPageSubTitleLabel\"}> Visualization </label>\r\n                    </div>\r\n\r\n                    <div id={\"landingPageLModePromptDiv\"} className={\"stackedButtonGroup landingPageLModePromptAlign\"} >\r\n                        <label id={\"landingPageLModePrompt\"} className={\"landingPageLModePromptLabel\"}> Click the spacecraft or start button to begin </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from \"react\";\r\nimport Painter from \"./Painter\";\r\n\r\nimport {\r\n    base, cathodeCSVSubText, cathodeCSVText, cathodeCSVTitleText,\r\n    cathodeShellPrimaryText, cathodeShellPrimaryTitleText, cathodeShellGuideText,\r\n    eject, ejectSubText, ejectText, ejectTitleText,\r\n    gas, gasKeeperErrorSubText, gasKeeperErrorText, gasKeeperErrorTitleText, gasSubText, gasText, gasTitleText,\r\n    hallThrusterOff, hallThrusterPrimaryText, hallThrusterPrimaryTitleText,\r\n    hallThrusterOn, hallThrusterSecondaryOffText, hallThrusterSecondaryOnText, clickHollowCathodeGuideText,\r\n    heat, heatKeeperErrorSubText, heatKeeperErrorText, heatKeeperErrorTitleText, heatSubText, heatText, heatTitleText,\r\n    keeper, keeperSubText, keeperText, keeperTitleText,\r\n    plasma, plasmaSubText, plasmaText, plasmaTitleText,\r\n    recapText,\r\n    path_electron,\r\n    path_ionized_xenon,\r\n    path_lm_csv,\r\n    path_xenon\r\n} from \"./Galactic\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/// CONSTANTS ///\r\n// Testing?/unknown //\r\nconst {promisify} = require('util')\r\nconst sleep = promisify(setTimeout)\r\nconst path_landing_page_URL = \"/hollow-cathode-visualization\";\r\n\r\n// Image Paths //\r\nconst path_hall_thruster = \"/hollow-cathode-visualization/images/big_hall_thruster_off_HDPS125.png\";\r\nconst path_hall_thruster_on = \"/hollow-cathode-visualization/images/big_hall_thruster_ON_HDPS125.png\";\r\n// path_lm_csv is in galactic constants since it is also used in Painter.js\r\n//\r\n\r\n/**\r\n * Learning mode element\r\n * Should be rendered inside a <div id={\"canvasHolder\"}>\r\n * also with props: id={\"LearningMode\"} deltastage={base} scene={[true,false,false,false,false,false,false,false]}\r\n */\r\nexport class LearningMode extends React.Component {\r\n\r\n    // Instance variables:\r\n    // (all essentially cosmetic) (created in constructor)\r\n    deltastage;\r\n    scene;\r\n    canvas;\r\n    layers; // layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5, thruster off = 6, thruster on = 7]; //layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5, ctx6, ctx7];\r\n    painter;\r\n    thrusterButtonText; // if the thruster is on, this text says \"off\", and vice versa\r\n\r\n    constructor(props){\r\n        super();\r\n\r\n        // initialize canvas instance variables\r\n\r\n        //Hollow Cathode Canvases:\r\n        this.canvas0 = React.createRef();   //// 1 - create ref\r\n        this.canvas1 = React.createRef();\r\n        this.canvas2 = React.createRef();\r\n        this.canvas3 = React.createRef();\r\n        // this.canvas4 = React.createRef();\r\n        // this.canvas5 = React.createRef();\r\n        //\r\n        // //Hall Thruster Canvases:\r\n        // this.canvas6 = React.createRef();   //Hall Thruster OFF\r\n        // this.canvas7 = React.createRef();   //Hall Thruster ON\r\n\r\n        // bind handler function(s)\r\n        this.HeatInsertToggle_HandleClick = this.HeatInsertToggle_HandleClick.bind(this);\r\n        this.GasFeedToggle_HandleClick = this.GasFeedToggle_HandleClick.bind(this);\r\n        this.KeeperElectrodeToggle_HandleClick = this.KeeperElectrodeToggle_HandleClick.bind(this);\r\n        this.nextButton_plasma_HandleClick = this.nextButton_plasma_HandleClick.bind(this);\r\n        this.nextButton_eject_HandleClick = this.nextButton_eject_HandleClick.bind(this);\r\n        this.hallThrusterToggle_HandleClick = this.hallThrusterToggle_HandleClick.bind(this);\r\n        this.nextButton_hallThrusterToShell_HandleClick = this.nextButton_hallThrusterToShell_HandleClick.bind(this);\r\n        this.nextButton_shellToLearningModeCore_HandleClick = this.nextButton_shellToLearningModeCore_HandleClick.bind(this);\r\n        this.nextButton_end_HandleClick = this.nextButton_end_HandleClick.bind(this);\r\n\r\n\r\n        // initialize state\r\n        this.state = { deltastage: props.deltastage, scene: props.scene, titleText:hallThrusterPrimaryTitleText, text: hallThrusterPrimaryText, thrusterButtonText: \"On\"};\r\n\r\n        // MANUAL OVERRIDE //\r\n        let newScene = this.state.scene;\r\n        newScene[hallThrusterOn] = false;\r\n        this.state = { deltastage: props.deltastage, scene: newScene, titleText:hallThrusterPrimaryTitleText, text: hallThrusterPrimaryText, thrusterButtonText: \"On\"};\r\n\r\n        // reload page bug temporary fix\r\n        try{\r\n            this.state.canvas_height = document.getElementById(\"page-container\").clientHeight;\r\n            this.state.canvas_width = document.getElementById(\"page-container\").clientWidth;\r\n        }catch(exception){\r\n            document.location.href=path_landing_page_URL;\r\n        }\r\n\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.painter.killProtoParticle();\r\n\r\n            this.setState({\r\n                canvas_height: window.innerHeight * 0.8,\r\n                canvas_width: window.innerWidth\r\n            }, this.scenarioRefresh);\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.hideElement(\"hallThrusterOn-fadeIn\");\r\n        this.hideElement(\"hallThrusterOn-fadeOut\");\r\n\r\n        window.removeEventListener('resize', () => {\r\n            this.painter.killProtoParticle();\r\n\r\n            this.setState({\r\n                canvas_height: window.innerHeight * 0.8,\r\n                canvas_width: window.innerWidth\r\n            }, this.scenarioRefresh);\r\n        });\r\n        this.painter.killProtoParticle();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Hides the element with the given id\r\n     * @param elementId id of element to hide\r\n     */\r\n    hideElement(elementId){\r\n        document.getElementById(elementId).style.display = 'none';\r\n    }\r\n    /**\r\n     * Shows the element with the given id\r\n     * @param elementId id of element to show\r\n     */\r\n    showElement(elementId){\r\n        document.getElementById(elementId).style.display = 'flex';\r\n    }\r\n\r\n    /**\r\n     * //:unused?\r\n     *\r\n     * @param elementId\r\n     * @returns {boolean}\r\n     */\r\n    isElementShown(elementId){\r\n        if(document.getElementById(elementId).style.display === 'flex') {\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    delay(time) {\r\n        return new Promise(resolve => setTimeout(resolve, time));\r\n    }\r\n\r\n\r\n    /**\r\n     * componentDidMount()\r\n     * Called when canvas element is mounted on page (canvas element is unusable up until this point)\r\n     */\r\n    componentDidMount() {\r\n\r\n        // initialize instance variables for each canvas element/layer\r\n        const ctx0 = this.canvas0.current.getContext('2d'); // base = 0;\r\n        const ctx1 = this.canvas1.current.getContext('2d'); // heat = 1;\r\n        const ctx2 = this.canvas2.current.getContext('2d'); // gas = 2;\r\n        const ctx3 = this.canvas3.current.getContext('2d'); // labels = 3;\r\n        // const ctx4 = this.canvas4.current.getContext('2d'); // keeper = 4;\r\n        // const ctx5 = this.canvas5.current.getContext('2d'); // eject = 5;\r\n        // const ctx6 = this.canvas6.current.getContext('2d'); // Hall Thruster OFF = 6;\r\n        // const ctx7 = this.canvas7.current.getContext('2d'); // Hall Thruster ON = 7;\r\n\r\n        document.getElementById(\"HallThrusterNext\").onclick = this.nextButton_hallThrusterToShell_HandleClick;\r\n        document.getElementById(\"HallThrusterNext_Accessible\").onclick = this.nextButton_hallThrusterToShell_HandleClick;\r\n\r\n        // this.layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5, ctx6, ctx7]; // layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5, thruster off = 6, thruster on = 7];\r\n        this.layers = [ctx0, ctx1, ctx2, ctx3]; // layers[base = 0, heat = 1, gas = 2, labels = 3; (new)\r\n        this.painter = new Painter(this.layers);\r\n        this.scenarioRefresh();\r\n\r\n    }\r\n\r\n    /**\r\n     * scenarioRefresh()\r\n     *\r\n     * Populates the canvas based on the current state, is hopefully called whenever a change is made (ex: the onClick functions)\r\n     * You can see the end of this function as the end of the current update/iteration.\r\n     */\r\n    scenarioRefresh() {\r\n        // Execute logic based on deltastage and scene\r\n\r\n        //**// hallThrusterOff tells us it is this scene\r\n        //**// hallThrusterOn toggles the thruster\r\n\r\n\r\n        /*// Learning Mode Intro first slide/stage/scene //*/\r\n        if(this.state.scene[hallThrusterOff] === true && this.state.deltastage === hallThrusterOff){\r\n            this.hideElement(\"cathodeShellGuideText\");\r\n            this.hideElement(\"toggleButtonGroup\");\r\n            this.hideElement(\"summaryButton_\");\r\n        }\r\n\r\n        // did the user just turn ON the thrusters?\r\n        if(this.state.scene[hallThrusterOn] === true && this.state.deltastage === hallThrusterOn){\r\n            this.showElement(\"hallThrusterOn-fadeIn\");\r\n            this.hideElement(\"hallThrusterOn-fadeOut\");\r\n\r\n            this.showElement(\"hallThrusterOnLabelDiv\");\r\n            this.showElement(\"clickHollowCathodeGuideText\");\r\n            this.hideElement(\"hallThrusterOffLabelDiv\");\r\n\r\n            this.setState({thrusterButtonText: \"Off\"});\r\n        }\r\n\r\n        // did the user just turn OFF the thrusters?\r\n        if(this.state.scene[hallThrusterOn] === false && this.state.deltastage === hallThrusterOn){\r\n            this.hideElement(\"hallThrusterOn-fadeIn\");\r\n            this.showElement(\"hallThrusterOn-fadeOut\");\r\n\r\n            this.hideElement(\"hallThrusterOnLabelDiv\");\r\n            this.showElement(\"hallThrusterOffLabelDiv\");\r\n            this.showElement(\"clickHollowCathodeGuideText\");\r\n\r\n            this.setState({thrusterButtonText: \"On\"});\r\n        }\r\n\r\n        /*// Learning Mode core first stage/scene //*/\r\n        // if basedrawing is active\r\n        if(this.state.scene[base] === true){\r\n            this.painter.draw_csv_Base_Drawing()\r\n            // this.painter.clearCanvas(hallThrusterOn)\r\n            // this.painter.clearCanvas(hallThrusterOff)\r\n\r\n\r\n            // if the user just toggled basedrawing\r\n            if(this.state.deltastage === base || this.state.deltastage === hallThrusterOn || this.deltastage === hallThrusterOff){\r\n                // this.painter.draw_csv_Base_Drawing_guide();\r\n                this.setState({titleText: cathodeCSVTitleText, text: cathodeCSVText, subText: cathodeCSVSubText})\r\n            }\r\n\r\n            this.hideElement(\"hallThruster\")\r\n            this.showElement(\"particleKey\")\r\n\r\n        }\r\n        //hide some elements that shouldn't be seen outside cross-sectional view\r\n        else if(this.state.scene[base] === false)\r\n        {\r\n            this.hideElement(\"baseCathode-fadeIn\");\r\n            this.hideElement(\"baseCathode-fadeOut\");\r\n            this.hideElement(\"thrusterAndCathode-fadeOut\");\r\n            this.hideElement(\"baseCathode\")\r\n\r\n            // the user deselected this option/layer\r\n            if (this.state.deltastage === base){\r\n                this.painter.clearCanvas(this.state.deltastage);\r\n\r\n                this.setState({titleText: \"\", text: \"\", subText: \"\"})\r\n            }\r\n        }\r\n\r\n        // if keeper electrode is active\r\n        if(this.state.scene[keeper] === true){\r\n            this.painter.draw_csv_keeper_electrode();\r\n            let t = document.getElementById(\"GasFeedToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"HeatInsertToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"KeeperElectrodeToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            // if the user just toggled the keeper electrode\r\n            if(this.state.deltastage === keeper){\r\n\r\n                this.setState({titleText: keeperTitleText, text: keeperText, subText: keeperSubText})\r\n            }\r\n        }\r\n        // if the user deselected this option/layer\r\n        else if (this.state.deltastage === keeper){\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n            this.painter.stopEjecting();\r\n\r\n            this.setState({titleText: \"\", text: \"\", subText: \"\"}); // clear text\r\n        }\r\n\r\n        // if heat insert is active\r\n        if(this.state.scene[heat] === true){\r\n            let t = document.getElementById(\"GasFeedToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"HeatInsertToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"KeeperElectrodeToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            this.painter.draw_csv_Heat_Insert();\r\n\r\n            // if the user just toggled heat insert\r\n            if(this.state.deltastage === heat) {\r\n\r\n                this.setState({titleText: heatTitleText, text: heatText, subText: heatSubText})\r\n            }\r\n        }\r\n        // if the user deselected this option/layer\r\n        else if (this.state.deltastage === heat){\r\n\r\n            this.painter.killElectronGenerator();\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n\r\n            this.setState({titleText: \"\", text: \"\", subText: \"\"})\r\n        }\r\n\r\n        // if gas feed is active\r\n        if(this.state.scene[gas] === true){\r\n            this.painter.draw_csv_gas_feed();\r\n            let t = document.getElementById(\"GasFeedToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"HeatInsertToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"KeeperElectrodeToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n\r\n            // if the user just toggled the gas feed\r\n            if(this.state.deltastage === gas){\r\n\r\n                this.setState({titleText: gasTitleText, text: gasText, subText: gasSubText})\r\n            }\r\n        }\r\n        // if the user deselected this option/layer\r\n        else if (this.state.deltastage === gas){\r\n            this.painter.killXenonGenerator();\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n\r\n            this.setState({titleText: \"\", text: \"\", subText: \"\"})\r\n        }\r\n\r\n        // INTERNAL PLASMA // -----------\r\n        // if internal plasma is true\r\n        if(this.state.scene[plasma]){\r\n            if(this.state.scene[heat] && this.state.scene[gas]){\r\n                this.painter.draw_csv_internal_plasma();\r\n\r\n                // if the user  just triggered the internal plasma\r\n                if(this.state.deltastage === plasma){\r\n                    this.setState({titleText: plasmaTitleText, text: plasmaText, subText: plasmaSubText})\r\n                }\r\n            } else {\r\n                // plasma shouldn't exist\r\n                let newScene = this.state.scene;\r\n                newScene[plasma] = false;\r\n\r\n                // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n                this.setState((state, props) => {\r\n                    return { deltastage: plasma, scene: newScene };\r\n                }, () => {this.scenarioRefresh()});\r\n            }\r\n        }\r\n\r\n        // if both heat and gas are true but internal plasma isn't\r\n        else if (this.state.scene[heat] && this.state.scene[gas]){\r\n            // there probably should be internal plasma?\r\n\r\n            // see if plasma should be required to be next in line\r\n            if(this.state.deltastage === heat || this.state.deltastage === gas){\r\n                // show next button (restrict user mobility)\r\n                // this.painter.clearCanvas(plasma);\r\n                this.hideElement(\"toggleButtonGroup\");\r\n                this.showElement(\"nextButton\");\r\n                document.getElementById('nextButton').style.display='block';\r\n                document.getElementById(\"nextButton\").onclick = this.nextButton_plasma_HandleClick;\r\n            }\r\n        }\r\n        // if plasma is false and deltastage is plasma\r\n        else if (this.state.deltastage === plasma){\r\n            // the user deselected this option/layer\r\n            // this.painter.clearCanvas(this.state.deltastage);\r\n            this.painter.stopIonizing();\r\n\r\n            this.setState({titleText: \"\", text: \"\", subText: \"\"})\r\n        }\r\n\r\n        // EJECT PLASMA // -----------\r\n        if(this.state.scene[eject]){\r\n            if(this.state.scene[heat] && this.state.scene[gas] && this.state.scene[plasma] && this.state.scene[keeper]){\r\n                // this.painter.draw_csv_eject_plasma();\r\n\r\n                // if the user just triggered eject plasma\r\n                if(this.state.deltastage === eject){\r\n                    this.setState({titleText: ejectTitleText, text: ejectText, subText: ejectSubText})\r\n                }\r\n            } else {\r\n                // plasma shouldn't eject\r\n                let newScene = this.state.scene;\r\n                newScene[eject] = false;\r\n\r\n                // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n                this.setState((state, props) => {\r\n                    return { deltastage: eject, scene: newScene };\r\n                }, () => {this.scenarioRefresh()});\r\n            }\r\n        }\r\n        else if (this.state.scene[heat] && this.state.scene[gas] && this.state.scene[plasma] && this.state.scene[keeper]){\r\n            // there probably should be ejecting plasma?\r\n\r\n            // see if eject should be required to be next in line\r\n            if(this.state.deltastage === keeper){\r\n                // show next button (restrict user mobility)\r\n                // this.painter.clearCanvas(eject);\r\n                this.hideElement(\"toggleButtonGroup\");\r\n                this.showElement(\"nextButton\");\r\n                this.nextButton_eject_HandleClick(); // skip eject\r\n            }\r\n        }\r\n        // if eject is false and deltastage is plasma\r\n        else if (this.state.deltastage === eject){\r\n            // the user deselected this option/layer\r\n            // this.painter.clearCanvas(this.state.deltastage);\r\n            this.painter.stopEjecting();\r\n\r\n            this.setState({titleText: \"\", text: \"\", subText: \"\"})\r\n        }\r\n        //GAS ON, KEEPER ON, NO PLASMA\r\n        if (this.state.scene[gas] === true  && this.state.scene[keeper] === true && this.state.scene[plasma] === false && (this.state.deltastage === gas || this.state.deltastage === keeper)) {\r\n            if(this.state.deltastage === keeper){\r\n                let t = document.getElementById(\"HeatInsertToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"GasFeedToggle\")\r\n                t.classList.add(\"disabled\")\r\n            }\r\n            else{\r\n                let t = document.getElementById(\"HeatInsertToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"KeeperElectrodeToggle\")\r\n                t.classList.add(\"disabled\")\r\n\r\n            }\r\n            this.setState({titleText: gasKeeperErrorTitleText, text: gasKeeperErrorText, subText: gasKeeperErrorSubText});\r\n\r\n        }\r\n\r\n        //HEAT ON, KEEPER ON, NO PLASMA\r\n        if(this.state.scene[heat] && this.state.scene[keeper] && !this.state.scene[plasma] && (this.state.deltastage === heat || this.state.deltastage === keeper)) {\r\n            this.setState({titleText: heatKeeperErrorTitleText, text: heatKeeperErrorText, subText: heatKeeperErrorSubText})\r\n            if(this.state.deltastage === keeper){\r\n                let t = document.getElementById(\"HeatInsertToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"GasFeedToggle\")\r\n                t.classList.add(\"disabled\")\r\n            }\r\n            else{\r\n                let t = document.getElementById(\"GasFeedToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"KeeperElectrodeToggle\")\r\n                t.classList.add(\"disabled\")\r\n\r\n            }\r\n        }\r\n\r\n        //TODO this is likely not a good solution for checking the user has completed learning mode\r\n        if(this.state.scene[base] === true\r\n            && this.state.scene[heat] === true\r\n            && this.state.scene[gas] === true\r\n            && this.state.scene[plasma] === true\r\n            && this.state.scene[keeper] === true\r\n            && this.state.scene[eject] === true){\r\n            this.hideElement(\"toggleButtonGroup\");\r\n            this.showElement(\"nextButton\");\r\n            document.getElementById(\"nextButton\").onclick = this.nextButton_end_HandleClick;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * HeatInsertToggle_HandleClick()\r\n     * Onclick handler for the heat insert toggle button\r\n     */\r\n    HeatInsertToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[heat] = !newScene[heat];\r\n\r\n        if(newScene[heat] === true){\r\n            document.getElementById(\"HeatInsertToggle\").classList.replace(\"notActive\", \"active\");\r\n        } else {\r\n            document.getElementById(\"HeatInsertToggle\").classList.replace(\"active\", \"notActive\");\r\n        }\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: heat, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * GasFeedToggle_HandleClick()\r\n     * Onclick handler for the gas feed toggle button\r\n     */\r\n    GasFeedToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[gas] = !newScene[gas];\r\n\r\n        if(newScene[gas] === true){\r\n            document.getElementById(\"GasFeedToggle\").classList.replace(\"notActive\", \"active\");\r\n        } else {\r\n            document.getElementById(\"GasFeedToggle\").classList.replace(\"active\", \"notActive\");\r\n        }\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: gas, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * KeeperElectrodeToggle_HandleClick()\r\n     * Onclick handler for the keeper electrode toggle button\r\n     */\r\n    KeeperElectrodeToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[keeper] = !newScene[keeper];\r\n\r\n        if(newScene[keeper] === true){\r\n            document.getElementById(\"KeeperElectrodeToggle\").classList.replace(\"notActive\", \"active\");\r\n        } else {\r\n            document.getElementById(\"KeeperElectrodeToggle\").classList.replace(\"active\", \"notActive\");\r\n        }\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: keeper, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * nextButton_plasma_HandleClick()\r\n     * Onclick handler for the \"next\" button for the internal plasma scene, updates the state and DOM via appropriate logic\r\n     */\r\n    nextButton_plasma_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[plasma] = true;\r\n\r\n        // update DOM buttons (replace next with toggles)\r\n        this.hideElement(\"nextButton\");\r\n        this.showElement(\"toggleButtonGroup\");\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: plasma, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n    }\r\n\r\n    /**\r\n     * nextButton_shellToLearningModeCore_HandleClick() //:unused?\r\n     */\r\n    async triggerZoom() {\r\n\r\n    }\r\n    async nextButton_shellToLearningModeCore_HandleClick() {\r\n\r\n        // trigger zoom animation\r\n        document.getElementById(\"shellToCrossZoom\").classList.add(\"shellToCrossZoomAnimationClass\");\r\n        this.hideElement(\"cathodeShellGuideText\");\r\n\r\n        this.hideElement(\"hallThruster\");\r\n        this.showElement(\"shellToCrossZoom\");\r\n\r\n        await this.delay(1300);\r\n\r\n        this.hideElement(\"shellToCrossZoom\");\r\n        this.showElement(\"shellFadeOut\");\r\n\r\n        this.hideElement(\"hallThrusterButtonGroup\");\r\n        this.showElement(\"toggleButtonGroup\");\r\n\r\n        this.hideElement(\"hallThrusterButtonGroup\");\r\n\r\n        this.hideElement(\"HallThrusterNext\");\r\n\r\n        this.hideElement(\"hallThrusterOn-fadeIn\")\r\n        this.hideElement(\"hallThrusterOn-fadeOut\")\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: base, scene: [true,false,false,false,false,false,false,false] };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * nextButton_hallThrusterToShell_HandleClick()\r\n     */\r\n    nextButton_hallThrusterToShell_HandleClick() {\r\n        this.showElement(\"cathodeShellGuideText\");\r\n\r\n        this.hideElement(\"hallThrusterOffLabelDiv\");\r\n        this.hideElement(\"hallThrusterOnLabelDiv\");\r\n        this.hideElement(\"clickHollowCathodeGuideText\");\r\n\r\n        // transition out of \"on\" state before zooming\r\n        this.hideElement(\"hallThrusterOn-fadeIn\");\r\n        this.hideElement(\"hallThrusterOn-fadeOut\");\r\n\r\n        let nextButton = document.getElementById(\"HallThrusterNext\");\r\n        let nextButton_Accessible = document.getElementById(\"HallThrusterNext_Accessible\");\r\n\r\n        nextButton.classList.replace(\"CathodeHitBox_zoomed_out\", \"CathodeHitBox_zoomed_in\");\r\n        nextButton.onclick = this.nextButton_shellToLearningModeCore_HandleClick;\r\n        nextButton_Accessible.onclick = this.nextButton_shellToLearningModeCore_HandleClick;\r\n\r\n        // trigger zoom animation\r\n        document.getElementById(\"hallThruster\").classList.add(\"hallThrusterToCathodeZoom\");\r\n\r\n        this.hideElement(\"HallThrusterToggle\");\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: hallThrusterOff, scene: [false,false,false,false,false,false,false,false], titleText: cathodeShellPrimaryTitleText, text: cathodeShellPrimaryText};\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    hallThrusterToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[hallThrusterOn] = !newScene[hallThrusterOn];\r\n\r\n        let newThrusterButtonText = \"\";\r\n\r\n        // did the user just turn ON the thrusters?\r\n        if(newScene[hallThrusterOn] === true){\r\n            newThrusterButtonText = \"Off\";\r\n        }\r\n\r\n        // did the user just turn OFF the thrusters?\r\n        if(newScene[hallThrusterOn] === false){\r\n            newThrusterButtonText = \"On\";\r\n        }\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: hallThrusterOn, scene: newScene, thrusterButtonText: newThrusterButtonText };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * nextButton_eject_HandleClick()\r\n     * Onclick handler for the \"next\" button for the eject plasma scene, updates the state and DOM via appropriate logic\r\n     */\r\n    nextButton_eject_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[eject] = !newScene[eject];\r\n        // update DOM buttons (replace next with normal toggles)\r\n        this.hideElement(\"nextButton\");\r\n        this.showElement(\"summaryButton_\")\r\n\r\n\r\n        newScene[eject] = !newScene[eject];\r\n        this.hideElement('nextButton');\r\n        this.showElement('summaryButton');\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: eject, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * nextButton_end_HandleClick()\r\n     * Onclick handler for the \"next\" button for the eject plasma scene's ending\r\n     * this leads to the view were we show them some links to follow and such\r\n     */\r\n    /**\r\n     * LINK TO SUMMARY PAGE HERE!!!! //:debug?\r\n     */\r\n    nextButton_end_HandleClick() {\r\n        this.hideElement('nextButton');\r\n        this.showElement('summaryButton');\r\n\r\n        this.setState({text: recapText})\r\n    }\r\n\r\n    /**\r\n     * getLayer(layer)\r\n     * @param layer layer number which you want to get\r\n     * @returns ctx 2d canvas context for that layer\r\n     */\r\n    getLayer(layer){\r\n        return this.layers[layer];\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id={'canvasHolder'}>\r\n                <canvas id={\"canvas0\"} ref={this.canvas0} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > This webapp is not supported on your current browser, please try again with a different browser. </canvas>\r\n                <canvas id={\"canvas1\"} ref={this.canvas1} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>\r\n                <canvas id={\"canvas2\"} ref={this.canvas2} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>\r\n                <canvas id={\"canvas3\"} ref={this.canvas3} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>\r\n                {/*<canvas id={\"canvas4\"} ref={this.canvas4} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>*/}\r\n                {/*<canvas id={\"canvas5\"} ref={this.canvas5} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>*/}\r\n                {/*<canvas id={\"canvas6\"} ref={this.canvas6} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>*/}\r\n                {/*<canvas id={\"canvas7\"} ref={this.canvas7} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > </canvas>*/}\r\n\r\n                <img id={\"hallThruster\"} src={path_hall_thruster} className={\" \"} alt={\"Hall Thruster Off\"}/>\r\n\r\n                <img id={\"hallThrusterOn-fadeIn\"} src={path_hall_thruster_on} className={\"fade-in  \"} alt={\"Hall Thruster On: Fade In\"}/>\r\n                <img id={\"hallThrusterOn-fadeOut\"} src={path_hall_thruster_on} className={\"fade-out  \"} alt={\"Hall Thruster On: Fade Out\"}/>\r\n\r\n                <img id={\"shellToCrossZoom\"} src={path_hall_thruster} className={\"shellToCrossZoomAnimation\"} alt={\"Cathode shell to cathode cross section zoom\"}/>\r\n                <img id={\"shellFadeOut\"} src={path_hall_thruster} className={\" shell-fade-out\"} alt={\"Cathode shell fade out\"}/>\r\n\r\n                <img id={\"baseCathode-fadeIn\"} src={path_lm_csv} className={\"fade-in\"} alt={\"Hollow Cathode: Fade In\"}/>\r\n                <img id={\"baseCathode-fadeOut\"} src={path_lm_csv} className={\"fade-out\"} alt={\"Hollow Cathode: Fade Out\"}/>\r\n                <img id={\"thrusterAndCathode-fadeOut\"} src={path_hall_thruster} className={\"fade-out\"} alt={\"Thruster and Cathode: Fade Out\"}/>\r\n                <img id={\"baseCathode\"} src={path_lm_csv} alt={\"Base Hollow Cathode\"}/>\r\n\r\n                <button id={\"HallThrusterNext\"}\r\n                        className={\"CathodeHitBox_zoomed_out\"}>\r\n                </button>\r\n\r\n                <div id={\"backToLandingPageButtonDiv\"} className={\"stackedButtonGroup bottomleftAlign\"} >\r\n                    <Link to={'/hollow-cathode-visualization/'}>\r\n                        <button id={\"backButton\"} className={\"button\"}> Back to Landing Page </button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div id={\"hallThrusterButtonGroup\"} className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                    <button id={\"HallThrusterNext_Accessible\"}\r\n                            className={\"button\"}> Next\r\n                    </button>\r\n                    <button id={\"HallThrusterToggle\"}\r\n                            className={\"button\"}\r\n                            onClick={this.hallThrusterToggle_HandleClick}> Turn Power {this.state.thrusterButtonText}\r\n                    </button>\r\n                </div>\r\n\r\n                {/*Hall thruster powered on label/title text*/}\r\n                <div id={\"hallThrusterOffLabelDiv\"}>\r\n                    <label id={\"hallThrusterOffLabel\"}\r\n                           className={\"titleLabel hallThrusterOffTitleLabelPos  \"}> The Hall Thruster Is Off\r\n                    </label>\r\n                    <label id={\"hallThrusterOffSublabel\"}\r\n                           className={\"sublabel hallThrusterOffSublabelPos  \"}>\r\n                        {hallThrusterSecondaryOffText}\r\n                    </label>\r\n                </div>\r\n\r\n                {/*Hall thruster powered on label/title text*/}\r\n                <div id={\"hallThrusterOnLabelDiv\"}>\r\n                    <label id={\"hallThrusterOnLabel\"}\r\n                           className={\"titleLabel hallThrusterOffTitleLabelPos  \"}> The Hall Thruster Is On\r\n                    </label>\r\n                    <label id={\"hallThrusterOnSublabel\"}\r\n                           className={\"sublabel hallThrusterOffSublabelPos  \"}>\r\n                        {hallThrusterSecondaryOnText}\r\n                    </label>\r\n                </div>\r\n\r\n                <div id={\"hallThrusterNameLabelDiv\"}>\r\n                    <label id={\"hallThrusterNameLabel\"}\r\n                           className={\"titleLabel hallThrusterNameTitleLabelPos\"}> {this.state.titleText}\r\n                    </label>\r\n                    <label id={\"hallThrusterNameSublabel\"}\r\n                           className={\"sublabel hallThrusterNameSublabelPos\"}>\r\n                        {this.state.text}\r\n                        <p><b className={\"thrusterGuideText\"}>{this.state.subText}</b></p>\r\n                    </label>\r\n                </div>\r\n\r\n                <label id={\"clickHollowCathodeGuideText\"}\r\n                       className={\"clickHollowCathodeGuideText clickHollowCathodeGuideTextPos  \"}>\r\n                    {clickHollowCathodeGuideText}\r\n                </label>\r\n\r\n                <label id={\"cathodeShellGuideText\"}\r\n                       className={\"cathodeShellGuideText cathodeShellGuideTextPos  \"}>\r\n                    {cathodeShellGuideText}\r\n                </label>\r\n\r\n                <div id={\"toggleButtonGroup\"} className={\"stackedButtonGroup bottomrightAlign  \"}>\r\n\r\n                    <div id={\"particleKey\"} className={\"mrow\"}>\r\n                        <div className={\"mmrow\"}>\r\n                            <img src={path_electron} alt={\"Electron image alt text\"} className={\"keyImage electronKey\"}/>\r\n                            <p className={\"keyLabel\"}>Electron</p>\r\n                        </div>\r\n                        <div className={\"mmrow\"}>\r\n                            <img src={path_xenon} alt={\"Xenon image alt text\"} className={\"keyImage xenonKey\"}/>\r\n                            <p className={\"keyLabel\"}>Xenon</p>\r\n                        </div>\r\n                        <div className={\"mmrow\"}>\r\n                            <img src={path_ionized_xenon} alt={\"Ionized Xenon image alt text\"} className={\"keyImage xenonKey\"}/>\r\n                            <p className={\"keyLabel\"}>Ionized Xenon</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button id={\"HeatInsertToggle\"}\r\n                            className={\"button notActive\"}\r\n                            onClick={this.HeatInsertToggle_HandleClick}> Toggle Heaters\r\n                    </button>\r\n                    <button id={\"GasFeedToggle\"}\r\n                            className={\"button notActive\"}\r\n                            style={{display: \"block\"}}\r\n                            onClick={this.GasFeedToggle_HandleClick}> Toggle Gas Feed\r\n                    </button>\r\n                    <button id={\"KeeperElectrodeToggle\"}\r\n                            className={\"button notActive\"}\r\n                            onClick={this.KeeperElectrodeToggle_HandleClick}> Toggle Keeper Electrode\r\n                    </button>\r\n                </div>\r\n                <button id={\"nextButton\"}\r\n                        className={\"button stackedButtonGroup bottomrightAlign\"}\r\n                        style={{display: \"none\"}}> Next\r\n                </button>\r\n\r\n                <Link to={'/summary'} id={'summaryButton'}>\r\n                    <button id={'summaryButton_'} className={\"button stackedButtonGroup bottomCenterAlign\"} hidden={true}>\r\n                        Summary\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LearningMode;\r\n","import React from \"react\";\r\nimport Painter from \"./Painter\";\r\n\r\n/**\r\n * Mapping layers via constants\r\n * These should always be used to reference layers when used as parameters to a function or when interacting with this.state.\r\n * This allows us to easily add and remove layers.\r\n */\r\nimport {base, eject, gas, heat, keeper, plasma} from \"./Galactic\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * Presentation mode element\r\n * Should be rendered inside a <div id={\"canvasHolder\"}>\r\n * also with props: id={\"PresMode\"} deltastage={base} scene={[true,false,false,false,false,false]}\r\n */\r\nclass PresMode extends React.Component {\r\n    // Instance variables:\r\n    // (all basically cosmetic) (created in constructor)\r\n    deltastage;\r\n    scene;\r\n    canvas;\r\n    layers; // layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5]; //layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5];\r\n    painter;\r\n    static isAuto = false;\r\n\r\n    constructor(props){\r\n        super();\r\n\r\n        // initialize canvas instance variables\r\n        this.canvas0 = React.createRef();                              //// 1 - create ref\r\n        this.canvas1 = React.createRef();\r\n        this.canvas2 = React.createRef();\r\n        this.canvas3 = React.createRef();\r\n        // this.canvas4 = React.createRef();\r\n        // this.canvas5 = React.createRef();\r\n        // this.canvas6 = React.createRef();   //Hall Thruster OFF\r\n        // this.canvas7 = React.createRef();   //Hall Thruster ON\r\n\r\n        // bind handler function(s)\r\n        this.nextButton_HandleClick = this.nextButton_HandleClick.bind(this);\r\n        this.autoToggleButton_HandleClick = this.autoToggleButton_HandleClick.bind(this)\r\n\r\n        //sets ID of the autonomous interval to an used value by default\r\n        this.autoID = 0\r\n        this.delay = 5000\r\n\r\n        // initialize state\r\n        this.state = { deltastage: props.deltastage, scene: props.scene };\r\n\r\n        // reload page bug temporary fix\r\n        try{\r\n            this.state.canvas_height = document.getElementById(\"page-container\").clientHeight;\r\n            this.state.canvas_width = document.getElementById(\"page-container\").clientWidth;\r\n        }catch(exception){\r\n            document.location.href=\"/hollow-cathode-visualization\";\r\n        }\r\n\r\n\r\n        window.addEventListener('resize', () => {\r\n            this.painter.killProtoParticle();\r\n\r\n            this.setState({\r\n                canvas_height: window.innerHeight * 0.8,\r\n                canvas_width: window.innerWidth\r\n            }, this.scenarioRefresh);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * componentDidMount()\r\n     * Called when canvas element is mounted on page (canvas element is unusable up until this point)\r\n     */\r\n    componentDidMount() {\r\n        // an attempted fix for reloading breaking pages\r\n        // if(this.state.canvas_width === 0 || this.state.canvas_height === 0){\r\n        //     this.state.canvas_height = document.getElementById(\"page-container\").clientHeight;\r\n        //     this.state.canvas_width = document.getElementById(\"page-container\").clientWidth;\r\n        // }\r\n\r\n        // initialize instance variables for each canvas element/layer\r\n        const ctx0 = this.canvas0.current.getContext('2d'); // base = 0;\r\n        const ctx1 = this.canvas1.current.getContext('2d'); // heat = 1;\r\n        const ctx2 = this.canvas2.current.getContext('2d'); // gas = 2;\r\n        const ctx3 = this.canvas3.current.getContext('2d'); // plasma = 3;\r\n        // const ctx4 = this.canvas4.current.getContext('2d'); // keeper = 4;\r\n        // const ctx5 = this.canvas5.current.getContext('2d'); // eject = 5;\r\n        // const ctx6 = this.canvas6.current.getContext('2d'); // Hall Thruster OFF = 6;\r\n        // const ctx7 = this.canvas7.current.getContext('2d'); // Hall Thruster ON = 7;\r\n\r\n        // this.layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5, ctx6, ctx7];\r\n        //      layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5, thruster off = 6, thruster on = 7];\r\n        this.layers = [ctx0, ctx1, ctx2, ctx3];\r\n        this.painter = new Painter(this.layers);\r\n        this.scenarioRefresh();\r\n        PresMode.isAuto= false;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', () => {\r\n            this.painter.killProtoParticle();\r\n\r\n            this.setState({\r\n                canvas_height: window.innerHeight * 0.8,\r\n                canvas_width: window.innerWidth\r\n            }, this.scenarioRefresh);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * scenarioRefresh()\r\n     *\r\n     * Populates the canvas based on the current state, is hopefully called whenever a change is made (ex: the onClick functions)\r\n     * You can see the end of this function as the end of the current update/iteration.\r\n     */\r\n    scenarioRefresh() {\r\n        // clear all drawings if the user just entered presentation mode or it looped back to the beginning\r\n        if (this.state.scene[base] === true && this.state.scene[heat] === false) {\r\n            // clear every layer, and all particles, and all generators\r\n            this.painter.killProtoParticle();\r\n            for (let i = base; i < this.state.scene.length; i++) {\r\n                this.painter.clearCanvas(i);\r\n            }\r\n        }\r\n\r\n        // if basedrawing is active\r\n        if (this.state.scene[base] === true) {\r\n            this.painter.draw_csv_Base_Drawing();\r\n        }\r\n\r\n        // if heat insert is active\r\n        if (this.state.scene[heat] === true) {\r\n            this.painter.draw_csv_Heat_Insert();\r\n        }\r\n\r\n        // if gas feed is active\r\n        if (this.state.scene[gas] === true) {\r\n            this.painter.draw_csv_gas_feed();\r\n        }\r\n\r\n        // if internal plasma is active\r\n        if (this.state.scene[plasma] === true) {\r\n            this.painter.draw_csv_internal_plasma();\r\n        }\r\n\r\n        // if keeper electrode is active\r\n        if (this.state.scene[keeper] === true) {\r\n            this.painter.draw_csv_keeper_electrode();\r\n        }\r\n\r\n        // // if eject plasma is active\r\n        // if (this.state.scene[eject] === true) {\r\n        //     // this.painter.draw_csv_eject_plasma();\r\n        // }\r\n\r\n    }\r\n\r\n    /**\r\n     * nextButton_HandleClick()\r\n     * Onclick handler for the \"next\" button, updates the state via appropriate logic\r\n     */\r\n    nextButton_HandleClick() {\r\n        let newdeltastage = this.state.deltastage;\r\n        let newscene = this.state.scene;\r\n\r\n        // update the state, currently does not show hall thruster information, and skips those steps entirely by design\r\n        if(this.state.deltastage === this.state.scene.length - 4){\r\n            // special case: loop to beginning         note: this loop intentionally starts at 1 instead of zero\r\n            for (let i = 1; i < this.state.scene.length; i++) {\r\n                newdeltastage = base;\r\n                newscene[i] = false;\r\n            }\r\n        } else {\r\n            // normal case: move to next animation stage\r\n            for (let i = 1; i < this.state.scene.length; i++) {\r\n                if(this.state.scene[i] === false){\r\n                    newdeltastage = i;\r\n                    newscene = this.state.scene;\r\n                    newscene[i] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: newdeltastage, scene: newscene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n        // WARNING: code past setState will not be synchronously executed\r\n    }\r\n\r\n    /**\r\n     * backButton_HandleClick()\r\n     * Onclick handler for the \"back\" button, reloads the landing page\r\n     */\r\n    // backButton_HandleClick() {\r\n    //     // render learning mode\r\n    //     ReactDOM.render(\r\n    //         <div id={\"canvasHolder\"}>\r\n    //             <LandingPage id={\"landingPage\"}/>\r\n    //         </div>,\r\n    //         document.getElementById('root')\r\n    //     );\r\n    // }\r\n\r\n    /**\r\n     * autoToggleButton_HandleClick()\r\n     * Onclick handler for the \"Autonomous/Manual\" button, starts the looping progress\r\n     */\r\n    autoToggleButton_HandleClick() {\r\n        PresMode.isAuto = !PresMode.isAuto;\r\n\r\n        document.getElementById(\"autoToggleButton\").classList.toggle(\"active\");\r\n\r\n        if(PresMode.isAuto){\r\n            //when in auto mode, the next button is hidden, but the handler function for 'next' is run every this.delay (currently 5000) milliseconds\r\n            document.getElementById(\"nextButton\").style.visibility = 'hidden'\r\n            this.autoID = setInterval(()=>{this.nextButton_HandleClick()}, this.delay)\r\n        }\r\n        else{\r\n            //when out of auto mode, the interval is stopped, and the 'next' button is returned\r\n            document.getElementById(\"nextButton\").style.visibility = 'visible'\r\n            clearInterval(this.autoID)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id={'canvasHolder'}>\r\n                <canvas id={\"canvas0\"} ref={this.canvas0} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas1\"} ref={this.canvas1} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas2\"} ref={this.canvas2} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas3\"} ref={this.canvas3} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                {/*<canvas id={\"canvas4\"} ref={this.canvas4} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>*/}\r\n                {/*<canvas id={\"canvas5\"} ref={this.canvas5} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>*/}\r\n                {/*<canvas id={\"canvas6\"} ref={this.canvas6} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>*/}\r\n                {/*<canvas id={\"canvas7\"} ref={this.canvas7} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>*/}\r\n\r\n                <div className={\"stackedButtonGroup bottomleftAlign\"}>\r\n                    <Link to={'/'}>\r\n                        <button id={\"backButton\"} className={\"button\"}> Back to Landing Page </button>\r\n                    </Link>\r\n                    <button id={\"autoToggleButton\"} className={\"button\"} onClick={this.autoToggleButton_HandleClick}> Toggle Mode </button>\r\n                </div>\r\n                <div className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                    <button id={\"nextButton\"} className={\"button\"} onClick={this.nextButton_HandleClick}> Next </button>\r\n                </div>\r\n            </div>\r\n        ) //// 2 - attach ref to node via ref = this.canvas#\r\n    }\r\n}\r\n\r\nexport default PresMode;","import React from 'react'\r\nimport PresMode from \"./PresMode\";\r\nimport {base, link1url, link2url, link3url, recapText} from \"./Galactic\";\r\n\r\n\r\nclass SummaryPage extends React.Component{\r\n    componentDidMount() {\r\n        PresMode.isAuto = false;\r\n\r\n        if (PresMode.isAuto === false){\r\n            // console.log(\"Summary toggle result: \"+PresMode.isAuto);\r\n            document.getElementById('autoToggleButton').click();\r\n        }\r\n\r\n        document.getElementById('autoToggleButton').style.display='none';\r\n        document.getElementById('nextButton').display= 'none';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n                <div className={\"summaryPageContainer\"}>\r\n                    <div className={'summaryTitleLabel summaryTitlePos'}>\r\n                        Let's go over what you learned.\r\n                    </div>\r\n\r\n                    <div id={'summaryContent'} className={'summarySubLabel summarySubLabelPos'}>\r\n                        {recapText}\r\n                    </div>\r\n\r\n                    <div className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                        <a href={link1url}>\r\n                            <button\r\n                                className={\"button notActive\"}> Hall Thrusters\r\n                            </button>\r\n                        </a>\r\n                        <a href={link2url}>\r\n                            <button\r\n                                    className={\"button notActive\"}\r\n                                    style={{display: \"block\"}}> The Psyche Mission\r\n                            </button>\r\n                        </a>\r\n                        {/*<a href={link3url}>*/}\r\n                        {/*    <button*/}\r\n                        {/*            className={\"button notActive\"}> ???*/}\r\n                        {/*    </button>*/}\r\n                        {/*</a>*/}\r\n                    </div>\r\n                </div>\r\n                <PresMode id={\"presMode\"} className={\"presMode\"} deltastage={base} scene={[true, false, false, false, false, false, false, false]} onClick={\"eventHandle\"}/>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryPage;","import React from \"react\";\r\n\r\nclass RefComponent extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* I moved this inline styling into its class (referenceDiv) */\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div id={'ref'} className={\"referenceDiv\"}> {/* I moved the inline styling into its class (referenceDiv) */}\r\n            <div className={\"summaryTitlePos\"}>\r\n                REFERENCES\r\n            </div>\r\n            <div className={'refSubLabel refSubLabelPos'}>\r\n                <label>\r\n                    [1]    D. M. Goebel and I. Katz, “Fundamentals of Electric Propulsion: Ion and Hall Thrusters,” <i>JPL Space Science & Technology Series</i>, chapter 1-2, Mar. 2008. Available: <a href={\"https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf\"} className={'reference-link'}>https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    [2]    D. M. Goebel and I. Katz, “Fundamentals of Electric Propulsion: Ion and Hall Thrusters,” <i>JPL Space Science & Technology Series</i>, chapter 6, Mar. 2008. Available: <a href={\"https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf\"} className={'reference-link'}>https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    [3]    “Glossary,” Glossary | MIT Plasma Science and Fusion Center, 2021. [Online]. Available: <a href={\"https://www.psfc.mit.edu/vision/glossary.\"} className={'reference-link'}>https://www.psfc.mit.edu/vision/glossary.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    [4]    J. D. Frieman, “CHARACTERIZATION OF BACKGROUND NEUTRAL FLOWS IN VACUUM TEST FACILITIES AND IMPACTS ON HALL EFFECT THRUSTER OPERATION,” dissertation, Georgia Institute of Technology, Atlanta, GA, 2017. Available: <a href={\"https://mwalker.gatech.edu/papers/FRIEMAN-DISSERTATION-2017.pdf\"} className={'reference-link'}>https://mwalker.gatech.edu/papers/FRIEMAN-DISSERTATION-2017.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label style={{\"margin-bottom\":\"3rem\"}}>\r\n                    [5]    S. T. Lai and K. Cahoy, “Spacecraft Charging,” Encyclopedia of Plasma Technology, pp. 1352–1366, Dec. 2016. Available: <a href={\"https://www.bc.edu/content/dam/files/research_sites/isr/pdf/2017%20Lai%20%26%20Cahoy%20-%20Encyclo.pdf\"} className={'reference-link'}>https://www.bc.edu/content/dam/files/research_sites/isr/pdf/2017%20Lai%20%26%20Cahoy%20-%20Encyclo.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RefComponent;","import './App.css';\r\nimport './landingPage.css';\r\nimport React from 'react';\r\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\r\nimport LandingPage from \"./LandingPage\";\r\nimport LearningMode from \"./LearningMode\";\r\nimport PresMode from \"./PresMode\";\r\nimport SummaryPage from \"./SummaryPage\";\r\nimport RefComponent from \"./Ref.component\";\r\nimport {base, hallThrusterOff} from \"./Galactic\";\r\n\r\nfunction MyRouter(){\r\n    return(\r\n        <div>\r\n            <div className={\"showWhenTooSmall\"}>\r\n                <p>\r\n                    Your window size is too small for this visualization.\r\n                    Please set your window size to full screen before continuing.\r\n                </p>\r\n            </div>\r\n            <div className={\"hideWhenTooSmall\"}>\r\n                <Routes>\r\n                    <Route path={'/'} element={<LandingPage id={\"LandingPage\"}/>}/>\r\n\r\n                    <Route path={'/learning'} element={<LearningMode id={\"LearningMode\"} deltastage={hallThrusterOff}\r\n                                                                              scene={[false, false, false, false, false, false, true, false]}/>}/>\r\n                    <Route path={'/presentation'} element={<PresMode id={\"presMode\"} deltastage={base}\r\n                                                                              scene={[true, false, false, false, false, false, false, false]}/>}/>\r\n                    <Route path={'/summary'} element={<SummaryPage/>}/>\r\n                    <Route path={'/ref'} element={<RefComponent/>}/>\r\n                    <Route path={'/*'} element={<LandingPage id={\"LandingPage\"}/>}/>\r\n                </Routes>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyRouter;","import './App.css';\r\nimport './landingPage.css';\r\nimport React from 'react';\r\n\r\nimport HeaderComponent from \"./Header.component.\";\r\nimport FooterComponent from \"./Footer.component\";\r\n\r\nimport MyRouter from \"./myRouter\";\r\n// dummy data to push images, please delete this comment if you see it //:debug\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <HeaderComponent/>\r\n            <div id=\"page-container\">\r\n                <noscript>You need to enable JavaScript to run this app.</noscript>\r\n                <div id=\"root\" className=\"App App-header\">\r\n                    <MyRouter />\r\n                </div>\r\n            </div>\r\n            <FooterComponent/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './landingPage.css';\r\nimport './App.css';\r\nimport './index.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter hashType={'hashbang'} basename={'/'}>\r\n        <App />\r\n    </HashRouter>,\r\n  document.getElementById('body')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"z_index_2\":\"appModule_z_index_2__PZ9pg\",\"title_pos\":\"appModule_title_pos__3hbT3\"};"],"sourceRoot":""}