{"version":3,"sources":["Header.component..js","Footer.component.js","Galactic.js","ProtoParticle.js","Painter.js","LandingPage.js","LearningMode.js","PresMode.js","SummaryPage.js","Ref.component.js","myRouter.js","App.js","index.js"],"names":["HeaderComponent","document","addEventListener","e","currentDropdown","isDropdownButton","target","matches","closest","classList","toggle","querySelectorAll","forEach","dropdown","remove","className","role","href","src","loading","width","alt","React","Component","FooterComponent","top_of_cathode_constant","bottom_of_cathode_constant","path_lm_csv","recapText","electronImage","Image","xenonImage","ionizedXenonImage","collision_elasticity","TYPE_ELECTRON","TYPE_XENON","TYPE_IONIZEDXENON","particles_array","ejectFlag","ionizeFlag","ProtoParticle","layer","x","y","vx","vy","ax","ay","particle_type","max_y","min_y","max_x","min_x","accelerating","this","id","Math","ceil","random","ctx","canvas","image","charge","radius","console","error","max","min","floor","height","anime_key","interval","halfLife","push","drawImage","temp_this","window","requestAnimationFrame","animate","cancelAnimationFrame","clearPath","clearRect","type","setImage","generateElectron","getCathTubeBot","getCathTubeTop","getParticleTubeRightX","getCathTubeLeftX","clearAnimation","setIonizeFlag","setEjectFlag","particle","ionize","getCathTubeRightX","draw","delete_self","mmax_y","mmin_y","mmax_x","mmin_x","xenon0","setAnimation","xenonAnimation","startAnimation","limiti","length","i","pop","electron0","electronAnimation","value","Painter","layers","base_cathode","draw_csv_Base_Drawing","bind","getCanvasHeight","XenonGeneratorKey","ElectronGeneratorKey_Top","ElectronGeneratorKey_Bot","layer_number","getLayer","getCanvasWidth","log","clearCanvas","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","startElectronGenerator","startXenonGenerator","spawn_rate","generateXenon","setInterval","new_spawn_rate","killXenonGenerator","clearInterval","killElectronGenerator","getInsertRandomX","getInsertTopY","ELECTRON_RADIUS","getInsertBotY","stopEjecting","stopIonizing","killAllParticles","ionizeParticles","ejectParticles","LandingPage","props","createRef","ctx0","current","getContext","painter","showElement","elementId","getElementById","style","display","onClick","LearningMode_HandleClick","ref","hidden","to","path_hall_thruster","promisify","require","setTimeout","path_hall_thruster_on","HALL_THRUSTER_ON","LearningMode","handleResize","setState","canvas_height","innerHeight","canvas_width","innerWidth","scenarioRefresh","canvas0","canvas1","canvas2","canvas3","canvas4","canvas5","canvas6","canvas7","HeatInsertToggle_HandleClick","GasFeedToggle_HandleClick","KeeperElectrodeToggle_HandleClick","nextButton_plasma_HandleClick","nextButton_eject_HandleClick","hallThrusterToggle_HandleClick","nextButton_hallThrusterToShell_HandleClick","nextButton_shellToLearningModeCore_HandleClick","nextButton_end_HandleClick","state","deltastage","scene","text","clientHeight","clientWidth","thrusterButtonText","removeEventListener","killProtoParticle","onbeforeunload","time","Promise","resolve","ctx1","ctx2","ctx3","ctx4","ctx5","ctx6","ctx7","onclick","hideElement","draw_Hall_Thruster_Off","draw_Hall_Thruster_On","draw_csv_Base_Drawing_guide","draw_csv_keeper_electrode","t","contains","draw_csv_Heat_Insert","draw_csv_gas_feed","draw_csv_internal_plasma","newScene","draw_csv_internal_plasma_off_gas_guide","draw_csv_internal_plasma_off_heat_guide","draw_csv_eject_plasma","add","a","delay","nextButton","nextButton_Accessible","replace","innerText","PresMode","nextButton_HandleClick","autoToggleButton_HandleClick","autoID","isAuto","newdeltastage","newscene","visibility","SummaryPage","click","RefComponent","MyRouter","path","element","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.310dd3c5.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nclass HeaderComponent extends React.Component{\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"click\", e=>{\r\n            const isDropdownButton= e.target.matches(\"[data-dropdown-button]\")\r\n            if(!isDropdownButton && e.target.closest('[data-dropdown]'!=null))return\r\n\r\n            let currentDropdown\r\n            if(isDropdownButton){\r\n                currentDropdown= e.target.closest('[data-dropdown]')\r\n                currentDropdown.classList.toggle('active')\r\n            }\r\n\r\n            document.querySelectorAll(\"[data-dropdown].active\").forEach(dropdown=>{\r\n                if(dropdown === currentDropdown) return\r\n                dropdown.classList.remove('active')\r\n            })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"navbar w-nav\" data-animation=\"default\" data-collapse=\"medium\" data-duration=\"400\"\r\n                    data-easing=\"ease\" data-easing2=\"ease\" role=\"banner\">\r\n                <div className=\"container w-container\">\r\n                    <a href=\"/hollow-cathode-visualization/\" className=\"brand w-nav-brand\">\r\n                        <img src=\"/hollow-cathode-visualization/images/psyche.svg\" loading=\"lazy\" width=\"75\" alt=\"Psyche Mission Logo\"/>\r\n                    </a>\r\n                    <nav role=\"navigation\" className=\"nav-menu w-nav-menu\">\r\n                        <div className=\"dropdown\" data-dropdown>\r\n                            <button className=\"text-block\" data-dropdown-button>About Us</button>\r\n                            <div className=\"dropdown-list\">\r\n                                <a href=\"https://psyche.asu.edu/mission/\" className=\"dropdown-link\">Missions</a>\r\n                                <a href=\"https://psyche.asu.edu/events/\" className=\"dropdown-link\">Events</a>\r\n                                <a href=\"https://psyche.asu.edu/get-involved/capstone-projects/capstone-projects-copper-class/hollow-cathode-visualization-penn-state-behrend/\"\r\n                                   className=\"dropdown-link\">Projects</a>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"https://psyche.asu.edu/contact/\" className=\"nav-menu nav-link\">Contact</a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;","import Link from 'react-router-dom'\r\nimport React from 'react'\r\nimport './App.css'\r\n\r\nclass FooterComponent extends React.Component{\r\n    render(){\r\n        return(\r\n            <footer className=\"footer wf-section\" role=\"footer\">\r\n\r\n                <div className=\"wf-container footer-flex-container\">\r\n                    <a href=\"https://psyche.asu.edu/\" className=\"footer-logo-link\"><img src=\"/hollow-cathode-visualization/images/psyche.svg\"\r\n                                                                                        loading=\"lazy\"\r\n                                                                                        alt=\"Psyche Mission Logo\"\r\n                                                                                        className=\"footer-image\"/></a>\r\n                    <div>\r\n                        <h1 className=\"footer-heading\">Partnership</h1>\r\n                        <u1 role=\"list\" className=\"w-list-unstyled\">\r\n                            <li>\r\n                                <a href=\"https://behrend.psu.edu/\" className=\"footer-link-1\">Penn State Behrend</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://asu.edu/\" className=\"footer-link-1\">Arizona State University</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://nasa.gov/\" className=\"footer-link-1\">NASA</a>\r\n                            </li>\r\n                        </u1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"footer-heading\">About</h1>\r\n                        <u1 role=\"list\" className=\"w-list-unstyled\">\r\n                            <li>\r\n                                <a href=\"https://psyche.asu.edu/get-involved/careers-and-internships/\" className=\"footer-link-1\">Careers</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href={'/hollow-cathode-visualization/ref'} className={'footer-link-1'}>References</a>\r\n                            </li>\r\n                        </u1>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"footer-heading\">Follow Us:</h1>\r\n                        <u1 role=\"list\" className=\"w-list-unstyled\">\r\n                            <li>\r\n                                <a href=\"https://www.facebook.com/MissionToPsyche\" className=\"footer-link-1\">Facebook</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://www.instagram.com/accounts/login/?next=/missiontopsyche/\" className=\"footer-link-1\">Instagram</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://twitter.com/MissionToPsyche\" className=\"footer-link-1\">Twitter</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href={'https://www.youtube.com/channel/UC2BGcbPW8mxryXnjQcBqk6A/'} className={'footer-link-1'}>YouTube</a>\r\n                            </li>\r\n                        </u1>\r\n                    </div>\r\n                </div>\r\n                <div className={'footer-disclaimer'}>\r\n                    Disclaimer: This work was created in partial fulfillment of Penn State University\r\n                    Capstone Course SWENG 480/481 and CMPSC 484/485. The work is a result of the Psyche\r\n                    Student Collaborations component of NASA’s Psyche Mission <a href={'https://psyche.asu.edu/'} className={'footer-link-2'}>(https://psyche.asu.edu/)</a>. “Psyche: A Journey to a Metal World” [Contract\r\n                    number NNM16AA09C] is part of the NASA Discovery Program mission to\r\n                    solar system targets. Trade names and trademarks of ASU and NASA are\r\n                    used in this work for identification only. Their usage does not constitute an\r\n                    official endorsement, either expressed or implied, by Arizona State\r\n                    University or National Aeronautics and Space Administration. The content\r\n                    is solely the responsibility of the authors and does not necessarily\r\n                    represent the official views of ASU or NASA.\r\n                    </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","// // Huy's Dimensions\r\n// export const canvas_height = 600; // becoming depreciated\r\n// export const canvas_width = 940; // becoming depreciated\r\n// Jack's Dimensions\r\nexport const canvas_height = 750; // hopefully completely depreciated\r\nexport const canvas_width = 1600; // hopefully completely depreciated\r\n\r\n/**\r\n * Mapping layers via constants\r\n * These should always be used to reference layers when used as parameters to a function or when interacting with this.state.\r\n * This allows us to easily add and remove layers.\r\n */\r\nexport const base = 0;              // ctx0 // scene[base]\r\nexport const heat = 1;              // ctx1 // scene[heat]\r\nexport const gas = 2;               // ctx2 // scene[gas]\r\nexport const plasma = 3;            // ctx3 // scene[plasma]\r\nexport const keeper = 4;            // ctx4 // scene[keeper]\r\nexport const eject = 5;             // ctx5 // scene[eject]\r\nexport const hallThrusterOff = 6;   // ctx6 // scene[hallThrusterOff]\r\nexport const hallThrusterOn = 7;    // ctx7 // scene[hallThrusterOn]\r\n\r\n// Relative Dimensions //\r\n// cathode tube relative position modifiers (how we place the box on the screen relative to the canvas size\r\n// size/location of the ______ relative to the width/height of the window\r\nexport const right_of_cathode_constant = 0.53;\r\nexport const left_of_cathode_constant = 0.29;\r\nexport const top_of_cathode_constant = 0.532;\r\nexport const bottom_of_cathode_constant = 0.71;\r\nexport const particle_right_bounding_box = 1.00;\r\n//\r\n\r\n// Image Paths //\r\nexport const path_lm_csv = \"/hollow-cathode-visualization/images/cross_sectional_view_4.png\";\r\n//\r\n\r\n\r\n\r\n// Text //\r\nexport const hallThrusterPrimaryText = \"The large circular piece here is a Hall thruster, which propels the spacecraft through outer space by ionizing particles and shooting them out of the spacecraft.\"\r\n\r\nexport const hallThrusterSecondaryOnText = \"The blue plasma coming out of the Hall thruster propels the spacecraft through outer space. The Hall thruster shoots out tiny particles, called ions, out of the spacecraft at very high speeds.\\n\" +\r\n    \"\\n\" +\r\n    \"For the Hall thruster to work, it needs tiny particles called electrons. These electrons charge, or ionize, the ions so they can shoot out of the spacecraft. To generate the electrons, we need a hollow cathode. The hollow cathode is the component right above the hall thruster.\\n\" +\r\n    \"\\n\" +\r\n    \"Click on the hollow cathode above the hall thruster to learn more about it. \"\r\nexport const hallThrusterSecondaryOffText = \"The blue plasma coming out of the Hall thruster propels the spacecraft through outer space. The Hall thruster shoots out tiny particles, called ions, out of the spacecraft at very high speeds.\\n\" +\r\n    \"\\n\" +\r\n    \"For the Hall thruster to work, it needs tiny particles called electrons. These electrons charge, or ionize, the ions so they can shoot out of the spacecraft. To generate the electrons, we need a hollow cathode. The hollow cathode is the component right above the hall thruster.\\n\" +\r\n    \"\\n\" +\r\n    \"Click on the hollow cathode above the hall thruster to learn more about it. \"\r\nexport const cathodeShellPrimaryTitleText = \"This is a Hollow Cathode\"\r\nexport const cathodeShellPrimaryText = \"The hollow cathode has two jobs that both help the hall thruster work.\\n\" +\r\n    \"\\n\" +\r\n    \"The first job helps the hall thruster propel the spacecraft through outer space. To do this, the hollow cathode lets out some electrons, which are used to make the ions that the hall thruster emits.\" +\r\n    \"\\n\" +\r\n    \"The second job of the hollow cathode is to neutralize the ions that the hall thruster shoots out of the spacecraft.\\n\" +\r\n    \"\\n\" +\r\n    \"Click on the hollow cathode or press the next button below to explore how the hollow cathode performs its jobs.\"\r\n\r\nexport const cathodeCSVTitleText = \"Inside the Hollow Cathode\"\r\nexport const cathodeCSVText = \"The hollow cathode has three pieces that help it work: the heaters, the gas feed, and the keeper electrode. You can turn them on and off with the buttons at the bottom of the screen.\\n\"\r\n    +\"\\n\"+\r\n    \"Let’s try to get the hollow cathode working! \\n\"\r\n    +\"\\n\"+\r\n    \"First, let’s toggle the heaters to turn them on. \"\r\n\r\nexport const heatTitleText = \"Heating the Inserts\"\r\nexport const heatText = \"The heaters are the small white circles around the inner edges of the hollow cathode. They heat the inserts up to extremely high temperatures, which helps them produce electrons.\"\r\n\r\nexport const gasTitleText2 = \"Turning on the Gas Feed\"\r\nexport const gasText = \"The gas feed lets tiny particles called Xenon into the hollow cathode and lets them make plasma. Whenever a Xenon particle hits an electron, the Xenon gets charged, or ionized. You can see that happen when the Xenon particles turn from purple to bright blue.\\n\"\r\n    +\"\\n\"+\r\n    \"Click Next to learn what happens when Xenon from the gas feed meets electrons.\"\r\n\r\nexport const plasmaTitleText = \"Plasma Forms inside the Cathode Tube\"\r\nexport const plasmaText = \"The Xenon particles are ionized to make a steady source of plasma for the Hall thruster to work with. When this happens, more electrons are let into the hollow cathode for the Hall thruster to use. But first, all those electrons need to be pushed out of the hollow cathode so the Hall thruster can access them.\\n\"\r\n    +\"\\n\"+\r\n    \"To do this, let’s turn on the keeper electrode.\"\r\n\r\n/** START HEREEEE **/\r\n\r\nexport const keeperTitleText = \"The Keeper Electrode\"\r\nexport const keeperText = \"You’ve turned on the keeper electrode. Doing this pulls electrons out of the hollow cathode so the hall thruster can use them.  \";\r\n\r\nexport const ejectTitleText = \"Ejecting Plasma via the Keeper Electrode\"\r\nexport const ejectText = \"You’ve just ejected the plasma! \\n\" +\r\n    \"\\n\" +\r\n    \"The keeper electrode just pulled all the electrons out of the hollow cathode for the hall thruster to use, while the ionized Xenon particles stay in the hollow cathode so they can be re-used.   \";\r\n\r\nexport const recapTitleText = \"A Quick Recap\"\r\nexport const recapText = \"Congratulations, you got the hollow cathode working! Let’s talk about everything you just did. \\n\" +\r\n    \"\\n\" +\r\n    \"First, you learned that the hollow cathode is an important piece of the Psyche spacecraft, as it lets the hall thruster do its job of propelling the spacecraft through outer space. \\n\" +\r\n    \"\\n\" +\r\n    \"Then, you got the hollow cathode working. To do this, you used the heaters to heat the hollow cathode’s inserts until they generated electrons. Next, you used the gas feed to make electrons ionize the Xenon particles, forming plasma. \\n\"+\r\n    \"Lastly, you used the keeper electrode to pull all the electrons out of the hollow cathode so the hall thruster could use them. \";\r\n\r\nexport const linksTitleText = \"Learn about Psyche!\"\r\nexport const linksText = \"Sample text for the links page\";\r\nexport const link1url = \"https://psyche.asu.edu/\";\r\nexport const link2url = \"https://psyche.asu.edu/\";\r\nexport const link3url = \"https://psyche.asu.edu/\";\r\n\r\nexport const heatKeeperErrorText = \" You’ve turned on the keeper electrode too early!  \\n\" +\r\n    \"\\n\" +\r\n    \"Turning on the keeper electrode at the right time pulls enough electrons out of the hollow cathode for the hall thruster to use. Right now, there’s not very many electrons being pulled out of the hollow cathode, so the hall thruster doesn’t have enough electrons to do its job. \\n\" +\r\n    \"\\n\" +\r\n    \"Try turning off the keeper electrode and using the gas feed to produce more electrons before ejecting them. \";\r\nexport const gasKeeperErrorText = \" You’ve turned on the keeper electrode too early!  \\n\" +\r\n    \"\\n\" +\r\n    \"Turning on the keeper electrode at the right time uses ionized Xenon to help pull electrons out of the hollow cathode so the hall thruster can use them. Right now the Xenon is not ionized, so the keeper electrode cannot pull electrons out of the hollow cathode. \\n\" +\r\n    \"\\n\" +\r\n    \"Try turning off the keeper electrode and trying something else. \";\r\nexport const hallThusterOffText = \"                        The hollow cathode is a component of the Hall thruster. Its key role is to emit electronic\\n\" +\r\n    \"                        plasma to pull the positive plasma inside the cabin of the Hall thruster, known as the internal\\n\" +\r\n    \"                        plasma. Another role of the hollow cathode, which is not least significant, is to neutralize the\\n\" +\r\n    \"                        rocket. Without the hollow cathode, when Hall thruster emits plasma, the Hall thruster is\\n\" +\r\n    \"                        negatively charging the entire rocket. This phenomenon can cause spacecraft erosion and reduce\\n\" +\r\n    \"                        the thrust force.\"","\r\n\r\nimport {\r\n    right_of_cathode_constant,\r\n    left_of_cathode_constant,\r\n    bottom_of_cathode_constant,\r\n    top_of_cathode_constant,\r\n    particle_right_bounding_box\r\n} from \"./Galactic\";\r\n\r\n/// CONSTANTS ///\r\nconst path_electron = \"/hollow-cathode-visualization/images/electron.png\";\r\nconst path_xenon = \"/hollow-cathode-visualization/images/xenon.png\";\r\nconst path_ionized_xenon = \"/hollow-cathode-visualization/images/ionized_xenon.png\";\r\n\r\n// Pre-load images //\r\nconst electronImage = new Image();\r\nelectronImage.src = path_electron;\r\nconst xenonImage = new Image();\r\nxenonImage.src = path_xenon;\r\nconst ionizedXenonImage = new Image();\r\nionizedXenonImage.src = path_ionized_xenon;\r\n\r\n// Misc //\r\nconst ELECTRON_RADIUS = 6;\r\nconst XENON_RADIUS = 10;\r\nconst TIMING_INTERVAL = 3/60;\r\nconst IONIZATION_AGE_THRESHOLD = 1500; // particle.halfLife must be < IONIZATION_AGE_THRESHOLD to ionize\r\nconst DEFAULT_HALFLIFE = 2000; // how many animation frames a particle lives for\r\n\r\n\r\nconst collision_elasticity = 0.4; // 1 == fully elastic, 0 == no bounce\r\n// warning: collision_elasticity doesn't apply to diagonal (y=mx+b) collisions since we don't have a need for that atm\r\n// charges //\r\nconst keeper_electric_field_kq = -40; // the constant for k*q in the kqq/r equation (force due to an electric field) due to the keeper electrode\r\nconst thruster_electric_field_kq = -100; // the constant for k*q in the kqq/r equation (force due to an electric field) due to the hall thruster\r\nconst ELECTRON_CHARGE = -0.5;\r\nconst XENON_CHARGE = 0;\r\nconst IONIZED_CHARGE = 0.8;\r\n\r\n// possible particle types //\r\nconst TYPE_ELECTRON = 'electron';\r\nconst TYPE_XENON = 'xenon';\r\nconst TYPE_IONIZEDXENON = 'ionized xenon';\r\nconst TYPE_NONE = 'ionized xenon';\r\n\r\n// speed modifiers/ range definitions //\r\nconst particle_maxv_x = 20; // original: 30, 2nd iteration: 30\r\nconst particle_minv_x = -20; // original: -30, 2nd iteration: -0\r\nconst particle_maxv_y = 20; // original: 30, 2nd iteration: 30\r\nconst particle_minv_y = -20; // original: -30, 2nd iteration: -30\r\nconst particle_speed_modifier = 0.025; //original: 0.025\r\n//////\r\n\r\n// NON-CONSTANTS //\r\n// var xenon_particles_array = []; // array of all existing xenon particles\r\n// var electron_particles_array = []; // array of all existing electron particles\r\nvar particles_array = []; // array of all existing electron particles\r\nvar ejectFlag = false;\r\nvar ionizeFlag = false;\r\n////\r\n\r\n\r\nclass ProtoParticle {\r\n    ctx; // ctx element/layer the particle is drawn on, draw on this one\r\n    canvas; // canvas element/layer the particle is drawn on, use this to look at the properties of the canvas, don't draw on it\r\n    x; // int px, x position of center of particle\r\n    y; // int px, y position of center of particle\r\n    vx; // int px, x velocity\r\n    vy; // int px, y velocity\r\n    ax; // int px/tick^2, x acceleration\r\n    ay; // int px/tick^2, y acceleration\r\n    radius; // int px, radius of particle\r\n    color; // color string or hex string, color of particle\r\n    anime_key; // animation frame reference used to cancel this particle's animation, see this.startAnimation(), defaults to -1\r\n    animate; // animation function and logic (pathing, boundaries, physics, etc.)\r\n    interval; // essentially the rate defining how many times a second accelerations and forces are applied (delta time)\r\n    accelerating = true; // toggle application of accelerations (for testing purposes)\r\n    particle_type; // type of particle, should be either: TYPE_ELECTRON, TYPE_XENON, TYPE_IONIZEDXENON, or TYPE_NONE (constants) (see constants)\r\n    max_y; // bounding box (low barrier)\r\n    min_y; // bounding box (high barrier)\r\n    max_x; // bounding box (right barrier)\r\n    min_x; // bounding box (left barrier)\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Public\r\n     * Constructor for particle object with 7 optional parameters and 1 mandatory parameter (layer)\r\n     *\r\n     * @param layer ctx element/layer to draw the particle on\r\n     * @param x int px, initial x position of center of particle, if set to -999: defaults to a random value between 26 and 800\r\n     * @param y int px, initial y position of center of particle, if set to -999: defaults to a random value between 26 and 400\r\n     * @param vx int px/tick, initial x velocity, if set to -999: defaults to a random integer between 0 and 5\r\n     * @param vy int px/tick, initial y velocity, if set to -999: defaults to a random integer between 0 and 5\r\n     * @param ax int px/tick^2, initial x acceleration, *used to* default to a random integer between 1 and 5  (Math.floor(Math.random() * (5 - 1) + 1))\r\n     * @param ay int px/tick^2, initial y acceleration, *used to* default to a random integer between 1 and 5  (Math.floor(Math.random() * (5 - 1) + 1))\r\n     * @param particle_type type of particle, should be either: TYPE_ELECTRON, TYPE_XENON, TYPE_IONIZEDXENON, or TYPE_NONE (constants) (see constants)\r\n     * @param max_y bounding box (low barrier)\r\n     * @param min_y bounding box (high barrier)\r\n     * @param max_x bounding box (right barrier)\r\n     * @param min_x bounding box (left barrier)\r\n     */\r\n    constructor(\r\n        layer,\r\n        x,\r\n        y,\r\n        vx,\r\n        vy,\r\n        ax,\r\n        ay,\r\n        particle_type,\r\n        max_y,\r\n        min_y,\r\n        max_x,\r\n        min_x\r\n    ) {\r\n        this.id = Math.ceil(Math.random() * 100); // used to find particle in particles array\r\n        this.ctx = layer;\r\n        this.canvas = layer.canvas;\r\n        this.particle_type = particle_type;\r\n\r\n        // Classification //\r\n        // add self to particles array\r\n        if(particle_type === TYPE_ELECTRON){\r\n            this.image = electronImage;\r\n            this.charge = ELECTRON_CHARGE;\r\n            this.radius = ELECTRON_RADIUS;\r\n            // electron_particles_array.push(this);\r\n\r\n        } else if(particle_type === TYPE_XENON){\r\n            this.image = xenonImage;\r\n            this.charge = XENON_CHARGE; // neutral\r\n            this.radius = XENON_RADIUS;\r\n            // xenon_particles_array.push(this);\r\n\r\n        } else if(particle_type === TYPE_IONIZEDXENON){\r\n            this.image = xenonImage;\r\n            this.charge = IONIZED_CHARGE;\r\n            this.radius = XENON_RADIUS;\r\n            // xenon_particles_array.push(this);\r\n\r\n        } else {\r\n            this.image = TYPE_NONE;\r\n            this.charge = IONIZED_CHARGE; // positive\r\n            this.radius = 15;\r\n            console.error(\"invalid particle_type: \", this.particle_type);\r\n        }\r\n\r\n        // Location //\r\n        // x: randomize if default value\r\n        if(x === -999){\r\n            // default to a random x position between min and max\r\n            let max = layer.canvas.width;\r\n            let min = this.radius + 1;\r\n            this.x = Math.floor(Math.random() * (max - min) + min); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.x = x;\r\n        }\r\n\r\n        // y: randomize if default value\r\n        if(y === -999){\r\n            // default to a random x position between min and max\r\n            let max = layer.canvas.height;\r\n            let min = this.radius + 1;\r\n            this.y = Math.floor(Math.random() * (max - min) + min); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.y = y;\r\n        }\r\n\r\n        // x error checking\r\n        if(this.x > layer.canvas.width || this.x < 0){\r\n            console.error(\"invalid initial x coordinate of particle: \", this.x);\r\n        }\r\n        // y error checking\r\n        if(this.y > layer.canvas.height || this.y < 0){\r\n            console.error(\"invalid initial y coordinate of particle: \", this.y);\r\n        }\r\n\r\n\r\n        // Velocity //\r\n        // vx: randomize if default value\r\n        if(vx === -999){\r\n            this.vx = (Math.floor(Math.random() * (particle_maxv_x - particle_minv_x) + particle_minv_x) * particle_speed_modifier); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.vx = vx;\r\n        }\r\n\r\n        // vy: randomize if default value\r\n        if(vy === -999){\r\n            this.vy = (Math.floor(Math.random() * (particle_maxv_y - particle_minv_y) + particle_minv_y) * particle_speed_modifier); //Math.floor is 10% slower than Math.ceil (consider later)\r\n        } else {\r\n            this.vy = vy;\r\n        }\r\n\r\n        // Acceleration //\r\n        this.ax = ax;\r\n        this.ay = ay;\r\n\r\n        // this.color = color; // depreciated now that we have images from the artist\r\n        this.anime_key = -1; // key/reference to current animation frame, given by browser, defaults to -1\r\n        this.interval = TIMING_INTERVAL; // timing\r\n\r\n        // Bounding Box //\r\n        this.max_y = max_y; // operates off of distance from axis\r\n        this.min_y = min_y;\r\n        this.max_x = max_x;\r\n        this.min_x = min_x;\r\n\r\n        this.halfLife = DEFAULT_HALFLIFE;\r\n\r\n        particles_array.push(this);\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Definition of how a ProtoParticle should look\r\n     */\r\n    draw(){\r\n        // colored circle\r\n        // this.ctx.beginPath();\r\n        // this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\r\n        // this.ctx.closePath();\r\n        // this.ctx.fillStyle = this.color;\r\n        // this.ctx.fill();\r\n\r\n        // proper image\r\n        this.ctx.drawImage(this.image, this.x, this.y, this.radius * 2, this.radius * 2)\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Initialize/start this particle's rendering and animation.\r\n     */\r\n    startAnimation(){\r\n        // this.anime_key = window.requestAnimationFrame(animate);\r\n        let temp_this = this; // assign \"this\" (this particle) to a temporary variable so that it is defined when requestAnimationFrame calls it\r\n        this.anime_key = window.requestAnimationFrame(function() { temp_this.animate(temp_this) });\r\n    }\r\n\r\n    /**\r\n     * Private //:unused?\r\n     * !logic error warning! you may be thinking of clearAnimation()\r\n     * Stop this particle's rendering and animation *WITHOUT erasing the last frame of it.*\r\n     */\r\n    stopAnimation(){\r\n        window.cancelAnimationFrame(this.anime_key);\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * !logic error warning! you may be thinking of stopAnimation()\r\n     * Stop this particle's rendering and animation *AND erase the last frame of it.*\r\n     */\r\n    clearAnimation(){\r\n        window.cancelAnimationFrame(this.anime_key);\r\n        this.clearPath();\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Function for clearing the previous frame/particle before drawing the new/updated frame.\r\n     */\r\n    clearPath(){\r\n        // method 0 - clear path using grey particle, no visible edges on overlap but leaves a trail\r\n        // clear circle\r\n        // this.ctx.beginPath();\r\n        // this.ctx.arc(this.x, this.y, this.radius+1, 0, Math.PI * 2, true);\r\n        // this.ctx.closePath();\r\n        // this.ctx.fillStyle = 'grey';\r\n        // this.ctx.fill();\r\n\r\n        // method 1 - properly clear area as rectangle, visible edges on overlap\r\n        // clear circle\r\n        // this.ctx.clearRect(this.x - this.radius - 1, this.y - this.radius - 1, this.radius * 2 + 2, this.radius * 2 + 2);\r\n\r\n        // clear image\r\n        this.ctx.clearRect(this.x, this.y, this.radius * 2, this.radius * 2);\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Sets the animation function\r\n     * @param animate (function)\r\n     */\r\n    setAnimation(animate){\r\n        this.animate = animate;\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Input should be 'electron', 'xenon', 'ionized xenon', or 'none' (TYPE_ELECTRON, TYPE_XENON, TYPE_IONIZEDXENON, or TYPE_NONE\r\n     * @param type (string) string representing the particle type, is mapped to appropriate particle image\r\n     */\r\n    setImage(type){\r\n        if(type === TYPE_ELECTRON){\r\n            this.particle_type = TYPE_ELECTRON;\r\n            this.image = electronImage;\r\n        } else if(type === TYPE_XENON){\r\n            this.particle_type = TYPE_XENON;\r\n            this.image = xenonImage;\r\n        } else if(type === TYPE_IONIZEDXENON){\r\n            this.particle_type = TYPE_IONIZEDXENON;\r\n            this.image = ionizedXenonImage;\r\n        } else if(type === 'none'){\r\n            this.particle_type = 'none';\r\n            console.error('ProtoParticle:: setImage: Invalid type provided: ', type);\r\n        } else {\r\n            this.particle_type = 'none';\r\n            console.error('ProtoParticle:: setImage: Invalid type provided: ', type);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shared Utility\r\n     * getCathTube___() - unfortunately duped form painter.js\r\n     * Returns the location of the ___ of the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getCathTubeBot(){\r\n        return this.canvas.height * bottom_of_cathode_constant;\r\n    }\r\n    getCathTubeTop(){\r\n        return this.canvas.height * top_of_cathode_constant;\r\n    }\r\n    getCathTubeRightX(){\r\n        return this.canvas.width * right_of_cathode_constant;\r\n    }\r\n    getCathTubeLeftX(){\r\n        return this.canvas.width * left_of_cathode_constant;\r\n    }\r\n\r\n    /**\r\n     * Shared Utility\r\n     * getParticleTube___() - unfortunately duped form painter.js\r\n     * Returns the location of the particle boundary for the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getParticleTubeRightX(){\r\n        return this.canvas.width * particle_right_bounding_box;\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * Ionize yourself\r\n     */\r\n    ionize(){\r\n        if(this.particle_type === TYPE_XENON){\r\n            // update type\r\n            this.particle_type = TYPE_IONIZEDXENON; // todo - particle: make sure everything updates types properly like this\r\n            this.charge = IONIZED_CHARGE;\r\n            this.setImage(TYPE_IONIZEDXENON);\r\n\r\n            // spawn 2 electron\r\n            ProtoParticle.generateElectron(this.ctx, this.x, this.y, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX());\r\n            ProtoParticle.generateElectron(this.ctx, this.x, this.y, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX());\r\n        }\r\n    }\r\n\r\n    // /**\r\n    //  * Eject yourself //:unused?\r\n    //  * Switches animation and changes bounding box\r\n    //  */\r\n    // eject(){\r\n    //     // // if is xenon\r\n    //     // if(this.particle_type === TYPE_XENON || this.particle_type === TYPE_IONIZEDXENON){\r\n    //     //     this.setAnimation(ProtoParticle.xenonAnimation)\r\n    //     //     // this.max_x = this.canvas.width * 4; //todo: revist eject\r\n    //     // }\r\n    //     // // if is electron\r\n    //     // else if(this.particle_type === TYPE_ELECTRON){\r\n    //     //     this.max_x = this.canvas.width * 2; //todo: revist eject\r\n    //     // }\r\n    // }\r\n\r\n    /**\r\n     * Private\r\n     * Have a particle delete itself from existence\r\n     */\r\n    delete_self(){\r\n        this.clearAnimation()\r\n        // console.log(\"deleting self.\");//:debug\r\n        // console.log(\"array:\")\r\n        // console.log(particles_array);\r\n        // console.log(\"find:\")\r\n        // console.log(particles_array.findIndex((element) => element.id === this.id));\r\n        // console.log(\"find and delete:\")\r\n        // console.log(particles_array.indexOf(this) > -1 ? particles_array.splice(particles_array.indexOf(this), 1) : false)\r\n        // console.log(\"result:\")\r\n        // console.log(particles_array);\r\n        // console.log(\"---------\")\r\n    }\r\n\r\n    // /**\r\n    //  * Private //:unused?\r\n    //  * Ionizes the particle at xenon_particles_array[key]\r\n    //  * Essentially a wrapper for the call, this is needed since using setTimeout makes scoping issues\r\n    //  *\r\n    //  * @param index index in xenon_particles_array[]\r\n    //  */\r\n    // static draw_ionize(index){\r\n    //     try {\r\n    //         // xenon_particles_array[index].ionize();\r\n    //         particles_array[index].ionize();\r\n    //     } catch (error) {\r\n    //         // Expected error: TypeError\r\n    //         // This happens when a particle is deleted before it can ionize, this is normal (in presMode)\r\n    //     }\r\n    //\r\n    // }\r\n\r\n    // static draw_eject(index){\r\n    //     // depreciated by implementation of eject flag\r\n    //\r\n    //\r\n    //     // try {\r\n    //     //     // xenon_particles_array[index].eject();\r\n    //     //     // electron_particles_array[index].eject();\r\n    //     //     particles_array[index].eject();\r\n    //     // } catch (error) {\r\n    //     //     // Expected error: TypeError\r\n    //     //     // This happens when a particle is deleted before it can ionize, this is normal (in presMode)\r\n    //     // }\r\n    //\r\n    // }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Set ionization flag to true, causes xenon particles to ionize\r\n     */\r\n    static ionizeParticles(){\r\n        // console.log(\"xenon_particles_array.length: \", xenon_particles_array.length)\r\n        this.setIonizeFlag(true)\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Set eject flag to true, causes particles to act as if keeper electrode is enabled\r\n     */\r\n    static ejectParticles(){\r\n        this.setEjectFlag(true)\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * The official animation function for all xenon of all types\r\n     * SHOULD NOT BE CALLED BY HUMANS, use particle.startAnimation\r\n     *\r\n     * @param particle the particle to animate (passed inline, particle.animate(particle))\r\n     */\r\n    static xenonAnimation(particle){\r\n        particle.clearPath();\r\n\r\n        /// Boundary checking ///\r\n        // check if on screen\r\n        if(\r\n            particle.x > particle.canvas.width ||\r\n            particle.x < 0 ||\r\n            particle.y > particle.canvas.height ||\r\n            particle.y > particle.canvas.height\r\n        ){\r\n            particle.halfLife = 0; //will despawn at end of this animation\r\n        }\r\n        // check if in set boundaries\r\n        else if(\r\n            particle.y > particle.max_y - particle.radius * 2 ||\r\n            particle.y < particle.min_y ||\r\n            particle.x > particle.max_x - particle.radius * 2 ||\r\n            particle.x < particle.min_x\r\n        ){\r\n            particle.halfLife = 0;\r\n        }\r\n        // check if particle hit back of the tube - special condition\r\n        else if (particle.particle_type === TYPE_IONIZEDXENON && (particle.x < particle.getCathTubeLeftX() + particle.radius)){\r\n            particle.halfLife = 0; // despawn the particle\r\n        }\r\n        // end of normal boundary checking\r\n        // it is where it should be, so you can animate now\r\n        else{\r\n            // // set angled boundary box using a slope and a y-intercept\r\n            // let m = 1; // slope\r\n            // let b = 300; // y intercept\r\n\r\n\r\n\r\n            // special conditions\r\n            // should the particle be ionized?\r\n            if(ionizeFlag && particle.particle_type === TYPE_XENON && particle.halfLife < IONIZATION_AGE_THRESHOLD){\r\n                particle.ionize();\r\n            }\r\n\r\n\r\n            // check y boundary using normal bounding box (wall bounce)\r\n            if (particle.y + particle.vy > particle.max_y - particle.radius * 2 || particle.y + particle.vy < particle.min_y ) {\r\n                particle.vy = -particle.vy * collision_elasticity;\r\n            }\r\n            // check x boundary using normal bounding box (wall bounce)\r\n            else if (particle.x + particle.vx > particle.max_x - particle.radius * 2 || particle.x + particle.vx < particle.min_x) {\r\n                particle.vx = -particle.vx * collision_elasticity;\r\n            }\r\n                // // check boundary using slope intercept form (doesn't account for square objects yet) (for squares, pov = top left instead of center)\r\n                // else if((particle.y + particle.vy) >= m * (particle.x + particle.vx) + b){\r\n                //\r\n                //     // // do a proper angled bounce\r\n                //     // let swap = particle.vx;\r\n                //     // particle.vx = particle.vy;\r\n                //     // particle.vy = swap;\r\n            // }\r\n            else {\r\n                // acceleration is only applied here to prevent logic errors accelerating particles through collisions\r\n                // v_f = v_o + a*t (kinematic) (where t is the interval or intensity) (good values are like 1/60 or 5/60)\r\n\r\n                // todo particle 8: potential divide by zero error\r\n                particle.ax = keeper_electric_field_kq/particle.x * particle.charge; //keeper force (kqq/r in essence)\r\n\r\n                if(particle.x > particle.getCathTubeRightX()){\r\n                    // stop it from returning\r\n                    particle.min_x = particle.getCathTubeRightX(); // todo particle 1\r\n                    particle.max_x = particle.canvas.width;\r\n                    particle.min_y = 0;\r\n                    particle.max_y = particle.canvas.height;\r\n                } else {\r\n                    if(ejectFlag){\r\n                        // y acceleration\r\n                        particle.vy = particle.vy + (particle.ay * particle.interval);\r\n\r\n                        // x acceleration\r\n                        particle.vx = particle.vx + (particle.ax * particle.interval);\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            //move the particle at the given velocity\r\n            particle.x += particle.vx;\r\n            particle.y += particle.vy;\r\n\r\n            //draw the particle\r\n            particle.draw();\r\n\r\n            // drain halfLife\r\n            particle.halfLife = particle.halfLife - 1\r\n        }\r\n\r\n        // should the particle still exist?\r\n        if(particle.halfLife > 0){\r\n            particle.anime_key = window.requestAnimationFrame(function() {particle.animate(particle)});\r\n        } else {\r\n            particle.delete_self()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Private\r\n     * The official animation function for all electrons\r\n     * SHOULD NOT BE CALLED BY HUMANS, use particle.startAnimation\r\n     *\r\n     * @param particle the particle to animate (passed inline, particle.animate(particle))\r\n     */\r\n    static electronAnimation(particle){\r\n        particle.clearPath();\r\n\r\n        // Boundary checking //\r\n        // check if on screen\r\n        if(\r\n            particle.x > particle.canvas.width ||\r\n            particle.x < 0 ||\r\n            particle.y > particle.canvas.height ||\r\n            particle.y > particle.canvas.height\r\n        ){\r\n            particle.halfLife = 0; //will despawn at end of this animation\r\n        }\r\n        // check if in set boundaries\r\n        else if(\r\n            particle.y > particle.max_y - particle.radius * 2 ||\r\n            particle.y < particle.min_y ||\r\n            particle.x > particle.max_x - particle.radius * 2 ||\r\n            particle.x < particle.min_x\r\n        ){\r\n            particle.halfLife = 0;\r\n        }\r\n        // end of normal boundary checking\r\n        // it is where it should be, so you can animate now\r\n        else {\r\n            // // set angled boundary box using a slope and a y-intercept\r\n            // let m = 1; // slope\r\n            // let b = 300; // y intercept\r\n\r\n\r\n\r\n            // special conditions\r\n            // no special conditions for electrons\r\n\r\n            // check y boundary using normal bounding box (wall bounce)\r\n            if (particle.y + particle.vy > particle.max_y - particle.radius * 2 || particle.y + particle.vy < particle.min_y ) {\r\n                particle.vy = -particle.vy * collision_elasticity;\r\n            }\r\n            // check x boundary using normal bounding box (wall bounce)\r\n            else if (particle.x + particle.vx > particle.max_x - particle.radius * 2 || particle.x + particle.vx < particle.min_x) {\r\n                particle.vx = -particle.vx * collision_elasticity;\r\n            }\r\n                // // check boundary using slope intercept form (doesn't account for square objects yet) (for squares, pov = top left instead of center)\r\n                // else if((particle.y + particle.vy) >= m * (particle.x + particle.vx) + b){\r\n                //\r\n                //     // // do a proper angled bounce\r\n                //     // let swap = particle.vx;\r\n                //     // particle.vx = particle.vy;\r\n                //     // particle.vy = swap;\r\n            // }\r\n            else {\r\n                // acceleration is only applied here to prevent logic errors accelerating particles through collisions\r\n                // v_f = v_o + a*t (kinematic) (where t is the interval or intensity) (good values are like 1/60 or 5/60)\r\n\r\n                // todo - potential divide by zero error\r\n                particle.ax = keeper_electric_field_kq/particle.x * particle.charge; //keeper force (kqq/r in essence)\r\n\r\n                if(particle.x > particle.getCathTubeRightX() + particle.radius * 2){\r\n                    // stop it from returning\r\n                    particle.min_x = particle.getCathTubeRightX();\r\n                    particle.max_x = particle.canvas.width + particle.radius * 4;\r\n                    particle.min_y = 0;\r\n                    particle.max_y = particle.canvas.height + particle.radius * 4;\r\n\r\n                    particle.ay = thruster_electric_field_kq/particle.y * particle.charge; //keeper force (kqq/r in essence) // hall thruster E field\r\n                }\r\n\r\n                if(ejectFlag){\r\n                    // y acceleration\r\n                    particle.vy = particle.vy + (particle.ay * particle.interval);\r\n\r\n                    // x acceleration\r\n                    particle.vx = particle.vx + (particle.ax * particle.interval);\r\n                }\r\n\r\n            }\r\n\r\n            //move the particle at the given velocity\r\n            particle.x += particle.vx;\r\n            particle.y += particle.vy;\r\n\r\n            //draw the particle\r\n            particle.draw();\r\n        }\r\n\r\n\r\n        // drain halfLife\r\n        particle.halfLife = particle.halfLife - 1;\r\n\r\n        if(particle.halfLife > 0){\r\n            particle.anime_key = window.requestAnimationFrame(function() {particle.animate(particle)});\r\n        } else {\r\n            particle.delete_self()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Public Interface, used by Painter.js\r\n     * Generates a new xenon particle on a given layer at a given position\r\n     *\r\n     * @param ctx layer\r\n     * @param x initial x position\r\n     * @param y initial y position\r\n     * @param mmax_y bounding box\r\n     * @param mmin_y bounding box\r\n     * @param mmax_x bounding box\r\n     * @param mmin_x bounding box\r\n     */\r\n    static generateXenon(ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x){\r\n        // console.log(\"generating electron\");//:debug\r\n        // Drawing some particles //\r\n        let xenon0 = new ProtoParticle(ctx, x, y, -999, -999, 0, 0, TYPE_XENON, mmax_y, mmin_y, mmax_x, mmin_x); // randomized\r\n        xenon0.setAnimation(ProtoParticle.xenonAnimation);\r\n        xenon0.startAnimation();\r\n    }// todo particle 6\r\n\r\n    /**\r\n     * Public Interface, used by Painter.js\r\n     * Removes all particles from the simulation\r\n     */\r\n    static killAllParticles(){\r\n        let limiti = particles_array.length;\r\n        for (let i = 0; i < limiti; i++) {\r\n            (particles_array.pop()).clearAnimation();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Public Interface, used by Painter.js\r\n     * Generates a new electron particle on a given layer at a given position\r\n     *\r\n     * @param ctx layer\r\n     * @param x initial x position\r\n     * @param y initial y position\r\n     * @param mmax_y bounding box\r\n     * @param mmin_y bounding box\r\n     * @param mmax_x bounding box\r\n     * @param mmin_x bounding box\r\n     */\r\n    static generateElectron(ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x){\r\n        // Drawing some particles //\r\n        let electron0 = new ProtoParticle(ctx, x, y, -999, -999, 0, 0, TYPE_ELECTRON, mmax_y, mmin_y, mmax_x, mmin_x); // randomized\r\n        electron0.setAnimation(ProtoParticle.electronAnimation);\r\n        electron0.startAnimation();\r\n    }\r\n\r\n    // static killAllElectron(){\r\n    //     // let limiti = electron_particles_array.length;\r\n    //     // for (let i = 0; i < limiti; i++) {\r\n    //     //     (electron_particles_array.pop()).clearAnimation();\r\n    //     // }\r\n    //\r\n    //     // let limiti = particles_array.length;\r\n    //     // for (let i = 0; i < limiti; i++) {\r\n    //     //     (particles_array.pop()).clearAnimation();\r\n    //     // }\r\n    // }\r\n\r\n    // todo particle 3\r\n    //:unused?, not planned to be implemented?\r\n    static setElectronBoundingBox(mmax_y, mmin_y, mmax_x, mmin_x){\r\n        // needs implemented with particles_array now that I am thinking about removing electron_particles_array\r\n        // // for each particle in electron array, update these parameters\r\n        // for (const index in electron_particles_array) {\r\n        //     let particle = electron_particles_array[index]\r\n        //     particle.max_y = mmax_y;\r\n        //     particle.min_y = mmin_y;\r\n        //     particle.max_x = mmax_x;\r\n        //     particle.min_x = mmin_x;\r\n        // }\r\n    }\r\n\r\n    //:unused?, not planned to be implemented?\r\n    static setXenonBoundingBox(mmax_y, mmin_y, mmax_x, mmin_x){\r\n        // needs implemented\r\n        // for each xenon particle in particle array, update these parameters\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Setter for eject flag boolean\r\n     *\r\n     * @param value (bool) new value\r\n     */\r\n    static setEjectFlag(value){\r\n        ejectFlag = value;\r\n    }\r\n\r\n    /**\r\n     * Public Interface\r\n     * Setter for ionize flag boolean\r\n     *\r\n     * @param value (bool) new value\r\n     */\r\n    static setIonizeFlag(value){\r\n        ionizeFlag = value;\r\n    }\r\n}\r\n\r\n\r\nexport default ProtoParticle;\r\n","import ProtoParticle from \"./ProtoParticle\";\r\n\r\n/**\r\n * Mapping layers via constants\r\n * These should always be used to reference layers when used as parameters to a function or when interacting with this.state.\r\n * This allows us to easily add and remove layers.\r\n */\r\nimport {\r\n    base,\r\n    canvas_height,\r\n    canvas_width,\r\n    eject,\r\n    gas,\r\n    hallThrusterOff,\r\n    hallThrusterOn,\r\n    heat,\r\n    keeper,\r\n    plasma,\r\n    right_of_cathode_constant,\r\n    left_of_cathode_constant,\r\n    top_of_cathode_constant,\r\n    bottom_of_cathode_constant,\r\n    particle_right_bounding_box, lm_csv, path_lm_csv\r\n} from \"./Galactic\";\r\n\r\n\r\n/// \"CONSTANTS\" ///\r\nconst ELECTRON_SPAWN_RATE = 5; // 2 particle(s) every [ELECTRON_SPAWN_RATE] seconds\r\nconst XENON_SPAWN_RATE = 3; // 1 particle(s) every [XENON_SPAWN_RATE] seconds\r\nconst ELECTRON_RADIUS = 6;\r\nconst XENON_RADIUS = 10;\r\n///\r\n\r\nclass Painter{\r\n    constructor(layers) {\r\n        this.layers = layers;\r\n\r\n        // pre-load images\r\n        this.base_cathode = new Image();\r\n        this.base_cathode.src = path_lm_csv;\r\n\r\n        this.draw_csv_Base_Drawing = this.draw_csv_Base_Drawing.bind(this);\r\n\r\n        this.getCanvasHeight = this.getCanvasHeight.bind(this);\r\n        this.getCanvasHeight = this.getCanvasHeight.bind(this);\r\n\r\n        // mounding box for cathode tube\r\n        // (measures are *from* the axis)\r\n        this.min_y = this.getCathTubeTop();\r\n        this.max_y = this.getCathTubeBot();\r\n        this.min_x = this.getCathTubeLeftX();\r\n        this.max_x = this.getCathTubeRightX();\r\n\r\n        this.XenonGeneratorKey = -1;\r\n        this.ElectronGeneratorKey_Top = -1; // top of insert\r\n        this.ElectronGeneratorKey_Bot = -1; // bottom of insert\r\n    }\r\n\r\n    /**\r\n     * Retrieves a layer by index (constant number)\r\n     * @param layer_number the number for the layer needed\r\n     * @returns {*} ctx reference/object for the layer\r\n     */\r\n    getLayer(layer_number){\r\n        return this.layers[layer_number];\r\n    }\r\n\r\n    getCanvasHeight(){\r\n        return this.getLayer(base).canvas.height;\r\n    }\r\n    getCanvasWidth(){\r\n        return this.getLayer(base).canvas.width;\r\n    }\r\n\r\n    /**\r\n     * clearCanvas(layer number)\r\n     * Clears contents of a given canvas layer\r\n     *\r\n     * @param layer_number layer number for layer to clear\r\n     */\r\n    clearCanvas(layer_number){\r\n        this.getLayer(layer_number).clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight());\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * getInsert___()\r\n     * Returns the location of the ___ of the insert on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon spawn positions\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getInsertTopX(){\r\n        return (this.getCathTubeLeftX() + this.getCathTubeRightX())/2; // in short: ( tube_left + tube_right ) / 2\r\n    }\r\n    getInsertTopY(){\r\n        console.log(\"top: \", this.getCanvasHeight() * top_of_cathode_constant)\r\n        return this.getCanvasHeight() * top_of_cathode_constant;\r\n    }\r\n    getInsertBotY(){\r\n        console.log(\"bot: \", this.getCanvasHeight() * bottom_of_cathode_constant)\r\n        return this.getCanvasHeight() * bottom_of_cathode_constant;\r\n    }\r\n\r\n    /**\r\n     * getCathTube___()\r\n     * Returns the location of the ___ of the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getCathTubeBot(){\r\n        return this.getCanvasHeight() * bottom_of_cathode_constant;\r\n    }\r\n    getCathTubeTop(){\r\n        return this.getCanvasHeight() * top_of_cathode_constant;\r\n    }\r\n    getCathTubeRightX(){\r\n        return this.getCanvasWidth() * right_of_cathode_constant;\r\n    }\r\n    getCathTubeLeftX(){\r\n        return this.getCanvasWidth() * left_of_cathode_constant;\r\n    }\r\n\r\n    /**\r\n     * Returns a random X coordinate that exists on the inserts\r\n     * @returns {number} number between this.getCathTubeLeftX() + ELECTRON_RADIUS and this.getCathTubeRightX() - ELECTRON_RADIUS\r\n     */\r\n    getInsertRandomX(){\r\n        let min = Math.ceil(this.getCathTubeLeftX()) + ELECTRON_RADIUS;\r\n        return Math.floor(Math.random() * (Math.floor(this.getCathTubeRightX()) - ELECTRON_RADIUS - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n    }\r\n\r\n    /**\r\n     * getParticleTube___()\r\n     * Returns the location of the particle boundary for the cathode tube on the _ axis, don't forget to account for particle width\r\n     * Used for the electron and xenon boundary box positions* (talk to Jack he isn't done here - 3/31/22)\r\n     *\r\n     * @returns {number} (int) single coordinate\r\n     */\r\n    getParticleTubeRightX(){\r\n        return this.getCanvasWidth() * particle_right_bounding_box;\r\n    }\r\n\r\n\r\n\r\n    /** Learning Mode */\r\n    /**\r\n     * Particle effect overlay to make the thruster and cathode appear to be on/operating //:unused?\r\n     */\r\n    draw_Hall_Thruster_Off(){\r\n        this.clearCanvas(hallThrusterOff);\r\n        const ctx = this.getLayer(hallThrusterOff);\r\n    }\r\n\r\n    /**\r\n     * Particle effect overlay to make the thruster and cathode appear to be on/operating //:unused?\r\n     */\r\n    draw_Hall_Thruster_On(){\r\n        this.clearCanvas(hallThrusterOn);\r\n        const ctx = this.getLayer(hallThrusterOn);\r\n    }\r\n\r\n    /** Learning Mode and Presentation Mode **/\r\n    /**\r\n     * draw_csv_Base_Drawing()\r\n     * Function to draw the base cathode visuals\r\n     */\r\n    draw_csv_Base_Drawing(){\r\n        // console.log(base ,\" draw_csv_Base_Drawing called\") //:debug\r\n        // console.log('base cathode info: '+this.base_cathode.complete+' '+this.base_cathode.naturalHeight); //:debug\r\n        this.clearCanvas(base);\r\n        const ctx = this.getLayer(base);\r\n        ctx.drawImage(this.base_cathode, this.getCanvasWidth() * -.45, this.getCanvasHeight() * -.35, this.getCanvasWidth() * 1.19, this.getCanvasHeight() * 2.25); // draw the cathode\r\n\r\n\r\n        // visualize cathode tube bounding box //:debug\r\n        ctx.strokeStyle = 'rgba(255,255,255,0.6)'; //:debug\r\n        ctx.lineWidth = 6; //:debug\r\n\r\n        // right //:debug\r\n        ctx.beginPath(); //:debug\r\n        ctx.moveTo(this.min_x, this.min_y); //:debug\r\n        ctx.lineTo(this.min_x, this.max_y); //:debug\r\n        ctx.stroke(); //:debug\r\n\r\n        ctx.strokeStyle = 'rgba(201,69,69,0.6)'; //:debug\r\n\r\n        // left //:debug\r\n        ctx.beginPath(); //:debug\r\n        ctx.moveTo(this.max_x, this.max_y); //:debug\r\n        ctx.lineTo(this.max_x, this.min_y); //:debug\r\n        ctx.stroke(); //:debug\r\n\r\n        ctx.strokeStyle = 'rgba(210,184,30,0.6)'; //:debug\r\n\r\n        // top //:debug\r\n        ctx.beginPath(); //:debug\r\n        ctx.moveTo(this.max_x, this.min_y); //:debug\r\n        ctx.lineTo(this.min_x, this.min_y); //:debug\r\n        ctx.stroke(); //:debug\r\n\r\n        ctx.strokeStyle = 'rgba(128,0,0,0.6)'; //:debug\r\n\r\n        // bottom //:debug\r\n        ctx.beginPath(); //:debug\r\n        ctx.moveTo(this.min_x, this.max_y); //:debug\r\n        ctx.lineTo(this.max_x, this.max_y); //:debug\r\n        ctx.stroke(); //:debug\r\n    }\r\n\r\n    /**\r\n     * draw_csv_Base_Drawing_guide()\r\n     * Draws the guide text and tooltips and such for the base drawing for learning mode\r\n     */\r\n    draw_csv_Base_Drawing_guide(){\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * draw_csv_Heat_Insert()\r\n     * Defines what drawing \"heat insert\" looks like\r\n     * Function to draw the heat insert visuals (currently only draws an orange square)\r\n     */\r\n    draw_csv_Heat_Insert(){\r\n        this.clearCanvas(heat);\r\n        const ctx = this.getLayer(heat);\r\n\r\n        // Turn on Electron Generator\r\n        this.startElectronGenerator(ELECTRON_SPAWN_RATE);\r\n    }\r\n\r\n    /**\r\n     * draw_csv_Heat_Insert_guide()\r\n     * Draws the guide text and tooltips and such for draw_csv_Heat_Insert for learning mode\r\n     */\r\n    draw_csv_Heat_Insert_guide(){\r\n    }\r\n\r\n    /**\r\n     * draw_csv_gas_feed()\r\n     * Function to draw the gas feed visuals (currently only draws a yellow square)\r\n     */\r\n    draw_csv_gas_feed(){\r\n        const ctx = this.getLayer(gas);\r\n\r\n\r\n        // Turn on Xenon Generator\r\n        this.startXenonGenerator(XENON_SPAWN_RATE);\r\n    }\r\n\r\n\r\n    /**\r\n     * Spawns xenon particles every [spawn_rate] seconds, simulates the gas feed.\r\n     * @author Jack\r\n     *\r\n     * @param spawn_rate time in SECONDS between each particle spawn.\r\n     */\r\n    startXenonGenerator(spawn_rate){\r\n        const ctx = this.getLayer(gas);\r\n\r\n        if(this.XenonGeneratorKey === -1){\r\n            // (ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x)\r\n            // generate a initial one to get it going right away\r\n            ProtoParticle.generateXenon(ctx, this.min_x + 20, (this.min_y + this.max_y) / 2, this.max_y, this.min_y, this.max_x, this.min_x - XENON_RADIUS); // generate an initial one to get it going right away\r\n            // generate on a timer\r\n            this.XenonGeneratorKey = setInterval(ProtoParticle.generateXenon, spawn_rate * 1000, ctx, this.min_x + 20, (this.min_y + this.max_y) / 2, this.max_y, this.min_y, this.max_x, this.min_x - XENON_RADIUS); // generate on a timer\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Restarts the xenon generator with the desired spawn rate, likely to slow it down\r\n     *\r\n     * @param new_spawn_rate time in seconds between each particle spawn\r\n     */\r\n    slowXenonGenerator(new_spawn_rate){\r\n        this.killXenonGenerator();\r\n        this.startXenonGenerator(new_spawn_rate);\r\n    }\r\n\r\n    /**\r\n     * Stops the generation of xenon immediately\r\n     */\r\n    killXenonGenerator(){\r\n        clearInterval(this.XenonGeneratorKey); // kill interval\r\n        this.XenonGeneratorKey = -1; // reset key\r\n        this.killElectronGenerator();\r\n    }\r\n\r\n    /**\r\n     * Spawns xenon particles every [spawn_rate] seconds, simulates heated cathode inserts.\r\n     * @author Jack\r\n     *\r\n     * @param spawn_rate time in SECONDS between each particle spawn.\r\n     */\r\n    startElectronGenerator(spawn_rate){\r\n        const ctx = this.getLayer(heat);\r\n\r\n        // 2 electrons per spawn_rate seconds + 2 initial ones\r\n        if(this.ElectronGeneratorKey_Top === -1){\r\n            // (ctx, x, y, mmax_y, mmin_y, mmax_x, mmin_x)\r\n            // generate two initial ones to get it going right away\r\n            ProtoParticle.generateElectron(ctx, this.getInsertRandomX(), this.getInsertTopY() + ELECTRON_RADIUS * 2, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"top insert\"\r\n            ProtoParticle.generateElectron(ctx, this.getInsertRandomX(), this.getInsertBotY() - ELECTRON_RADIUS * 2, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"bottom insert\"\r\n            // generate on a timer\r\n            this.ElectronGeneratorKey_Top = setInterval(ProtoParticle.generateElectron, spawn_rate * 1000, ctx, this.getInsertRandomX(), this.getInsertTopY() + ELECTRON_RADIUS * 2, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"top insert\"\r\n            this.ElectronGeneratorKey_Bot = setInterval(ProtoParticle.generateElectron, spawn_rate * 1000, ctx, this.getInsertRandomX(), this.getInsertBotY() - ELECTRON_RADIUS * 2, this.getCathTubeBot(), this.getCathTubeTop(), this.getParticleTubeRightX(), this.getCathTubeLeftX()); // \"bottom insert\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * Restarts the electron generator with the desired spawn rate, likely to slow it down\r\n     *\r\n     * @param new_spawn_rate time in seconds between each particle spawn\r\n     */\r\n    slowElectronGenerator(new_spawn_rate){\r\n        this.killElectronGenerator();\r\n        this.startElectronGenerator(new_spawn_rate);\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * Stops the generation of electrons immediately\r\n     */\r\n    killElectronGenerator(){\r\n        clearInterval(this.ElectronGeneratorKey_Top); // kill interval\r\n        clearInterval(this.ElectronGeneratorKey_Bot); // kill interval\r\n        this.ElectronGeneratorKey_Top = -1; // reset key\r\n        this.ElectronGeneratorKey_Bot = -1; // reset key\r\n    }\r\n\r\n\r\n    /**\r\n     * Public\r\n     * Set the eject flag to false\r\n     */\r\n    stopEjecting(){\r\n        ProtoParticle.setEjectFlag(false);\r\n    }\r\n\r\n    /**\r\n     * Public\r\n     * Set the ionize flag to false\r\n     */\r\n    stopIonizing(){\r\n        ProtoParticle.setIonizeFlag(false);\r\n    }\r\n\r\n    /**\r\n     * Stops, clears, and resets all generators, particles, and flags.\r\n     */\r\n    killProtoParticle(){\r\n        this.killElectronGenerator();\r\n        this.killXenonGenerator();\r\n        this.stopEjecting();\r\n        this.stopIonizing();\r\n        ProtoParticle.killAllParticles();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * draw_csv_gas_feed_guide() //:unused?\r\n     * Draws the guide text and tooltips and such for draw_csv_gas_feed for learning mode\r\n     */\r\n    draw_csv_gas_feed_guide(){\r\n         this.clearCanvas(gas);\r\n         const ctx = this.getLayer(gas);\r\n    }\r\n\r\n    /**\r\n     * draw_csv_internal_plasma()\r\n     * Function to draw the internal plasma visuals (currently only draws a green square)\r\n     */\r\n    draw_csv_internal_plasma(){\r\n        this.clearCanvas(plasma);\r\n        const ctx = this.getLayer(plasma);\r\n\r\n        ProtoParticle.ionizeParticles();\r\n    }\r\n\r\n    /**\r\n     * draw_csv_internal_plasma_guide() //:unused?\r\n     * Draws the guide text and tooltips and such for draw_csv_internal_plasma for learning mode\r\n     */\r\n    draw_csv_internal_plasma_guide() {\r\n    }\r\n\r\n    /**\r\n     * draw_csv_internal_plasma_off_heat_guide() //:unused?\r\n     * Draws the guide text for when the user has caused the internal plasma to disappear due to turning off \"heat inserts\"\r\n     */\r\n    draw_csv_internal_plasma_on_heat_guide() {\r\n        // console.log(plasma, \" draw_csv_internal_plasma_off_heat_guide called\"); //:debug\r\n    }\r\n\r\n    /**\r\n     * draw_csv_internal_plasma_off_heat_guide() //:unused?\r\n     * Draws the guide text for when the user has caused the internal plasma to disappear due to turning off \"heat inserts\"\r\n     */\r\n    draw_csv_internal_plasma_on_heat_guide() {\r\n        // console.log(plasma, \" draw_csv_internal_plasma_off_heat_guide called\"); //:debug\r\n    }\r\n\r\n    /**\r\n     * draw_csv_internal_plasma_off_heat_guide() //:unused?\r\n     * Draws the guide text for when the user has caused the internal plasma to disappear due to turning off \"heat inserts\"\r\n     */\r\n    draw_csv_internal_plasma_off_heat_guide() {\r\n        // console.log(plasma, \" draw_csv_internal_plasma_off_heat_guide called\"); //:debug\r\n    }\r\n\r\n    /**\r\n     * draw_csv_internal_plasma_off_gas_guide() //:unused?\r\n     * Draws the guide text for when the user has caused the internal plasma to disappear due to turning off \"gas feed\"\r\n     */\r\n    draw_csv_internal_plasma_off_gas_guide() {\r\n        // console.log(plasma, \" draw_csv_internal_plasma_off_gas_guide called\"); //:debug\r\n    }\r\n\r\n\r\n    /**\r\n     * draw_csv_keeper_electrode() //:unused?\r\n     * Function to draw the keeper electrode visuals (currently only draws a blue square)\r\n     */\r\n    draw_csv_keeper_electrode(){\r\n        // console.log(keeper, \" draw_csv_keeper_electrode called\"); //:debug\r\n\r\n        this.clearCanvas(keeper);\r\n        const ctx = this.getLayer(keeper);\r\n    }\r\n\r\n    /**\r\n     * draw_csv_keeper_electrode_guide() //:unused?\r\n     * Draws the guide text and tooltips and such for the draw_csv_keeper_electrode for learning mode\r\n     */\r\n    draw_csv_keeper_electrode_guide(){\r\n        // console.log(keeper, \" draw_csv_keeper_electrode_guide called\"); //:debug\r\n\r\n        // this.clearCanvas(keeper);\r\n        // const ctx = this.getLayer(keeper);\r\n    }\r\n\r\n\r\n    /**\r\n     * draw_csv_eject_plasma()\r\n     * Function to draw the eject plasma visuals (currently only draws a violet [purple] square)\r\n     */\r\n    draw_csv_eject_plasma(){\r\n        // console.log(eject, \" draw_csv_eject_plasma called\"); //:debug\r\n\r\n        this.clearCanvas(eject);\r\n        const ctx = this.getLayer(eject);\r\n\r\n        ProtoParticle.ejectParticles();\r\n    }\r\n\r\n    /**\r\n     * draw_csv_eject_plasma_guide() //:unused?\r\n     * Draws the guide text and tooltips and such for the draw_csv_eject_plasma for learning mode\r\n     */\r\n    draw_csv_eject_plasma_guide() {\r\n        // console.log(eject, \" draw_csv_eject_plasma_guide called\"); //:debug\r\n\r\n        // this.clearCanvas(eject);\r\n        // const ctx = this.getLayer(eject);\r\n    }\r\n}\r\n\r\nexport default Painter;","import React from \"react\";\r\nimport Painter from \"./Painter\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/// CONSTANTS ///\r\nconst path_spacecraft = \"/hollow-cathode-visualization/images/spacecraft2.png\";\r\n///\r\n\r\n/**\r\n * Site landing page element\r\n * Should be rendered inside a <div id={\"canvasHolder\"}>\r\n */\r\nexport class LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        // create a reference to the canvas element\r\n        this.canvas = React.createRef();\r\n    }\r\n\r\n    /**\r\n     * componentDidMount()\r\n     * Called when canvas element is mounted on page (canvas element is unusable up until this point)\r\n     */\r\n    componentDidMount() {\r\n        // initialize instance variables for each canvas element/layer\r\n        const ctx0 = this.canvas.current.getContext('2d'); // base = 0;\r\n\r\n        this.layers = [ctx0];\r\n        this.painter = new Painter(this.layers);\r\n\r\n        this.showElement(\"landingPageTitleDiv\")\r\n        this.showElement(\"landingPageSubTitleDiv\")\r\n        this.showElement(\"landingPageLModePromptDiv\")\r\n    }\r\n\r\n    /**\r\n     * getLayer(layer)\r\n     * @param layer layer number which you want to get\r\n     * @returns ctx 2d canvas context for that layer\r\n     */\r\n    getLayer(layer){\r\n        return this.layers[layer];\r\n    }\r\n\r\n    /**\r\n     * Hides the element with the given id\r\n     * @param elementId id of element to hide\r\n     */\r\n    hideElement(elementId){\r\n        document.getElementById(elementId).style.display = 'none';\r\n    }\r\n    /**\r\n     * Un-hides the element with the given id\r\n     * @param elementId id of element to show\r\n     */\r\n    showElement(elementId){\r\n        document.getElementById(elementId).style.display = 'flex';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={'canvasHolder'}>\r\n                <div>\r\n                    <canvas id={\"canvas\"}\r\n                            onClick={this.LearningMode_HandleClick}\r\n                            ref={this.canvas}\r\n                            className={\"unselectable\"}\r\n                            hidden={true}> You need a better browser :(\r\n                    </canvas>\r\n\r\n                    <Link to={'/hollow-cathode-visualization/learning'}>\r\n                        <img id={'spaceshipImage'} src={path_spacecraft} className={\"grow\"} alt={\"Psyche 16 spacecraft\"}/>\r\n                    </Link>\r\n\r\n                    <div className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                        <Link to={'/hollow-cathode-visualization/learning'}>\r\n                            <button id={\"LearnModeButton\"} className={\"button\"}>\r\n                                Learning Mode\r\n                            </button>\r\n                        </Link>\r\n                        <Link to={'/hollow-cathode-visualization/presentation'}>\r\n                            <button id={\"PresModeButton\"} className={\"button\"}>\r\n                                Presentation Mode\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div id={\"landingPageTitleDiv\"} className={\"stackedButtonGroup landingPageTitleAlign\"} >\r\n                        <label id={\"landingPageTitle\"} className={\"landingPageTitleLabel\"}> Hollow Cathode </label>\r\n                    </div>\r\n\r\n                    <div id={\"landingPageSubTitleDiv\"} className={\"stackedButtonGroup landingPageSubTitleAlign\"} >\r\n                        <label id={\"landingPageSubTitle\"} className={\"landingPageSubTitleLabel\"}> Visualization </label>\r\n                    </div>\r\n\r\n                    <div id={\"landingPageLModePromptDiv\"} className={\"stackedButtonGroup landingPageLModePromptAlign\"} >\r\n                        <label id={\"landingPageLModePrompt\"} className={\"landingPageLModePromptLabel\"}> click the spacecraft to begin </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from \"react\";\r\nimport Painter from \"./Painter\";\r\n\r\nimport {\r\n    base,\r\n    eject,\r\n    gas,\r\n    hallThrusterOff,\r\n    hallThrusterOn,\r\n    heat,\r\n    keeper,\r\n    plasma,\r\n    hallThrusterPrimaryText,\r\n    hallThrusterSecondaryOnText,\r\n    hallThrusterSecondaryOffText,\r\n    cathodeShellPrimaryTitleText,\r\n    cathodeShellPrimaryText,\r\n    heatTitleText,\r\n    heatText,\r\n    gasTitleText2,\r\n    gasText,\r\n    plasmaTitleText,\r\n    plasmaText,\r\n    keeperTitleText,\r\n    keeperText,\r\n    ejectTitleText,\r\n    ejectText,\r\n    heatKeeperErrorTitleText,\r\n    heatKeeperErrorText,\r\n    gasKeeperTitleText,\r\n    gasKeeperErrorText,\r\n    cathodeCSVTitleText,\r\n    cathodeCSVText,\r\n    references,\r\n    path_lm_csv, recapText\r\n} from \"./Galactic\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/// CONSTANTS ///\r\n// Testing?/unknown //\r\nconst {promisify} = require('util')\r\nconst sleep = promisify(setTimeout)\r\n\r\n// Image Paths //\r\nconst path_hall_thruster = \"/hollow-cathode-visualization/images/big_hall_thruster_off.png\";\r\nconst path_hall_thruster_on = \"/hollow-cathode-visualization/images/big_hall_thruster_on.png\";\r\n// path_lm_csv is in galactic constants since it is also used in Painter.js\r\n//\r\n\r\n/**\r\n * Learning mode element\r\n * Should be rendered inside a <div id={\"canvasHolder\"}>\r\n * also with props: id={\"LearningMode\"} deltastage={base} scene={[true,false,false,false,false,false,false,false]}\r\n */\r\n\r\n/// Flags ///\r\nvar HALL_THRUSTER_ON = false;\r\nvar didRotate = false; //:unused?\r\n///\r\n\r\nexport class LearningMode extends React.Component {\r\n\r\n    // Instance variables:\r\n    // (all essentially cosmetic) (created in constructor)\r\n    deltastage;\r\n    scene;\r\n    canvas;\r\n    layers; // layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5, thruster off = 6, thruster on = 7]; //layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5, ctx6, ctx7];\r\n    painter;\r\n    thrusterButtonText; // if the thruster is on, this text says \"off\", and vice versa\r\n\r\n    constructor(props){\r\n        super();\r\n\r\n        // initialize canvas instance variables\r\n\r\n        //Hollow Cathode Canvases:\r\n        this.canvas0 = React.createRef();   //// 1 - create ref\r\n        this.canvas1 = React.createRef();\r\n        this.canvas2 = React.createRef();\r\n        this.canvas3 = React.createRef();\r\n        this.canvas4 = React.createRef();\r\n        this.canvas5 = React.createRef();\r\n\r\n        //Hall Thruster Canvases:\r\n        this.canvas6 = React.createRef();   //Hall Thruster OFF\r\n        this.canvas7 = React.createRef();   //Hall Thruster ON\r\n\r\n        // bind handler function(s)\r\n        this.HeatInsertToggle_HandleClick = this.HeatInsertToggle_HandleClick.bind(this);\r\n        this.GasFeedToggle_HandleClick = this.GasFeedToggle_HandleClick.bind(this);\r\n        this.KeeperElectrodeToggle_HandleClick = this.KeeperElectrodeToggle_HandleClick.bind(this);\r\n        this.nextButton_plasma_HandleClick = this.nextButton_plasma_HandleClick.bind(this);\r\n        this.nextButton_eject_HandleClick = this.nextButton_eject_HandleClick.bind(this);\r\n        this.hallThrusterToggle_HandleClick = this.hallThrusterToggle_HandleClick.bind(this);\r\n        this.nextButton_hallThrusterToShell_HandleClick = this.nextButton_hallThrusterToShell_HandleClick.bind(this);\r\n        this.nextButton_shellToLearningModeCore_HandleClick = this.nextButton_shellToLearningModeCore_HandleClick.bind(this);\r\n        this.nextButton_end_HandleClick = this.nextButton_end_HandleClick.bind(this);\r\n\r\n        // initialize state\r\n        this.state = { deltastage: props.deltastage, scene: props.scene, text:props.text};\r\n\r\n        this.state.canvas_height = document.getElementById(\"page-container\").clientHeight;\r\n        this.state.canvas_width = document.getElementById(\"page-container\").clientWidth;\r\n\r\n        // Hall Thruster toggle button text\r\n        if(this.state.scene[hallThrusterOn] === true) {\r\n            this.thrusterButtonText = \"Off\";\r\n        }\r\n        else {\r\n            this.thrusterButtonText = \"On\";\r\n        }\r\n\r\n\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n        this.painter.killProtoParticle();\r\n\r\n        // prompt user with warning on attempted page refresh - unbind\r\n        window.onbeforeunload = function() {};\r\n    }\r\n\r\n    handleResize = () => this.setState({\r\n        canvas_height: window.innerHeight * 0.8,\r\n        canvas_width: window.innerWidth\r\n    }, this.scenarioRefresh);\r\n\r\n\r\n    /**\r\n     * Hides the element with the given id\r\n     * @param elementId id of element to hide\r\n     */\r\n    hideElement(elementId){\r\n        console.log(elementId)\r\n        document.getElementById(elementId).style.display = 'none';\r\n    }\r\n    /**\r\n     * Shows the element with the given id\r\n     * @param elementId id of element to show\r\n     */\r\n    showElement(elementId){\r\n        console.log(elementId)\r\n        document.getElementById(elementId).style.display = 'flex';\r\n    }\r\n\r\n    isElementShown(elementId){\r\n        if(document.getElementById(elementId).style.display === 'flex') {\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    delay(time) {\r\n        return new Promise(resolve => setTimeout(resolve, time));\r\n    }\r\n\r\n\r\n    /**\r\n     * componentDidMount()\r\n     * Called when canvas element is mounted on page (canvas element is unusable up until this point)\r\n     */\r\n    componentDidMount() {\r\n        // an attempted fix for reloading breaking pages\r\n        // this.setState({\r\n        //     canvas_height: document.getElementById(\"page-container\").clientHeight,\r\n        //     canvas_width: document.getElementById(\"page-container\").clientWidth\r\n        // })\r\n\r\n        // initialize instance variables for each canvas element/layer\r\n        const ctx0 = this.canvas0.current.getContext('2d'); // base = 0;\r\n        const ctx1 = this.canvas1.current.getContext('2d'); // heat = 1;\r\n        const ctx2 = this.canvas2.current.getContext('2d'); // gas = 2;\r\n        const ctx3 = this.canvas3.current.getContext('2d'); // plasma = 3;\r\n        const ctx4 = this.canvas4.current.getContext('2d'); // keeper = 4;\r\n        const ctx5 = this.canvas5.current.getContext('2d'); // eject = 5;\r\n        const ctx6 = this.canvas6.current.getContext('2d'); // Hall Thruster OFF = 6;\r\n        const ctx7 = this.canvas7.current.getContext('2d'); // Hall Thruster ON = 7;\r\n\r\n        document.getElementById(\"HallThrusterNext\").onclick = this.nextButton_hallThrusterToShell_HandleClick\r\n        document.getElementById(\"HallThrusterNext_Accessible\").onclick = this.nextButton_hallThrusterToShell_HandleClick\r\n\r\n        this.layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5, ctx6, ctx7];\r\n        //      layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5, thruster off = 6, thruster on = 7];\r\n        this.painter = new Painter(this.layers);\r\n        this.scenarioRefresh();\r\n\r\n    }\r\n\r\n    /**\r\n     * scenarioRefresh()\r\n     *\r\n     * Populates the canvas based on the current state, is hopefully called whenever a change is made (ex: the onClick functions)\r\n     * You can see the end of this function as the end of the current update/iteration.\r\n     */\r\n    scenarioRefresh() {\r\n        // Execute logic based on deltastage and scene\r\n        // console.log('scenarioRefresh active: '+this.scene);//:debug\r\n        this.setState({text: \" \"})\r\n        if(this.state.scene[hallThrusterOff] === true) {\r\n            this.hideElement(\"hallThrusterOn-fadeIn\")\r\n            this.hideElement(\"hallThrusterOn-fadeOut\")\r\n\r\n            this.hideElement(\"toggleButtonGroup\");\r\n            this.hideElement(\"summaryButton_\")\r\n\r\n            this.painter.draw_Hall_Thruster_Off();\r\n\r\n            this.showElement(\"hallThrusterOffLabelDiv\");\r\n            this.showElement(\"hallThrusterOffSublabelDiv\");\r\n\r\n            this.hideElement(\"hallThrusterOnLabelDiv\");\r\n            this.hideElement(\"hallThrusterOnSublabelDiv\");\r\n\r\n            this.hideElement(\"shellToCrossZoom\");\r\n            this.hideElement(\"shellFadeOut\");\r\n        }\r\n        else\r\n        {\r\n            this.hideElement(\"hallThrusterButtonGroup\");\r\n            this.hideElement(\"hallThrusterOffLabelDiv\");\r\n            this.hideElement(\"hallThrusterOnLabelDiv\");\r\n            this.hideElement(\"hallThrusterOffSublabelDiv\");\r\n            this.hideElement(\"hallThrusterOnSublabelDiv\");\r\n            this.hideElement(\"hallThrusterNameLabelDiv\");\r\n            this.hideElement(\"hallThrusterNameSublabelDiv\");\r\n        }\r\n\r\n        if (this.state.scene[hallThrusterOn] === true)\r\n        {\r\n            this.hideElement(\"toggleButtonGroup\");\r\n            this.painter.draw_Hall_Thruster_On();\r\n\r\n            this.showElement(\"hallThrusterOnLabelDiv\");\r\n            this.showElement(\"hallThrusterOnSublabelDiv\");\r\n\r\n            this.hideElement(\"hallThrusterOffLabelDiv\");\r\n            this.hideElement(\"hallThrusterOffSublabelDiv\");\r\n        }\r\n\r\n        // Hall Thruster toggle button text\r\n        // programed backwards because of order of execution\r\n\r\n        //If the user turns the hall thruster on\r\n        if(this.state.scene[hallThrusterOn] === true){\r\n            HALL_THRUSTER_ON = true;\r\n            this.showElement(\"hallThrusterOn-fadeIn\")\r\n\r\n            this.thrusterButtonText = \"Off\";\r\n        }\r\n        //If the user turns the hall thruster off after it was just on\r\n        else if(HALL_THRUSTER_ON === true)\r\n        {\r\n            this.showElement(\"hallThrusterOn-fadeOut\")\r\n            this.thrusterButtonText = \"On\";\r\n\r\n            //HALL_THRUSTER_ON = false;\r\n        }\r\n        //If the hall thruster is off\r\n        //Also the first thing to happen in Hall Thruster view\r\n        else\r\n        {\r\n            this.hideElement(\"hallThrusterOn-fadeIn\")\r\n            this.hideElement(\"hallThrusterOn-fadeOut\")\r\n\r\n            this.thrusterButtonText = \"On\";\r\n        }\r\n\r\n        if(this.state.scene[hallThrusterOn] === false && this.state.scene[hallThrusterOff] === false)\r\n        {\r\n            this.hideElement(\"hallThrusterOn-fadeIn\")\r\n            this.hideElement(\"hallThrusterOn-fadeOut\")\r\n        }\r\n\r\n\r\n        if(this.state.scene[hallThrusterOn] === true) {\r\n            this.painter.draw_Hall_Thruster_On();\r\n\r\n        } else if (this.state.deltastage === hallThrusterOn) {\r\n            this.painter.clearCanvas(hallThrusterOn);\r\n\r\n        }else{\r\n            this.hideElement(\"hallThrusterOn-fadeOut\")\r\n            this.hideElement(\"hallThrusterOn-fadeIn\")\r\n        }\r\n\r\n        // if basedrawing is active\r\n        if(this.state.scene[base] === true){\r\n            // console.log('base cathode is drawing')//:debug\r\n            this.painter.draw_csv_Base_Drawing()\r\n            this.painter.clearCanvas(hallThrusterOn)\r\n            this.painter.clearCanvas(hallThrusterOff)\r\n\r\n\r\n            // if the user just toggled basedrawing\r\n            if(this.state.deltastage === base || this.state.deltastage === hallThrusterOn || this.deltastage === hallThrusterOff){\r\n                this.painter.draw_csv_Base_Drawing_guide();\r\n                this.setState({text: cathodeCSVText})\r\n            }\r\n\r\n            this.hideElement(\"hallThruster\")\r\n\r\n            //this.showElement(\"baseCathode\")//:unused?\r\n        }\r\n        //hide some elements that shouldn't be seen outside cross-sectional view\r\n        else if(this.state.scene[base] === false)\r\n        {\r\n            this.hideElement(\"baseCathode-fadeIn\");\r\n            this.hideElement(\"baseCathode-fadeOut\");\r\n            this.hideElement(\"thrusterAndCathode-fadeOut\");\r\n\r\n            this.hideElement(\"baseCathode\")\r\n\r\n        }\r\n        // the user deselected this option/layer\r\n        else if (this.state.deltastage === base){\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n        }\r\n\r\n        // if keeper electrode is active\r\n        if(this.state.scene[keeper] === true){\r\n            this.painter.draw_csv_keeper_electrode();\r\n            let t = document.getElementById(\"GasFeedToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"HeatInsertToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"KeeperElectrodeToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            // if the user just toggled the keeper electrode\r\n            if(this.state.deltastage === keeper){\r\n\r\n                this.setState({text: keeperText})\r\n            }\r\n        }\r\n        // if the user deselected this option/layer\r\n        else if (this.state.deltastage === keeper){\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n            this.painter.stopEjecting();\r\n        }\r\n\r\n        // if heat insert is active\r\n        if(this.state.scene[heat] === true){\r\n            let t = document.getElementById(\"GasFeedToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"HeatInsertToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"KeeperElectrodeToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            this.painter.draw_csv_Heat_Insert();\r\n\r\n            // if the user just toggled heat insert\r\n            if(this.state.deltastage === heat)\r\n            {\r\n\r\n                this.setState({text: heatText})\r\n            }\r\n        }\r\n        // if the user deselected this option/layer\r\n        else if (this.state.deltastage === heat){\r\n\r\n            this.painter.killElectronGenerator();\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n        }\r\n\r\n        // if gas feed is active\r\n        if(this.state.scene[gas] === true){\r\n            this.painter.draw_csv_gas_feed();\r\n            let t = document.getElementById(\"GasFeedToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"HeatInsertToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n            t = document.getElementById(\"KeeperElectrodeToggle\")\r\n            if(t.classList.contains(\"disabled\"))\r\n                t.classList.remove(\"disabled\")\r\n\r\n            // if the user just toggled the gas feed\r\n            if(this.state.deltastage === gas){\r\n\r\n                this.setState({text: gasText})\r\n            }\r\n        }\r\n        // if the user deselected this option/layer\r\n        else if (this.state.deltastage === gas){\r\n            this.painter.killXenonGenerator();\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n        }\r\n\r\n        // INTERNAL PLASMA // -----------\r\n        // if internal plasma is true\r\n        if(this.state.scene[plasma]){\r\n            if(this.state.scene[heat] && this.state.scene[gas]){\r\n                this.painter.draw_csv_internal_plasma();\r\n\r\n                // if the user  just triggered the internal plasma\r\n                if(this.state.deltastage === plasma){\r\n                    this.setState({text: plasmaText})\r\n                }\r\n            } else {\r\n                // plasma shouldn't exist\r\n                let newScene = this.state.scene;\r\n                newScene[plasma] = false;\r\n\r\n                // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n                this.setState((state, props) => {\r\n                    return { deltastage: plasma, scene: newScene };\r\n                }, () => {this.scenarioRefresh()});\r\n            }\r\n        }\r\n\r\n        // if both heat and gas are true but internal plasma isn't\r\n        else if (this.state.scene[heat] && this.state.scene[gas]){\r\n            // there probably should be internal plasma?\r\n\r\n            // see if plasma should be required to be next in line\r\n            if(this.state.deltastage === heat || this.state.deltastage === gas){\r\n                // show next button (restrict user mobility)\r\n                this.painter.clearCanvas(plasma);\r\n                this.hideElement(\"toggleButtonGroup\");\r\n                this.showElement(\"nextButton\");\r\n                document.getElementById('nextButton').style.display='block';\r\n                document.getElementById(\"nextButton\").onclick = this.nextButton_plasma_HandleClick;\r\n            }\r\n        }\r\n        // if plasma is false and deltastage is plasma\r\n        else if (this.state.deltastage === plasma){\r\n            // the user deselected this option/layer\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n            this.painter.stopIonizing();\r\n\r\n            // if internal plasma stops because ___ call ___ explanation\r\n            if(!this.state.scene[heat]){\r\n                this.painter.draw_csv_internal_plasma_off_heat_guide();\r\n            } else if(!this.state.scene[gas]){\r\n                this.painter.draw_csv_internal_plasma_off_gas_guide();\r\n            }\r\n        }\r\n\r\n        // EJECT PLASMA // -----------\r\n        if(this.state.scene[eject]){\r\n            if(this.state.scene[heat] && this.state.scene[gas] && this.state.scene[plasma] && this.state.scene[keeper]){\r\n                this.painter.draw_csv_eject_plasma();\r\n\r\n                // if the user just triggered eject plasma\r\n                if(this.state.deltastage === eject){\r\n                    this.setState({text: ejectText})\r\n                }\r\n            } else {\r\n                // plasma shouldn't eject\r\n                let newScene = this.state.scene;\r\n                newScene[eject] = false;\r\n\r\n                // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n                this.setState((state, props) => {\r\n                    return { deltastage: eject, scene: newScene };\r\n                }, () => {this.scenarioRefresh()});\r\n            }\r\n        }\r\n        else if (this.state.scene[heat] && this.state.scene[gas] && this.state.scene[plasma] && this.state.scene[keeper]){\r\n            // there probably should be ejecting plasma?\r\n\r\n            // see if eject should be required to be next in line\r\n            if(this.state.deltastage === keeper){\r\n                // show next button (restrict user mobility)\r\n                this.painter.clearCanvas(eject);\r\n                this.hideElement(\"toggleButtonGroup\");\r\n                this.showElement(\"nextButton\");\r\n                document.getElementById(\"nextButton\").onclick = this.nextButton_eject_HandleClick;\r\n            }\r\n        }\r\n        // if eject is false and deltastage is plasma\r\n        else if (this.state.deltastage === eject){\r\n            // the user deselected this option/layer\r\n            this.painter.clearCanvas(this.state.deltastage);\r\n            this.painter.stopEjecting();\r\n\r\n            // if ejecting plasma stops bcz ___ call ___ explanation\r\n            // if(!this.state.scene[heat]){\r\n            //     this.painter.draw_csv_eject_plasma_off_heat_guide();\r\n            // } else if(!this.state.scene[gas]){\r\n            //     this.painter.draw_csv_eject_plasma_off_gas_guide();\r\n            // } else if(!this.state.scene[plasma]){\r\n            //     this.painter.draw_csv_eject_plasma_off_plasma_guide();\r\n            // } else if(!this.state.scene[keeper]){\r\n            //     this.painter.draw_csv_eject_plasma_off_keeper_guide();\r\n            // }\r\n        }\r\n        //GAS ON, KEEPER ON, NO PLASMA\r\n        if (this.state.scene[gas] === true  && this.state.scene[keeper] === true && this.state.scene[plasma] === false && (this.state.deltastage === gas || this.state.deltastage === keeper)) {\r\n            if(this.state.deltastage === keeper){\r\n                let t = document.getElementById(\"HeatInsertToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"GasFeedToggle\")\r\n                t.classList.add(\"disabled\")\r\n            }\r\n            else{\r\n                let t = document.getElementById(\"HeatInsertToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"KeeperElectrodeToggle\")\r\n                t.classList.add(\"disabled\")\r\n\r\n            }\r\n            this.setState({text: gasKeeperErrorText});\r\n\r\n        }\r\n\r\n        //HEAT ON, KEEPER ON, NO PLASMA\r\n        if(this.state.scene[heat] && this.state.scene[keeper] && !this.state.scene[plasma] && (this.state.deltastage === heat || this.state.deltastage === keeper)) {\r\n            this.setState({text: heatKeeperErrorText})\r\n            if(this.state.deltastage === keeper){\r\n                let t = document.getElementById(\"HeatInsertToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"GasFeedToggle\")\r\n                t.classList.add(\"disabled\")\r\n            }\r\n            else{\r\n                let t = document.getElementById(\"GasFeedToggle\")\r\n                t.classList.add(\"disabled\")\r\n                t = document.getElementById(\"KeeperElectrodeToggle\")\r\n                t.classList.add(\"disabled\")\r\n\r\n            }\r\n        }\r\n\r\n        //TODO this is a bad solution for checking the user has completed learning mode\r\n        if(this.state.scene[base] === true\r\n            && this.state.scene[heat] === true\r\n            && this.state.scene[gas] === true\r\n            && this.state.scene[plasma] === true\r\n            && this.state.scene[keeper] === true\r\n            && this.state.scene[eject] === true){\r\n            this.hideElement(\"toggleButtonGroup\");\r\n            this.showElement(\"nextButton\");\r\n            document.getElementById(\"nextButton\").onclick = this.nextButton_end_HandleClick;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * HeatInsertToggle_HandleClick()\r\n     * Onclick handler for the heat insert toggle button\r\n     */\r\n    HeatInsertToggle_HandleClick() {\r\n        // let c = document.getElementById('canvas0');\r\n        // let ctx = c.getContext('2d');\r\n        // ctx.rotate(-15*Math.PI/180);\r\n        let newScene = this.state.scene;\r\n        newScene[heat] = !newScene[heat];\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: heat, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n        // WARNING: code past setState will not be synchronously executed\r\n    }\r\n\r\n    /**\r\n     * GasFeedToggle_HandleClick()\r\n     * Onclick handler for the gas feed toggle button\r\n     */\r\n    GasFeedToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[gas] = !newScene[gas];\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: gas, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n        // WARNING: code past setState will not be synchronously executed\r\n    }\r\n\r\n    /**\r\n     * KeeperElectrodeToggle_HandleClick()\r\n     * Onclick handler for the keeper electrode toggle button\r\n     */\r\n    KeeperElectrodeToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[keeper] = !newScene[keeper];\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: keeper, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n        // WARNING: code past setState will not be synchronously executed\r\n    }\r\n\r\n    /**\r\n     * nextButton_plasma_HandleClick()\r\n     * Onclick handler for the \"next\" button for the internal plasma scene, updates the state and DOM via appropriate logic\r\n     */\r\n    nextButton_plasma_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[plasma] = true;\r\n\r\n        // update DOM buttons (replace next with toggles)\r\n        this.hideElement(\"nextButton\");\r\n        this.showElement(\"toggleButtonGroup\");\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: plasma, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n    }\r\n\r\n    /**\r\n     * nextButton_shellToLearningModeCore_HandleClick()\r\n     */\r\n    async triggerZoom() {\r\n\r\n    }\r\n    async nextButton_shellToLearningModeCore_HandleClick() {\r\n\r\n        // trigger zoom animation\r\n        document.getElementById(\"shellToCrossZoom\").classList.add(\"shellToCrossZoomAnimationClass\")\r\n        this.hideElement(\"hallThruster\")\r\n        this.showElement(\"shellToCrossZoom\")\r\n\r\n        await this.delay(1300);\r\n\r\n        this.hideElement(\"shellToCrossZoom\");\r\n        this.showElement(\"shellFadeOut\");\r\n\r\n        this.hideElement(\"hallThrusterButtonGroup\");\r\n        this.showElement(\"toggleButtonGroup\");\r\n\r\n        this.hideElement(\"hallThrusterButtonGroup\");\r\n        this.hideElement(\"hallThrusterOffLabelDiv\");\r\n        this.hideElement(\"hallThrusterOnLabelDiv\");\r\n        this.hideElement(\"hallThrusterOffSublabelDiv\");\r\n        this.hideElement(\"hallThrusterOnSublabelDiv\");\r\n        this.hideElement(\"hallThrusterNameLabelDiv\");\r\n        this.hideElement(\"hallThrusterNameSublabelDiv\");\r\n        this.hideElement(\"HallThrusterNext\");\r\n        // this.hideElement(\"shellToCrossZoom\");\r\n\r\n        this.hideElement(\"hallThrusterOn-fadeIn\")\r\n        this.hideElement(\"hallThrusterOn-fadeOut\")\r\n        // this.hideElement(\"hallThruster\")\r\n        // this.showElement(\"shellToCrossZoom\")\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: base, scene: [true,false,false,false,false,false,false,false] };\r\n        }, () => {this.scenarioRefresh()});\r\n        this.scenarioRefresh()\r\n    }\r\n\r\n    /**\r\n     * nextButton_hallThrusterToShell_HandleClick()\r\n     */\r\n    nextButton_hallThrusterToShell_HandleClick() {\r\n        // transition out of \"on\" state before zooming\r\n        this.hideElement(\"hallThrusterOn-fadeIn\");\r\n        this.hideElement(\"hallThrusterOn-fadeOut\");\r\n\r\n        let nextButton = document.getElementById(\"HallThrusterNext\");\r\n        let nextButton_Accessible = document.getElementById(\"HallThrusterNext_Accessible\");\r\n\r\n\r\n        nextButton.classList.replace(\"CathodeHitBox_zoomed_out\", \"CathodeHitBox_zoomed_in\")\r\n        nextButton.onclick = this.nextButton_shellToLearningModeCore_HandleClick;\r\n        nextButton_Accessible.onclick = this.nextButton_shellToLearningModeCore_HandleClick;\r\n\r\n        // trigger zoom animation\r\n        document.getElementById(\"hallThruster\").classList.add(\"hallThrusterToCathodeZoom\")\r\n        //this.hideElement(\"hallThruster\")\r\n\r\n        // todo - change text (bad temporary implementation)\r\n        document.getElementById(\"hallThrusterNameLabel\").innerText = cathodeShellPrimaryTitleText;\r\n        document.getElementById(\"hallThrusterNameSublabel\").innerText = cathodeShellPrimaryText;\r\n        // todo - update red text to tell user to click the cathode again to remove its outer shell\r\n\r\n        this.hideElement(\"hallThrusterOffLabel\");\r\n        this.hideElement(\"hallThrusterOnLabel\");\r\n        this.hideElement(\"hallThrusterOffSublabel\");\r\n        this.hideElement(\"hallThrusterOnSublabel\");\r\n        this.hideElement(\"HallThrusterToggle\");\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: base, scene: [false,false,false,false,false,false,true,false] };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    hallThrusterToggle_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[hallThrusterOn] = !newScene[hallThrusterOn];\r\n\r\n        this.setState((state, props) => {\r\n            return { deltastage: hallThrusterOn, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * nextButton_eject_HandleClick()\r\n     * Onclick handler for the \"next\" button for the eject plasma scene, updates the state and DOM via appropriate logic\r\n     */\r\n    nextButton_eject_HandleClick() {\r\n        let newScene = this.state.scene;\r\n        newScene[eject] = !newScene[eject];\r\n        // update DOM buttons (replace next with normal toggles)\r\n        this.hideElement(\"nextButton\");\r\n        this.showElement(\"toggleButtonGroup\");\r\n        this.showElement(\"summaryButton_\")\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: eject, scene: newScene };\r\n        }, () => {this.scenarioRefresh()});\r\n    }\r\n\r\n    /**\r\n     * nextButton_end_HandleClick()\r\n     * Onclick handler for the \"next\" button for the eject plasma scene's ending\r\n     * this leads to the view were we show them some links to follow and such\r\n     */\r\n\r\n    /**\r\n     * LINK TO SUMMARY PAGE HERE!!!!\r\n     */\r\n    nextButton_end_HandleClick() {\r\n\r\n        if(this.state.deltastage===eject){\r\n            this.hideElement('nextButton');\r\n            this.showElement('summaryButton');\r\n        }\r\n        this.setState({text: recapText})\r\n\r\n    }\r\n\r\n    /**\r\n     * getLayer(layer)\r\n     * @param layer layer number which you want to get\r\n     * @returns ctx 2d canvas context for that layer\r\n     */\r\n    getLayer(layer){\r\n        return this.layers[layer];\r\n    }\r\n\r\n    render(){\r\n        // prompt user with warning on attempted page refresh - bind\r\n        window.onbeforeunload = function() {\r\n            return \"Refreshing this page returns you to our landing page, are you sure?\";\r\n        };\r\n\r\n        return (\r\n            <div id={'canvasHolder'}>\r\n                <canvas id={\"canvas0\"} ref={this.canvas0} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas1\"} ref={this.canvas1} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas2\"} ref={this.canvas2} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas3\"} ref={this.canvas3} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas4\"} ref={this.canvas4} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas5\"} ref={this.canvas5} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas6\"} ref={this.canvas6} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas7\"} ref={this.canvas7} className={\"canvas unselectable\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n\r\n                <img id={\"hallThruster\"} src={path_hall_thruster} className={\" \"} alt={\"Hall Thruster Off\"}/>\r\n\r\n                <img id={\"hallThrusterOn-fadeIn\"} src={path_hall_thruster_on} className={\"fade-in  \"} alt={\"Hall Thruster On: Fade In\"}/>\r\n                <img id={\"hallThrusterOn-fadeOut\"} src={path_hall_thruster_on} className={\"fade-out  \"} alt={\"Hall Thruster On: Fade Out\"}/>\r\n\r\n                <img id={\"shellToCrossZoom\"} src={path_hall_thruster} className={\"shellToCrossZoomAnimation\"} alt={\"Cathode shell to cathode cross section zoom\"}/>\r\n                <img id={\"shellFadeOut\"} src={path_hall_thruster} className={\" shell-fade-out\"} alt={\"Cathode shell fade out\"}/>\r\n\r\n                <img id={\"baseCathode-fadeIn\"} src={path_lm_csv} className={\"fade-in\"} alt={\"Hollow Cathode: Fade In\"}/>\r\n                <img id={\"baseCathode-fadeOut\"} src={path_lm_csv} className={\"fade-out\"} alt={\"Hollow Cathode: Fade Out\"}/>\r\n                <img id={\"thrusterAndCathode-fadeOut\"} src={path_hall_thruster} className={\"fade-out\"} alt={\"Thruster and Cathode: Fade Out\"}/>\r\n                <img id={\"baseCathode\"} src={path_lm_csv} alt={\"Base Hollow Cathode\"}/>\r\n                {/*<img id={\"testBaseCathode\"} src={\"/hollow-cathode-visualization/images/test_base_cathode.png\"} alt={\"\"}/>*/}{/*//:unused?*/}\r\n\r\n                <button id={\"HallThrusterNext\"}\r\n                        className={\"CathodeHitBox_zoomed_out\"}>\r\n                </button>\r\n\r\n                <div id={\"backToLandingPageButtonDiv\"} className={\"stackedButtonGroup bottomleftAlign\"} >\r\n                    <Link to={'/hollow-cathode-visualization/'}>\r\n                        <button id={\"backButton\"} className={\"button\"}> Back to Landing Page </button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div id={\"hallThrusterButtonGroup\"} className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                    <button id={\"HallThrusterNext_Accessible\"}\r\n                            className={\"button\"}> Next\r\n                    </button>\r\n                    <button id={\"HallThrusterToggle\"}\r\n                            className={\"button\"}\r\n                            onClick={this.hallThrusterToggle_HandleClick}> Turn Power {this.thrusterButtonText}\r\n                    </button>\r\n                </div>\r\n\r\n                {/*Hall thruster powered on label/title text*/}\r\n                <div id={\"hallThrusterOffLabelDiv\"}>\r\n                    <label id={\"hallThrusterOffLabel\"}\r\n                           className={\"titleLabel hallThrusterOffTitleLabelPos  \"}> The Hall Thruster Is Off\r\n                    </label>\r\n                </div>\r\n                {/*Hall thruster powered off text*/}\r\n                <div id={\"hallThrusterOffSublabelDiv\"}>\r\n                    <label id={\"hallThrusterOffSublabel\"}\r\n                           className={\"sublabel hallThrusterOffSublabelPos  \"}>\r\n                        {hallThrusterSecondaryOffText}\r\n\r\n                        <p><b id={\"guideText\"}>Click on the cathode to learn more about</b></p>\r\n                    </label>\r\n                </div>\r\n\r\n                {/*Hall thruster powered on label/title text*/}\r\n                <div id={\"hallThrusterOnLabelDiv\"}>\r\n                    <label id={\"hallThrusterOnLabel\"}\r\n                           className={\"titleLabel hallThrusterOffTitleLabelPos  \"}> The Hall Thruster Is On\r\n                    </label>\r\n                </div>\r\n\r\n                {/*Hall thruster powered on text*/}\r\n                <div id={\"hallThrusterOnSublabelDiv\"}>\r\n                    <label id={\"hallThrusterOnSublabel\"}\r\n                           className={\"sublabel hallThrusterOffSublabelPos  \"}>\r\n                        {hallThrusterSecondaryOnText}\r\n                        <p><b id={\"guideText\"}>Click on the cathode to learn more about</b></p>\r\n                    </label>\r\n                </div>\r\n\r\n                <div id={\"hallThrusterNameLabelDiv\"}>\r\n                    <label id={\"hallThrusterNameLabel\"}\r\n                           className={\"titleLabel hallThrusterNameTitleLabelPos\"}> Hall Thruster\r\n                    </label>\r\n                </div>\r\n\r\n                <div id={\"hallThrusterNameSublabelDiv\"}>\r\n                    <label id={\"hallThrusterNameSublabel\"}\r\n                           className={\"sublabel hallThrusterNameSublabelPos\"}>\r\n                        {hallThrusterPrimaryText}\r\n                    </label>\r\n                </div>\r\n\r\n                <div id={\"learningModeGuide\"} className={\"sublabel\"}>{this.state.text}</div>\r\n\r\n                <div id={\"toggleButtonGroup\"} className={\"stackedButtonGroup bottomrightAlign  \"}>\r\n                    <button id={\"HeatInsertToggle\"}\r\n                            className={\"button\"}\r\n                            onClick={this.HeatInsertToggle_HandleClick}> Toggle Heaters\r\n                    </button>\r\n                    <button id={\"GasFeedToggle\"}\r\n                            className={\"button\"}\r\n                            style={{display: \"block\"}}\r\n                            onClick={this.GasFeedToggle_HandleClick}> Toggle Gas Feed\r\n                    </button>\r\n                    <button id={\"KeeperElectrodeToggle\"}\r\n                            className={\"button\"}\r\n                            onClick={this.KeeperElectrodeToggle_HandleClick}> Toggle Keeper Electrode\r\n                    </button>\r\n                </div>\r\n                <button id={\"nextButton\"}\r\n                        className={\"button stackedButtonGroup bottomrightAlign\"}\r\n                        style={{display: \"none\"}}> Next\r\n                </button>\r\n\r\n                <Link to={'/hollow-cathode-visualization/summary'} id={'summaryButton'}>\r\n                    <button id={'summaryButton_'} className={\"button stackedButtonGroup bottomCenterAlign\"} hidden={true}>\r\n                        Summary\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LearningMode;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport LandingPage from \"./LandingPage.js\";\r\nimport Painter from \"./Painter\";\r\n\r\n/**\r\n * Mapping layers via constants\r\n * These should always be used to reference layers when used as parameters to a function or when interacting with this.state.\r\n * This allows us to easily add and remove layers.\r\n */\r\nimport {\r\n    base,\r\n    eject,\r\n    gas,\r\n    heat,\r\n    keeper,\r\n    plasma\r\n} from \"./Galactic\";\r\nimport ProtoParticle from \"./ProtoParticle\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n/**\r\n * Presentation mode element\r\n * Should be rendered inside a <div id={\"canvasHolder\"}>\r\n * also with props: id={\"PresMode\"} deltastage={base} scene={[true,false,false,false,false,false]}\r\n */\r\nclass PresMode extends React.Component {\r\n    // Instance variables:\r\n    // (all basically cosmetic) (created in constructor)\r\n    deltastage;\r\n    scene;\r\n    canvas;\r\n    layers; // layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5]; //layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5];\r\n    painter;\r\n    static isAuto = false;\r\n\r\n    constructor(props){\r\n        super();\r\n\r\n        // initialize canvas instance variables\r\n        this.canvas0 = React.createRef();                              //// 1 - create ref\r\n        this.canvas1 = React.createRef();\r\n        this.canvas2 = React.createRef();\r\n        this.canvas3 = React.createRef();\r\n        this.canvas4 = React.createRef();\r\n        this.canvas5 = React.createRef();\r\n\r\n        this.canvas6 = React.createRef();   //Hall Thruster OFF\r\n        this.canvas7 = React.createRef();   //Hall Thruster ON\r\n\r\n        // bind handler function(s)\r\n        this.nextButton_HandleClick = this.nextButton_HandleClick.bind(this);\r\n        this.autoToggleButton_HandleClick = this.autoToggleButton_HandleClick.bind(this)\r\n\r\n        //sets ID of the autonomous interval to an used value by default\r\n        this.autoID = 0\r\n        this.delay = 5000\r\n\r\n        // initialize state\r\n        this.state = { deltastage: props.deltastage, scene: props.scene };\r\n\r\n        this.state.canvas_height = document.getElementById(\"page-container\").clientHeight;\r\n        this.state.canvas_width = document.getElementById(\"page-container\").clientWidth;\r\n    }\r\n\r\n    /**\r\n     * componentDidMount()\r\n     * Called when canvas element is mounted on page (canvas element is unusable up until this point)\r\n     */\r\n    componentDidMount() {\r\n        // an attempted fix for reloading breaking pages\r\n        // if(this.state.canvas_width === 0 || this.state.canvas_height === 0){\r\n        //     this.state.canvas_height = document.getElementById(\"page-container\").clientHeight;\r\n        //     this.state.canvas_width = document.getElementById(\"page-container\").clientWidth;\r\n        // }\r\n\r\n        // initialize instance variables for each canvas element/layer\r\n        const ctx0 = this.canvas0.current.getContext('2d'); // base = 0;\r\n        const ctx1 = this.canvas1.current.getContext('2d'); // heat = 1;\r\n        const ctx2 = this.canvas2.current.getContext('2d'); // gas = 2;\r\n        const ctx3 = this.canvas3.current.getContext('2d'); // plasma = 3;\r\n        const ctx4 = this.canvas4.current.getContext('2d'); // keeper = 4;\r\n        const ctx5 = this.canvas5.current.getContext('2d'); // eject = 5;\r\n        const ctx6 = this.canvas6.current.getContext('2d'); // Hall Thruster OFF = 6;\r\n        const ctx7 = this.canvas7.current.getContext('2d'); // Hall Thruster ON = 7;\r\n\r\n        this.layers = [ctx0, ctx1, ctx2, ctx3, ctx4, ctx5, ctx6, ctx7];\r\n        //      layers[base = 0, heat = 1, gas = 2, plasma = 3, keeper = 4, eject = 5, thruster off = 6, thruster on = 7];\r\n        this.painter = new Painter(this.layers);\r\n        this.scenarioRefresh();\r\n        PresMode.isAuto= false;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // prompt user with warning on attempted page refresh - unbind\r\n        window.onbeforeunload = function() {};\r\n    }\r\n\r\n\r\n    /**\r\n     * scenarioRefresh()\r\n     *\r\n     * Populates the canvas based on the current state, is hopefully called whenever a change is made (ex: the onClick functions)\r\n     * You can see the end of this function as the end of the current update/iteration.\r\n     */\r\n    scenarioRefresh() {\r\n        // console.log(\"PresMode.scenarioRefresh() called\"); //:debug\r\n\r\n        // console.log(\"   scenarioRefresh:: this.state.deltastage\", this.state.deltastage); //:debug\r\n        // console.log(\"   scenarioRefresh:: this.state.scene\", this.state.scene); //:debug\r\n        // clear all drawings if the user just entered presentation mode or it looped back to the beginning\r\n        if (this.state.scene[base] === true && this.state.scene[heat] === false) {\r\n            // clear every layer, and all particles, and all generators\r\n            this.painter.killProtoParticle();\r\n            for (let i = base; i < this.state.scene.length; i++) {\r\n                this.painter.clearCanvas(i);\r\n            }\r\n        }\r\n\r\n        // if basedrawing is active\r\n        if (this.state.scene[base] === true) {\r\n            //this.draw_csv_Base_Drawing();\r\n\r\n            //draw base cathode\r\n            this.painter.draw_csv_Base_Drawing();\r\n        }\r\n\r\n        // if heat insert is active\r\n        if (this.state.scene[heat] === true) {\r\n            this.painter.draw_csv_Heat_Insert();\r\n        }\r\n\r\n        // if gas feed is active\r\n        if (this.state.scene[gas] === true) {\r\n            this.painter.draw_csv_gas_feed();\r\n        }\r\n\r\n        // if internal plasma is active\r\n        if (this.state.scene[plasma] === true) {\r\n            this.painter.draw_csv_internal_plasma();\r\n        }\r\n\r\n        // if keeper electrode is active\r\n        if (this.state.scene[keeper] === true) {\r\n            this.painter.draw_csv_keeper_electrode();\r\n        }\r\n\r\n        // if eject plasma is active\r\n        if (this.state.scene[eject] === true) {\r\n            this.painter.draw_csv_eject_plasma();\r\n        }\r\n\r\n        // console.log(\"-----------------------------scenarioRefresh (end)-----------------------------\"); //:debug\r\n    }\r\n\r\n    /**\r\n     * nextButton_HandleClick()\r\n     * Onclick handler for the \"next\" button, updates the state via appropriate logic\r\n     */\r\n    nextButton_HandleClick() {\r\n        let newdeltastage = this.state.deltastage;\r\n        let newscene = this.state.scene;\r\n\r\n        // update the state, currently does not show hall thruster information, and skips those steps entirely by design\r\n        if(this.state.deltastage === this.state.scene.length - 3){\r\n            // special case: loop to beginning         note: this loop intentionally starts at 1 instead of zero\r\n            for (let i = 1; i < this.state.scene.length; i++) {\r\n                newdeltastage = base;\r\n                newscene[i] = false;\r\n            }\r\n        } else {\r\n            // normal case: move to next animation stage\r\n            for (let i = 1; i < this.state.scene.length; i++) {\r\n                if(this.state.scene[i] === false){\r\n                    newdeltastage = i;\r\n                    newscene = this.state.scene;\r\n                    newscene[i] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // change the current state, refresh scenario in callback to synchronously update the visuals after the state has changed\r\n        this.setState((state, props) => {\r\n            return { deltastage: newdeltastage, scene: newscene };\r\n        }, () => {this.scenarioRefresh()});\r\n\r\n        // WARNING: code past setState will not be synchronously executed\r\n    }\r\n\r\n    /**\r\n     * backButton_HandleClick()\r\n     * Onclick handler for the \"back\" button, reloads the landing page\r\n     */\r\n    // backButton_HandleClick() {\r\n    //     // render learning mode\r\n    //     ReactDOM.render(\r\n    //         <div id={\"canvasHolder\"}>\r\n    //             <LandingPage id={\"landingPage\"}/>\r\n    //         </div>,\r\n    //         document.getElementById('root')\r\n    //     );\r\n    // }\r\n\r\n    /**\r\n     * autoToggleButton_HandleClick()\r\n     * Onclick handler for the \"Autonomous/Manual\" button, starts the looping progress\r\n     */\r\n    autoToggleButton_HandleClick() {\r\n        PresMode.isAuto = !PresMode.isAuto;\r\n        console.log(PresMode.isAuto);\r\n        if(PresMode.isAuto){\r\n            //when in auto mode, the next button is hidden, but the handler function for 'next' is run every this.delay (currently 5000) milliseconds\r\n            document.getElementById(\"nextButton\").style.visibility = 'hidden'\r\n            this.autoID = setInterval(()=>{this.nextButton_HandleClick()}, this.delay)\r\n        }\r\n        else{\r\n            //when out of auto mode, the interval is stopped, and the 'next' button is returned\r\n            document.getElementById(\"nextButton\").style.visibility = 'visible'\r\n            clearInterval(this.autoID)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        // prompt user with warning on attempted page refresh - bind\r\n        window.onbeforeunload = function() {\r\n            return \"Refreshing this page returns you to our landing page, are you sure?\";\r\n        };\r\n\r\n        return (\r\n            <div id={'canvasHolder'}>\r\n                <canvas id={\"canvas0\"} ref={this.canvas0} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas1\"} ref={this.canvas1} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas2\"} ref={this.canvas2} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas3\"} ref={this.canvas3} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas4\"} ref={this.canvas4} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas5\"} ref={this.canvas5} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas6\"} ref={this.canvas6} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n                <canvas id={\"canvas7\"} ref={this.canvas7} className={\"canvas\"} width={this.state.canvas_width} height={this.state.canvas_height} deltastage={this.state.deltastage} scene={this.state.scene} > You need a better browser :( </canvas>\r\n\r\n                <div className={\"stackedButtonGroup bottomleftAlign\"}>\r\n                    <Link to={'/hollow-cathode-visualization/'}>\r\n                        <button id={\"backButton\"} className={\"button\"}> Back to Landing Page </button>\r\n                    </Link>\r\n                    <button id={\"autoToggleButton\"} className={\"button\"} onClick={this.autoToggleButton_HandleClick}> Toggle Mode </button>\r\n                </div>\r\n                <div className={\"stackedButtonGroup bottomrightAlign\"}>\r\n                    <button id={\"nextButton\"} className={\"button\"} onClick={this.nextButton_HandleClick}> Next </button>\r\n                </div>\r\n            </div>\r\n        ) //// 2 - attach ref to node via ref = this.canvas#\r\n    }\r\n}\r\n\r\nexport default PresMode;","import {Link} from \"react-router-dom\";\r\nimport React from 'react'\r\nimport PresMode from \"./PresMode\";\r\nimport {base, recapText} from \"./Galactic\";\r\nimport Painter from \"./Painter\";\r\n\r\n\r\nclass SummaryPage extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        PresMode.isAuto = false;\r\n        console.log(PresMode.isAuto);\r\n        if (PresMode.isAuto === false){\r\n            console.log(\"Summary toggle result: \"+PresMode.isAuto);\r\n            document.getElementById('autoToggleButton').click();\r\n        }\r\n        document.getElementById('autoToggleButton').style.display='none';\r\n        document.getElementById('nextButton').display= 'none';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // prompt user with warning on attempted page refresh - unbind\r\n        window.onbeforeunload = function() {};\r\n    }\r\n\r\n    render(){\r\n        // prompt user with warning on attempted page refresh - bind\r\n        window.onbeforeunload = function() {\r\n            return \"Refreshing this page returns you to our landing page, are you sure?\";\r\n        };\r\n\r\n        return(\r\n            <>\r\n                <div>\r\n                    <div className={'summaryTitlePos'}>\r\n                        HOLLOW CATHODE VISUALIZATION SUMMARY\r\n                    </div>\r\n                    <div id={'summaryContent'} className={'summarySubLabel summarySubLabelPos'}>\r\n                        <p>\r\n                            {recapText}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <PresMode id={\"presMode\"} deltastage={base} scene={[true, false, false, false, false, false, false, false]} onClick={\"eventHandle\"}/>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryPage;","import React from \"react\";\r\n\r\nclass RefComponent extends React.Component{\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        /* I moved this inline styling into its class (referenceDiv) */\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div id={'ref'} className={\"referenceDiv\"}> {/* I moved the inline styling into its class (referenceDiv) */}\r\n            <div className={\"summaryTitlePos\"}>\r\n                REFERENCES\r\n            </div>\r\n            <div className={'summarySubLabel summarySubLabelPos'}>\r\n                <label>\r\n                    [1]    D. M. Goebel and I. Katz, “Fundamentals of Electric Propulsion: Ion and Hall Thrusters,” <i>JPL Space Science & Technology Series</i>, chapter 1-2, Mar. 2008. Available: <a href={\"https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf\"} className={'reference-link'}>https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    [2]    D. M. Goebel and I. Katz, “Fundamentals of Electric Propulsion: Ion and Hall Thrusters,” <i>JPL Space Science & Technology Series</i>, chapter 6, Mar. 2008. Available: <a href={\"https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf\"} className={'reference-link'}>https://descanso.jpl.nasa.gov/SciTechBook/series1/Goebel__cmprsd_opt.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    [3]    “Glossary,” Glossary | MIT Plasma Science and Fusion Center, 2021. [Online]. Available: <a href={\"https://www.psfc.mit.edu/vision/glossary.\"} className={'reference-link'}>https://www.psfc.mit.edu/vision/glossary.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label>\r\n                    [4]    J. D. Frieman, “CHARACTERIZATION OF BACKGROUND NEUTRAL FLOWS IN VACUUM TEST FACILITIES AND IMPACTS ON HALL EFFECT THRUSTER OPERATION,” dissertation, Georgia Institute of Technology, Atlanta, GA, 2017. Available: <a href={\"https://mwalker.gatech.edu/papers/FRIEMAN-DISSERTATION-2017.pdf\"} className={'reference-link'}>https://mwalker.gatech.edu/papers/FRIEMAN-DISSERTATION-2017.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n                <label style={{\"margin-bottom\":\"3rem\"}}>\r\n                    [5]    S. T. Lai and K. Cahoy, “Spacecraft Charging,” Encyclopedia of Plasma Technology, pp. 1352–1366, Dec. 2016. Available: <a href={\"https://www.bc.edu/content/dam/files/research_sites/isr/pdf/2017%20Lai%20%26%20Cahoy%20-%20Encyclo.pdf\"} className={'reference-link'}>https://www.bc.edu/content/dam/files/research_sites/isr/pdf/2017%20Lai%20%26%20Cahoy%20-%20Encyclo.pdf.</a> [Accessed: 09-Oct-2021].\r\n                </label>\r\n                <br/>\r\n                <br/>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RefComponent;","import './App.css';\r\nimport './landingPage.css';\r\nimport React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport LandingPage from \"./LandingPage\";\r\nimport LearningMode from \"./LearningMode\";\r\nimport PresMode from \"./PresMode\";\r\nimport SummaryPage from \"./SummaryPage\";\r\nimport RefComponent from \"./Ref.component\";\r\nimport {base, hallThrusterOff} from \"./Galactic\";\r\n\r\nfunction MyRouter(){\r\n    return(\r\n        <Router>\r\n            <div className={\"showWhenTooSmall\"}>\r\n                <p>\r\n                    Your window size is too small for this visualization.\r\n                    Please set your window size to full screen before continuing.\r\n                </p>\r\n            </div>\r\n            <div className={\"hideWhenTooSmall\"}>\r\n                <Routes>\r\n                    <Route path={'/hollow-cathode-visualization/'} element={<LandingPage id={\"LandingPage\"}/>}/>\r\n                    <Route path={'/hollow-cathode-visualization/learning'} element={<LearningMode id={\"LearningMode\"} deltastage={hallThrusterOff}\r\n                                                                              scene={[false, false, false, false, false, false, true, false]}/>}/>\r\n                    <Route path={'/hollow-cathode-visualization/presentation'} element={<PresMode id={\"presMode\"} deltastage={base}\r\n                                                                              scene={[true, false, false, false, false, false, false, false]}/>}/>\r\n                    <Route path={'/hollow-cathode-visualization/summary'} element={<SummaryPage/>}/>\r\n                    <Route path={'/hollow-cathode-visualization/ref'} element={<RefComponent/>}/>\r\n                    <Route path={'*'} element={<LandingPage id={\"LandingPage\"}/>}/>\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default MyRouter;","import './App.css';\r\nimport './landingPage.css';\r\nimport React from 'react';\r\n\r\nimport HeaderComponent from \"./Header.component.\";\r\nimport FooterComponent from \"./Footer.component\";\r\n\r\nimport MyRouter from \"./myRouter\";\r\n// dummy data to push images, please delete this comment if you see it //:debug\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <HeaderComponent/>\r\n            <div id=\"page-container\">\r\n                <noscript>You need to enable JavaScript to run this app.</noscript>\r\n                <div id=\"root\" className=\"App App-header\">\r\n                    <MyRouter />\r\n                </div>\r\n            </div>\r\n            <FooterComponent/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './landingPage.css';\r\nimport './App.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('body')\r\n);"],"sourceRoot":""}